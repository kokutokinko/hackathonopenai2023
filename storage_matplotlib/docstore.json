{"docstore/metadata": {"2cc54363-1dcd-44bc-a3e5-b7a1f24943f4": {"doc_hash": "14acc8835fdb00329adafdf251518e875162e03db85da0b2f9f12fb8648a8543"}, "89fba5a9-67e2-4eb5-abe6-da452527f20b": {"doc_hash": "ceb17a98463821616c495d315d5db3fc902af39455ae8c2a39b712fd6b225662"}, "8163913d-ccbd-419d-bc00-8e58732f0fac": {"doc_hash": "003a7fb0208e5dfc9b9e21a0addc3cf2eddefc3eafdf64960cbf0e6ed235173e"}, "84cfefcc-9ad0-43c5-a51a-57c45142558b": {"doc_hash": "32be5babb4f136e1db5c7533443453991f5e11027243fc4ded690eb1e20a6156"}, "fe555328-12a9-45f4-b8ad-b9fbedd623df": {"doc_hash": "38b7a00cecb1f7b694e946e3f15ffd6aba5137354e7fed153abc82fa56fd56f2"}, "0a64953c-dbb9-4c4e-8342-55e074c1a387": {"doc_hash": "a349b454fd1c2facce0febd5d3fe5cc08839d42064983d42f64e0938e383314d"}, "0b9709e6-1b0a-4843-9472-891049926598": {"doc_hash": "37352cce4d1d2d0faf9650a19d15dde7f17148bfd9aca8fc596eb49c3a760b3a"}, "29d607dc-9d3f-4a6c-8ce9-2153925b0407": {"doc_hash": "9c80818b3b7e913f27deb4301e5e2ba159155e6b91bca5bbad1100770e8c466a"}, "c13b8d4e-ad89-4fe0-bf5b-c5c2a1228e72": {"doc_hash": "6eb0b15de59db4a6b43ee421879ea12b34b72380e6098f73f9c0a638254b60ff"}, "70328127-e70b-472c-8a7e-bea0e8a65703": {"doc_hash": "1ee6e5333c914b20d3abe7e943d53b2c379cd7b57e23f674e982855a512a8d44"}, "402ec030-3fb4-4018-bcdd-5308a6575284": {"doc_hash": "e70c97d75e4f1c083fbd38cb2c0ac15ff6ef5f52b066a8806be9a65ef24652fa"}, "19af61ee-a052-4192-93ec-d0040315bac1": {"doc_hash": "c24238235b90646eb4424b04993d397a00a46c905ed6e47c3d3af109bd942745"}, "66f0df93-c8b2-457d-8822-669a847faf1e": {"doc_hash": "72dba1ac744303519a89f10b0b84c2fe754909ceaeab568982df7dde637b0d45"}, "40e0131c-28aa-483f-98af-41b1e81b2756": {"doc_hash": "fd1a90c513a314ca7ad0a218f174f2aedb541d1c0adbeba56b512d2210e46cdc"}, "35deea04-7fc0-4524-b940-94ada213b3ad": {"doc_hash": "75d369908f34c99404518a1d92c4b5ae445b3a263d7efb914538a832944a9f6b"}, "8ed614c1-b29d-4e0b-8f82-214ff157076b": {"doc_hash": "68d815bbf8960a0c28e6f1a6544ca96e28e05b818beabc4d2a463efc564b9bbb"}, "2fc6c1d5-6a22-4b97-8112-e25f4a2f87e1": {"doc_hash": "6dbea85a084f776dd4bb83559fef01dcd50abbc107c5e1b03dfe57f02c8251af"}, "37f5bc0e-4eae-4048-a1ec-33c13b47e551": {"doc_hash": "05b5838ff56c68ec643cdb88087cde2ccc7c2ac58f68289a97f3aef0884dc9d7"}, "f92adc74-8c4c-41c4-ba86-c21bbbc505d7": {"doc_hash": "c88cc370de563c041167e2fa8708cd2a8f0b84e79655790e4c3e5fd666b5f977"}, "1a5b38da-2fbb-43d3-8969-1d8fe8ca01be": {"doc_hash": "78417792b028e46bc1c0184eea320d4a93a6180b718a4cb61cedbde63a88a866"}, "c4f5b381-badf-4ee5-9a33-fade9f2a745c": {"doc_hash": "582b90475bfa62c6dd33186a4038d1e4565091d4414ddc5c1f613872f4f63b3f"}, "0e336b17-2452-4823-9720-d539be5249ba": {"doc_hash": "223ef8a685fa6c1e33d2172adb2e6bbdfcb48f6e7999f43f30f511f13294df39"}, "d81890ff-271a-4519-bfe7-cbf55c28ca15": {"doc_hash": "9ed86c48c6bbdb27b8267ed56b5d50cc2628ee992152ba6324dc2a2c244d921d"}, "a08f81e6-f2e0-4038-9bd3-f74f1ed29750": {"doc_hash": "1b18bccdbcbd3a5b671745d7c584b6669c7138a06a01efca563671f98d964ce4"}, "958796be-a12e-499c-b6b8-e084617998dd": {"doc_hash": "5640144e2c984270c6ffc39d571700dc74b624c07a940cbda78ff332af459b4e"}, "8ec40b5f-f75c-4096-a0d3-4d6d3df637cd": {"doc_hash": "bddc15580e857e436f9cbc4e237d0b3260c847ba3189a1ff29dce2bf71705dc1"}, "b9833daf-11ec-4a70-b081-ab4a8ed54ba1": {"doc_hash": "e1b770ffcec5ba91ac3750278ac12fdf8f991f367adf713aab39d8d3fb8708cb"}, "19269416-37a5-4137-9ad5-24ffee2ef565": {"doc_hash": "e67952b2a7f0c97f15f45182d08452f770bbef42df20ac0ef8096afced93ad65"}, "139ecf1c-cc2e-42ae-b368-02d1a074e39f": {"doc_hash": "fc535f61adba48a355aaf1bf361d7ae5c46ed6f5df55db67589eb9a7d921b3b7"}, "07e6eb64-1f15-40b4-9093-f9bfaea87d64": {"doc_hash": "0620eb2f2fa5c8e86452c30043e12f17e417413bff2011f4e76db75c788a9f45"}, "b2fd04aa-de91-4e14-8db7-466323a29c73": {"doc_hash": "93017733b6be116f0b784d3b14a1e439392a20c267072d316edcdc8365cbf2d9"}, "b557c7cf-654e-41eb-977c-9f5585160233": {"doc_hash": "69db0f3c448c03177214fbebf8913a4973c04d8227877541d7da781c166e5ae1"}, "e0be1f3e-a951-43ac-a972-8e8241ab01a7": {"doc_hash": "137cd1299ceffdb66f20c4d16353bf6940aaf93e3644faaad3f3717a0a60d81e"}, "864e8906-6aef-4edf-9dae-3489e5d98d37": {"doc_hash": "54d14a8ea22bb3167686e56b6c87e31fb25ef710017bbf2dc60046ae0254c892"}, "8bebf884-4c80-41ee-b53e-3580146b985f": {"doc_hash": "92ab547aac4a251c700b6f12915c6f615d50337fbf6f64cd86781bd9046360f9"}, "d738f519-dddf-46fb-9f51-0e381e11941d": {"doc_hash": "0fc887cb51ff0f79d929c457e0fb280922bad165b053ee5f2f52744f7cb3913b"}, "1881f836-9aa5-4557-ae0e-227bdca24188": {"doc_hash": "a166ed429d92c1159365d95ca7fdb5d26977039b5190a833f1864cd039d39638"}, "6770dc41-4100-4a9a-899a-51c1d709f03d": {"doc_hash": "462ee032fcdd20e516a898eb80226601702fd2672478663c706db296af5bd88b"}, "abd3c765-a596-45df-9c44-95c9ee362e25": {"doc_hash": "37a1af2ab4793e480a90a948d9ad7441ea9feabf6b7d06ee4f47daeffbc7fce8"}, "c77e149d-83c9-412a-a38c-a78868c482ef": {"doc_hash": "b12557207a66f5f00f128e398012021de6d1d27bf2dc6dc6e0e253330cc37eca"}, "78e67e89-def0-471d-b7d9-12116b376314": {"doc_hash": "bc43795ccaecb797eca9bee0d45082dc904969c2f4d6d120b2b8424d18230c1a"}, "03f73099-1e5c-4c67-927c-907a9b3195b0": {"doc_hash": "d6bcba05a3d24c338452abf7642a7d28d00fdf14f21784fb15210b731e2dc294"}, "91d4a183-d833-48e2-8ca7-14e0731f9c2d": {"doc_hash": "a809adb65f6e6fab7c4e7ccc359672481b2ed533e72ba6b18b0fa4c508ec2f50"}, "a5b0dccd-0c60-4bd8-a56d-c1e3f1cc6156": {"doc_hash": "1e679024f3f1d98ebe9efec8a16b3d662d064a6cf7472259df04f87416d93cec"}, "62f25b1d-2f8a-430a-a061-7cdd42e07341": {"doc_hash": "45cbf8c0efb6ecbe43b0a16bc2fa8b8735a927c1d8a9bd08a19f3ea70b4af693"}, "f39b4602-ea1f-495d-b2ec-5e179dcb1ed2": {"doc_hash": "7b6ac683eee0e000c1a27d62dcf4684065c4d3b2722425f9b28d07e856139f82"}, "184e5c3f-4213-4131-94a4-46d7cc9bdd3e": {"doc_hash": "5d7852af94066a25e6e5298712893870930a2f0cff0445c262854d4f493b0f7e"}, "250a36d5-a2e8-4d8c-a536-4e8106bcdedf": {"doc_hash": "26ab80d2350b5131b627e774253ebcb61b147228865e5720a65cc03df305b436"}, "3257b867-6f4d-485c-8229-5546be751bb8": {"doc_hash": "e5d7216c17b7f9a3141cc959fc76dff5dbd4b15e5aa84158c56523fe360e7459"}, "cd14f665-ab80-4e3a-aa5c-6d4aef85c24f": {"doc_hash": "61185c966fcb3f4bf7ad048a1aaa3aa42d5228b44480c70d0f367d6eb5bd8f54"}, "e5676e2d-656f-4825-9deb-b7826fe0db3e": {"doc_hash": "b7d701212cde48ed88e71b2ba87d239fd6f5083a7f01b7aa040c0ebeea024293"}, "e9a4c097-95cf-44f9-a726-28f5c7b5ae13": {"doc_hash": "7c5a8b819a3f067a59458da1f655c02906d35296b5f28e97ced4e70ea8b44e62"}, "6b466d74-c628-43cd-8ecc-a262d4a8cfc4": {"doc_hash": "17d7c9e9fedb85b5a46af5b7431a5e1b28a915c0dafddd84b499dd69241d6d2c"}, "decb8f95-f894-4bbb-b3a1-90be0582ed72": {"doc_hash": "1ef059d7c880cebe8a9c81bfe3b3c767c1e1dc27593bb55a769c974985f0496c"}, "025f765d-28c9-4552-a97b-b275af3166b1": {"doc_hash": "8e80b6e0528813b28dd8ca64e24789f2dd1142cc47078355d75b587bbc50b8c6"}, "7e9d6202-c6e9-4d54-b6ed-c1d7a17342e0": {"doc_hash": "8a1a22ca93722a9134aa4ef7ea65377b4dc55df4cb9eea3f776666b30b71e452"}, "15e39797-d25c-40e8-a8cc-ab11a5562869": {"doc_hash": "790276a17819e32bf76bba2521d2c63fae82ceca152a8b075da56db9aff347b4"}, "04a8f462-08cb-4005-b852-d807be0bd6f1": {"doc_hash": "a306d7315e87b9934187746754732e2f59b5bfa347566d4c27d5b81cb98b5064"}, "dd179565-96a0-426b-b171-692a517c3770": {"doc_hash": "4d5b2aeb365392d47310c008b91b2d1302ed58f465cd074af2caadd9f9f7bf01"}, "b20a0780-b560-4b36-8ae3-c9da461588ad": {"doc_hash": "980d5b27851297039e500ae40dd8390772768283e8534a32bf6db4a5b9c46107"}, "2db3c2e7-ef60-4995-bc53-0abc262306b8": {"doc_hash": "9df4c10016980ca24f612108ab5ebdfa36411921486b1ce17329d758975e7444"}, "1d64a832-24b2-48cb-b05d-971fa3e0f453": {"doc_hash": "2adc1169058a681c7fdef7e72d74ac56bd074a9d877020ce85d3332b1df1e618"}, "84e8f062-fa23-4a51-bd3e-a8c862f97911": {"doc_hash": "3480949abc4657792b116128d21f32b980603b68d8f1b0c3a94a7afda1ab4839"}, "1f979ee9-2ec1-470d-953d-5148d19ffc01": {"doc_hash": "e849869ea7688275b77d95a7669eb4561909be491e2490da488ea158943f25aa"}, "921af296-ae97-44fa-8c68-4ce2da964acf": {"doc_hash": "cb200abfb92bc5326b1dd02b4edea5fef5a33b641f992e51b03a4719dc05b4c2"}, "21dae533-69c4-4c7f-820a-fbaa24f1c6a8": {"doc_hash": "9c80818b3b7e913f27deb4301e5e2ba159155e6b91bca5bbad1100770e8c466a"}, "57938b90-324b-44b3-b300-7d4e84aeb7e1": {"doc_hash": "6eb0b15de59db4a6b43ee421879ea12b34b72380e6098f73f9c0a638254b60ff"}, "01dcfc65-3776-471d-a44c-9e2d0ec0d546": {"doc_hash": "1ee6e5333c914b20d3abe7e943d53b2c379cd7b57e23f674e982855a512a8d44"}, "41e06a6d-d74a-4600-8b6d-10d97754e6eb": {"doc_hash": "e70c97d75e4f1c083fbd38cb2c0ac15ff6ef5f52b066a8806be9a65ef24652fa"}, "923c83fc-f45a-4989-86d0-c4757d18a4c3": {"doc_hash": "c24238235b90646eb4424b04993d397a00a46c905ed6e47c3d3af109bd942745"}, "2bee4d70-b50a-4dbb-af2d-5929296bd0b0": {"doc_hash": "72dba1ac744303519a89f10b0b84c2fe754909ceaeab568982df7dde637b0d45"}, "8f99addd-4db5-4034-94c5-7861e287c264": {"doc_hash": "ef104da04256ae4efe52162612fdb19765fa91fb916eb4718035456b3eef39ff"}, "5c4f80b1-a38e-4fb9-94f3-fc35d99fa974": {"doc_hash": "b58597d7399ee3c9d0b9cfcadccf9f58e48b02b5a8f377eca24423a20e100f12"}, "611c6c1a-8eb4-48d5-b22c-94f7158add14": {"doc_hash": "a9aacede61b92be73a9beb39c7dc6e02c4d5c577ce4d09cb2d291455b123ede0"}, "84b69df2-4714-4801-8434-250a5c7e892e": {"doc_hash": "ce7033a2da524c9672966492667b74f5b791b54b2ada769e5149fa95cf2004a3"}, "0259b837-fae2-4a4e-a897-ec2d76093d95": {"doc_hash": "75d369908f34c99404518a1d92c4b5ae445b3a263d7efb914538a832944a9f6b"}, "77a6f780-e158-4696-b9af-c6dcf9389bb9": {"doc_hash": "462ae8b456ab904998ffcaaa766c67cf0683acbfc6d94ceb87108e1ef68635a7"}, "df2bb066-b103-4cac-a628-d20f45824979": {"doc_hash": "02e9801890f77bc231a1cce034aa065b9e6f212cbc945349251ebba08a17e3c0"}, "2d2dc7dd-775b-4464-81ee-f3b590892e64": {"doc_hash": "6dbea85a084f776dd4bb83559fef01dcd50abbc107c5e1b03dfe57f02c8251af"}, "082ef123-bc68-4a24-b8b8-fb48acd23f58": {"doc_hash": "05b5838ff56c68ec643cdb88087cde2ccc7c2ac58f68289a97f3aef0884dc9d7"}, "15732f05-b725-49d2-8bde-50a805070870": {"doc_hash": "47f9ce22f82cb285cb2a1be2ad95098985992a5f94c631f22a3f6ecb78218277"}, "299fff0c-d4b7-44ff-93c2-cf44d05c4d1e": {"doc_hash": "8b39542b9c07ed6588ce28267805c9df0f1eb975f908e529916ad1920ac6ae2c"}, "b06bba3a-07c9-4d46-b1ac-e1e27c0a30e2": {"doc_hash": "84100dbde20922f975778a3823bb2faadefaebc9a5677722620c5533788359a2"}, "f44d9598-81eb-42dc-ad8b-b6338c5acfaa": {"doc_hash": "78417792b028e46bc1c0184eea320d4a93a6180b718a4cb61cedbde63a88a866"}, "1d24690c-0bda-4f21-8ab1-e517ec34481e": {"doc_hash": "582b90475bfa62c6dd33186a4038d1e4565091d4414ddc5c1f613872f4f63b3f"}, "8c4fe111-bcc7-4d6d-834b-79d34a80c15a": {"doc_hash": "dd34441afe35d9259a17069078328ecc0c987405edab3d354aebb3fb59ee5705"}, "77837d0d-6d3d-4830-b889-e6b90dc05434": {"doc_hash": "7358eb7e713eabac0323a589aeecdf2cb9b96f61d1cd441bb758e6392ef9d924"}, "1b39e08a-4f86-47d9-82fd-1f1d6b9c3e31": {"doc_hash": "6213d33054f2bbd0bfc009b423fc03064c1d0c513085da01bb4644cbba43c450"}, "ad38bd4e-b8f4-4a90-929f-99ee5cbbbdbb": {"doc_hash": "8db11d4db756406eb77fcd3a108a791f6d12d24c5e4abb9861f0f1b151e6ae80"}, "40da8f16-6b89-4fe1-956d-c339e8847851": {"doc_hash": "714d2e402ed0c2a37680d8a714351afebcff20385f77ae7e1360bfef38793453"}, "116f402c-a135-41fe-9737-1d132107e531": {"doc_hash": "b1ac22778c628c30a3526d927e3f3dedf073cc7003df70423c1b9e91c66a0c24"}, "e8b21146-1f55-4804-a5ad-bc7af564c0bb": {"doc_hash": "fa3e0921a182807aeae24b7d1cf95bec38fdd14f3d3a92ef45c97e8237995213"}, "2246a67e-c667-4020-98df-6ba4ad8b49fc": {"doc_hash": "7fc78ff74032e4e5c89b95c30eb75c1b7abd4c7848cb8ca182e9e591cf0b48d3"}, "4af47062-3cd8-46a3-809f-125ce7874b07": {"doc_hash": "b3b2ae6006c7f0679d36bc7f3c955931bf945099389bc359f19e302ffdc152d7"}, "cad25e76-b45d-4d26-9ddf-dec0482183d0": {"doc_hash": "a306d7315e87b9934187746754732e2f59b5bfa347566d4c27d5b81cb98b5064"}, "9c10b837-920c-424e-a1d3-93a475934510": {"doc_hash": "1bf15f82fced24ff5a9df295a36385be4bc4cc83e4cdf288e1d1a78538815c90"}, "2adae58c-c793-48ec-be2a-a8239bdd6739": {"doc_hash": "fca0662c236e122b18b9c27f71f9859ef26443056bc1c664f83cf542ab2d219b"}, "6a700135-713c-4129-a335-6017b2ea6d7a": {"doc_hash": "d03726158404b78602e7d046804c70a5bd7369975cdc43dcba758194aecfa8e9"}, "120a9fca-fd70-4ca6-9b35-5667e714befc": {"doc_hash": "a1fab15ea04c78db3a5a65d31028d5c0c54c8d4cbc91ac311f3e6a0f1ef4e197"}, "0eef522a-6501-4003-8b26-4ec9a18d25e0": {"doc_hash": "d65d0ebddc01880e13f7d974e7776b854cf24ce66d61517c3568369e4868260d"}, "b68bd84a-7c6a-4193-9f9a-6375c659cbe9": {"doc_hash": "a157f7e6dc68816db37b9455a11f4c67294c803c6827980f5f0e083d9fc46cfa"}, "47e3fbad-7a0e-4a14-932d-ffbdd0f0ef55": {"doc_hash": "f97f064e55a44ea859c9fb587a3eaf9b12b767bdc9d32184fe70f0096303f069"}, "c9354f08-17de-46fe-a479-9170aa4f6864": {"doc_hash": "159b617b118c7cd363c2f3d5d89e9727bf7031b1fea49ddc99b7834608dad5d2"}, "70870493-3a8b-4ade-9d18-49fac24eb477": {"doc_hash": "9b826d149b2471a9e28c4fa5ca472b9bf82f129ed4e7784cf23cd991d8962d62"}, "287610cd-940a-408c-b443-b4eec18cf3b5": {"doc_hash": "fc535f61adba48a355aaf1bf361d7ae5c46ed6f5df55db67589eb9a7d921b3b7"}, "5b71ef8b-509d-411a-859c-b5d919875750": {"doc_hash": "5a1e710208d94b2b789ced0e40b9e9c993934707b13dc2f73afe1b90a016b906"}, "1e8abe22-a111-4fae-818b-9b2f66701a85": {"doc_hash": "9fa0403bba5f02eda9e89f2cbf1211a65a48eaf34efbc5e62ad8002620c6af71"}, "6cfb47e0-4230-4d4d-832d-e76254c22bcd": {"doc_hash": "279e50e1395ad46a9320755da2fd72009ac4ecd1d4ecddc2269b664072ff7710"}, "e775d19f-6c3b-409d-8d4a-cdccb2e24615": {"doc_hash": "d3ca62f8ad6b93bf4b43998b57c51cfb3480dd7b0523179078eb4dfb9ab6eb25"}, "751fb11c-594e-49e5-a441-45ada15bf970": {"doc_hash": "6b4b5ed5e14088ad356886f8064d7c3ee87b5602e8d93955fbd98b1c0909da0f"}, "8aad5cf6-0e45-484a-a4fe-67d2bd260ace": {"doc_hash": "d115ab5c591def79b559c328fa46555f541dfa8eb99cf91120b88d56fb2fab46"}, "4edee55a-e251-41bf-807d-8301ac52f42c": {"doc_hash": "137cd1299ceffdb66f20c4d16353bf6940aaf93e3644faaad3f3717a0a60d81e"}, "8fdb7719-906c-4f57-8809-909743ef995e": {"doc_hash": "54d14a8ea22bb3167686e56b6c87e31fb25ef710017bbf2dc60046ae0254c892"}, "f8be9173-016d-4d50-8382-5fbb28e64671": {"doc_hash": "92ab547aac4a251c700b6f12915c6f615d50337fbf6f64cd86781bd9046360f9"}, "1218c1f4-2a8b-4805-ac63-ad0ac92181ef": {"doc_hash": "0fc887cb51ff0f79d929c457e0fb280922bad165b053ee5f2f52744f7cb3913b"}, "2ee41245-135a-41ab-9c6c-9376012428f7": {"doc_hash": "f9ce70f7aba74e38a85531c76823ff5857e740fc018e0476f3342669113a88ca"}, "abd62b81-7c3c-4455-bfcf-5963bc39e844": {"doc_hash": "1e2774359ab669f9718640ec031f3ed23b651050aa3fd91f5e8e20c8bc6ac345"}, "24c896e7-5182-4910-89bc-65bc2ec89c43": {"doc_hash": "70df9b8c3282b30a562c27422ab7991825429c65d9189755506e889db19cf27b"}, "b40aa721-8fe5-42b7-898d-ba9d7435f3ed": {"doc_hash": "b56b43e99f585e658aba3373ec762615028c24ee3c165eb000dec49060c800dd"}, "63991799-ff97-441b-8538-6b9c4a496958": {"doc_hash": "e57e634a9ea243ca78e5bcc394a04d97dd8f026db5a4ce9abd9f48e62fa3eac6"}, "13f0d433-b2e4-4c7b-8249-0fa93266632e": {"doc_hash": "28a06872a1c0ad24586c23a6767142892a12cf07ea305a014aeb7b8b7f74d08c"}, "4b68a6b8-deaf-47ff-b952-46ed8c9981aa": {"doc_hash": "09411e633edac5f3f9c5f71c4bf13c123968025dc576b0b883ee8eba05cd1ba7"}, "bd4a8641-8e68-495a-aa17-da8b2637ebaf": {"doc_hash": "97692d66d52d88ee75eee29dc372a2964e9d33bb9b274dd35833695733a39767"}, "dd1bdbf3-523b-4b0a-be65-d69fe81bfefe": {"doc_hash": "77be605dc82ef6629489f315f16766f5799bb3de39283ecc41dab61258bb28da"}, "8c6e7a60-e6e4-4389-b2c5-5e32fbcc90fc": {"doc_hash": "76740c59d0e824dff97676f48faaf1ed0a7e2321a3237f1a485fb2339f67cac0"}, "d6d10b70-22c7-4fd3-9dcc-d9526659a281": {"doc_hash": "1081c6d36e54fa4ca65203cb069241d41cf1185b0a518d4bdab4da161240e4a4"}, "177ea3c1-968d-4d3c-a20a-f6b22f741d26": {"doc_hash": "696e7776293126f9bbc7c2a5d1de707e1780829a014e33d3727737fe3c9d51d1"}, "910a44c9-8ec0-4d93-8fd4-c887dbd6ac93": {"doc_hash": "2333f1c71c19d554822a38b9295b6362d41738cfe2e728f5c5c3c33935102740"}, "98ccca12-40fb-4182-9957-9e5635471562": {"doc_hash": "5ff366d868e5336a5b4df4fe14d9c128b6f575ebbd3865975dda4f723f5bd75b"}, "e98536dd-ce4b-4063-bcdf-70fb87608e35": {"doc_hash": "c77b3cbb8ee8d1a33e60a7ce9816c49d8d6d003a5e0cc7826c3953604e5ff9d7"}, "0efc7043-1f40-4dcd-95d1-5e97faaf7eb2": {"doc_hash": "a38ccff0db7c0cd70562bf0c97ad2aa5a5a33809cb68d9255cea22034abfced1"}, "4a3618c9-21fd-4634-b132-80c548c3b6fb": {"doc_hash": "d6bcba05a3d24c338452abf7642a7d28d00fdf14f21784fb15210b731e2dc294"}, "b03a46ed-0050-4775-ace9-290a49881871": {"doc_hash": "a809adb65f6e6fab7c4e7ccc359672481b2ed533e72ba6b18b0fa4c508ec2f50"}, "23dd8a35-74f0-4a3f-a04f-f8d388f7ef75": {"doc_hash": "1e679024f3f1d98ebe9efec8a16b3d662d064a6cf7472259df04f87416d93cec"}, "6346cdcc-7674-44e0-9476-195135816cb6": {"doc_hash": "45cbf8c0efb6ecbe43b0a16bc2fa8b8735a927c1d8a9bd08a19f3ea70b4af693"}}, "docstore/data": {"f39b4602-ea1f-495d-b2ec-5e179dcb1ed2": {"__data__": {"text": "\u3010Name\u3011matplotlib\u3010Chapter\u3011matplotlib.pyplot\u3010Section\u3011matplotlib.pyplot.plot\u3010Content\u3011matplotlib.pyplot.plot#matplotlib.pyplot.plot(*args,scalex=True,scaley=True,data=None,**kwargs)[source]#Plot y versus x as lines and/or markers.Call signatures:plot([x],y,[fmt],*,data=None,**kwargs)plot([x],y,[fmt],[x2],y2,[fmt2],...,**kwargs)The coordinates of the points or line nodes are given byx,y.The optional parameterfmtis a convenient way for defining basic\nformatting like color, marker and linestyle. It's a shortcut string\nnotation described in theNotessection below.>>>plot(x,y)# plot x and y using default line style and color>>>plot(x,y,'bo')# plot x and y using blue circle markers>>>plot(y)# plot y using x as index array 0..N-1>>>plot(y,'r+')# ditto, but with red plussesYou can useLine2Dproperties as keyword arguments for more\ncontrol on the appearance. Line properties andfmtcan be mixed.\nThe following two calls yield identical results:>>>plot(x,y,'go--',linewidth=2,markersize=12)>>>plot(x,y,color='green',marker='o',linestyle='dashed',...linewidth=2,markersize=12)When conflicting withfmt, keyword arguments take precedence.Plotting labelled dataThere's a convenient way for plotting objects with labelled data (i.e.\ndata that can be accessed by indexobj['y']). Instead of giving\nthe data inxandy, you can provide the object in thedataparameter and just give the labels forxandy:>>>plot('xlabel','ylabel',data=obj)All indexable objects are supported. This could e.g. be adict, apandas.DataFrameor a structured numpy array.Plotting multiple sets of dataThere are various ways to plot multiple sets of data.The most straight forward way is just to callplotmultiple times.\nExample:>>>plot(x1,y1,'bo')>>>plot(x2,y2,'go')Ifxand/oryare 2D arrays a separate data set will be drawn\nfor every column. If bothxandyare 2D, they must have the\nsame shape. If only one of them is 2D with shape (N, m) the other\nmust have length N and will be used for every data set m.Example:>>>x=[1,2,3]>>>y=np.array([[1,2],[3,4],[5,6]])>>>plot(x,y)is equivalent to:>>>forcolinrange(y.shape[1]):...plot(x,y[:,col])The third way is to specify multiple sets of[x],y,[fmt]groups:>>>plot(x1,y1,'g^',x2,y2,'g-')In this case, any additional keyword argument applies to all\ndatasets. Also, this syntax cannot be combined with thedataparameter.By default, each line is assigned a different style specified by a\n'style cycle'. Thefmtand line property parameters are only\nnecessary if you want explicit deviations from these defaults.\nAlternatively, you can also change the style cycle usingrcParams[\"axes.prop_cycle\"](default:cycler('color',['#1f77b4','#ff7f0e','#2ca02c','#d62728','#9467bd','#8c564b','#e377c2','#7f7f7f','#bcbd22','#17becf'])).Parameters:x, yarray-like or scalarThe horizontal / vertical coordinates of the data points.xvalues are optional and default torange(len(y)).Commonly, these parameters are 1D arrays.They can also be scalars, or two-dimensional (in that case, the\ncolumns represent separate data sets).These arguments cannot be passed as keywords.fmtstr, optionalA format string, e.g. 'ro' for red circles. See theNotessection for a full description of", "doc_id": "f39b4602-ea1f-495d-b2ec-5e179dcb1ed2", "embedding": null, "doc_hash": "7b6ac683eee0e000c1a27d62dcf4684065c4d3b2722425f9b28d07e856139f82", "extra_info": null, "node_info": {"start": 0, "end": 3147, "_node_type": "1"}, "relationships": {"1": "2cc54363-1dcd-44bc-a3e5-b7a1f24943f4", "3": "184e5c3f-4213-4131-94a4-46d7cc9bdd3e"}}, "__type__": "1"}, "184e5c3f-4213-4131-94a4-46d7cc9bdd3e": {"__data__": {"text": "yarray-like or scalarThe horizontal / vertical coordinates of the data points.xvalues are optional and default torange(len(y)).Commonly, these parameters are 1D arrays.They can also be scalars, or two-dimensional (in that case, the\ncolumns represent separate data sets).These arguments cannot be passed as keywords.fmtstr, optionalA format string, e.g. 'ro' for red circles. See theNotessection for a full description of the format strings.Format strings are just an abbreviation for quickly setting\nbasic line properties. All of these and more can also be\ncontrolled by keyword arguments.This argument cannot be passed as keyword.dataindexable object, optionalAn object with labelled data. If given, provide the label names to\nplot inxandy.NoteTechnically there's a slight ambiguity in calls where the\nsecond label is a validfmt.plot('n','o',data=obj)could beplt(x,y)orplt(y,fmt). In such cases,\nthe former interpretation is chosen, but a warning is issued.\nYou may suppress the warning by adding an empty format stringplot('n','o','',data=obj).Returns:list ofLine2DA list of lines representing the plotted data.Other Parameters:scalex, scaleybool, default: TrueThese parameters determine if the view limits are adapted to the\ndata limits. The values are passed on toautoscale_view.**kwargsLine2Dproperties, optionalkwargsare used to specify properties like a line label (for\nauto legends), linewidth, antialiasing, marker face color.\nExample:>>>plot([1,2,3],[1,2,3],'go-',label='line 1',linewidth=2)>>>plot([1,2,3],[1,4,9],'rs',label='line 2')If you specify multiple lines with one plot call, the kwargs apply\nto all those lines. In case the label object is iterable, each\nelement is used as labels for each set of data.Here is a list of availableLine2Dproperties:PropertyDescriptionagg_filtera filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array and two offsets from the bottom left corner of the imagealphascalar or Noneanimatedboolantialiasedor aaboolclip_boxBboxBaseor Noneclip_onboolclip_pathPatch or (Path, Transform) or Nonecoloror ccolordash_capstyleCapStyleor {'butt', 'projecting', 'round'}dash_joinstyleJoinStyleor {'miter', 'round', 'bevel'}dashessequence of floats (on/off ink in points) or (None, None)data(2, N) array or two 1D arraysdrawstyleor ds{'default', 'steps', 'steps-pre', 'steps-mid', 'steps-post'}, default: 'default'figureFigurefillstyle{'full', 'left', 'right', 'bottom', 'top', 'none'}gapcolorcolor or Nonegidstrin_layoutboollabelobjectlinestyleor ls{'-', '--', '-.', ':', '', (offset, on-off-seq), ...}linewidthor lwfloatmarkermarker style string,PathorMarkerStylemarkeredgecoloror meccolormarkeredgewidthor mewfloatmarkerfacecoloror mfccolormarkerfacecoloraltor mfcaltcolormarkersizeor msfloatmarkeveryNone or int or (int, int) or slice or list[int] or float or (float, float) or list[bool]mouseoverboolpath_effectslist ofAbstractPathEffectpickerfloat or callable[[Artist, Event], tuple[bool, dict]]pickradiusfloatrasterizedboolsketch_params(scale: float, length: float, randomness: float)snapbool or Nonesolid_capstyleCapStyleor {'butt', 'projecting', 'round'}solid_joinstyleJoinStyleor {'miter', 'round', 'bevel'}transformunknownurlstrvisibleboolxdata1D arrayydata1D arrayzorderfloatSee alsoscatterXY scatter plot with markers of varying size and/or color ( sometimes also called bubble chart).NotesFormat", "doc_id": "184e5c3f-4213-4131-94a4-46d7cc9bdd3e", "embedding": null, "doc_hash": "5d7852af94066a25e6e5298712893870930a2f0cff0445c262854d4f493b0f7e", "extra_info": null, "node_info": {"start": 2783, "end": 6171, "_node_type": "1"}, "relationships": {"1": "2cc54363-1dcd-44bc-a3e5-b7a1f24943f4", "2": "f39b4602-ea1f-495d-b2ec-5e179dcb1ed2", "3": "250a36d5-a2e8-4d8c-a536-4e8106bcdedf"}}, "__type__": "1"}, "250a36d5-a2e8-4d8c-a536-4e8106bcdedf": {"__data__": {"text": "mfcaltcolormarkersizeor msfloatmarkeveryNone or int or (int, int) or slice or list[int] or float or (float, float) or list[bool]mouseoverboolpath_effectslist ofAbstractPathEffectpickerfloat or callable[[Artist, Event], tuple[bool, dict]]pickradiusfloatrasterizedboolsketch_params(scale: float, length: float, randomness: float)snapbool or Nonesolid_capstyleCapStyleor {'butt', 'projecting', 'round'}solid_joinstyleJoinStyleor {'miter', 'round', 'bevel'}transformunknownurlstrvisibleboolxdata1D arrayydata1D arrayzorderfloatSee alsoscatterXY scatter plot with markers of varying size and/or color ( sometimes also called bubble chart).NotesFormat StringsA format string consists of a part for color, marker and line:fmt='[marker][line][color]'Each of them is optional. If not provided, the value from the style\ncycle is used. Exception: Iflineis given, but nomarker,\nthe data will be a line without markers.Other combinations such as[color][marker][line]are also\nsupported, but note that their parsing may be ambiguous.Markerscharacterdescription'.'point marker','pixel marker'o'circle marker'v'triangle_down marker'^'triangle_up marker'<'triangle_left marker'>'triangle_right marker'1'tri_down marker'2'tri_up marker'3'tri_left marker'4'tri_right marker'8'octagon marker's'square marker'p'pentagon marker'P'plus (filled) marker'*'star marker'h'hexagon1 marker'H'hexagon2 marker'+'plus marker'x'x marker'X'x (filled) marker'D'diamond marker'd'thin_diamond marker'|'vline marker'_'hline markerLine Stylescharacterdescription'-'solid line style'--'dashed line style'-.'dash-dot line style':'dotted line styleExample format strings:'b'# blue markers with default shape'or'# red circles'-g'# green solid line'--'# dashed line with default color'^k:'# black triangle_up markers connected by a dotted lineColorsThe supported color abbreviations are the single letter codescharactercolor'b'blue'g'green'r'red'c'cyan'm'magenta'y'yellow'k'black'w'whiteand the'CN'colors that index into the default property cycle.If the color is the only part of the format string, you can\nadditionally use anymatplotlib.colorsspec, e.g. full names\n('green') or hex strings ('#008000').Examples usingmatplotlib.pyplot.plot#Plotting masked and NaN valuesPlotting masked and NaN valuesScatter MaskedScatter MaskedSimple PlotSimple PlotStairs DemoStairs DemoStep DemoStep DemoTriinterp DemoTriinterp DemoCustom Figure subclassesCustom Figure subclassesManaging multiple figures in pyplotManaging multiple figures in pyplotShared axisShared axisMultiple subplotsMultiple subplotsPolar plotPolar plotPolar legendPolar legendAlign y-labelsAlign y-labelsLegend using pre-defined labelsLegend using pre-defined labelsControlling style of text and labels using a dictionaryControlling style of text and labels using a dictionaryTitle positioningTitle positioningColor by y-valueColor by y-valueDolphinsDolphinsSolarized Light stylesheetSolarized Light stylesheetInfinite linesInfinite linesSimple plotSimple plotText and mathtext using pyplotText and mathtext using pyplotMultiple lines using pyplotMultiple lines using pyplotTwo subplots using pyplotTwo subplots using pyplotFrame grabbingFrame grabbingCoords ReportCoords ReportCustomize RcCustomize RcFindobj DemoFindobj DemoMultipage PDFMultipage PDFPrint StdoutPrint StdoutSet and get propertiesSet and get propertiestransforms.offset_copytransforms.offset_copyZorder DemoZorder DemoCustom scaleCustom scalePlacing date ticks using recurrence rulesPlacing date ticks using recurrence rulesRotating custom tick labelsRotating", "doc_id": "250a36d5-a2e8-4d8c-a536-4e8106bcdedf", "embedding": null, "doc_hash": "26ab80d2350b5131b627e774253ebcb61b147228865e5720a65cc03df305b436", "extra_info": null, "node_info": {"start": 5946, "end": 9489, "_node_type": "1"}, "relationships": {"1": "2cc54363-1dcd-44bc-a3e5-b7a1f24943f4", "2": "184e5c3f-4213-4131-94a4-46d7cc9bdd3e", "3": "3257b867-6f4d-485c-8229-5546be751bb8"}}, "__type__": "1"}, "3257b867-6f4d-485c-8229-5546be751bb8": {"__data__": {"text": "using a dictionaryControlling style of text and labels using a dictionaryTitle positioningTitle positioningColor by y-valueColor by y-valueDolphinsDolphinsSolarized Light stylesheetSolarized Light stylesheetInfinite linesInfinite linesSimple plotSimple plotText and mathtext using pyplotText and mathtext using pyplotMultiple lines using pyplotMultiple lines using pyplotTwo subplots using pyplotTwo subplots using pyplotFrame grabbingFrame grabbingCoords ReportCoords ReportCustomize RcCustomize RcFindobj DemoFindobj DemoMultipage PDFMultipage PDFPrint StdoutPrint StdoutSet and get propertiesSet and get propertiestransforms.offset_copytransforms.offset_copyZorder DemoZorder DemoCustom scaleCustom scalePlacing date ticks using recurrence rulesPlacing date ticks using recurrence rulesRotating custom tick labelsRotating custom tick labelsCanvasAgg demoCanvasAgg demoTool ManagerTool ManagerPyplot tutorialPyplot tutorialQuick start guideQuick start guideCustomizing Matplotlib with style sheets and rcParamsCustomizing Matplotlib with style sheets and rcParamsPath effects guidePath effects guide", "doc_id": "3257b867-6f4d-485c-8229-5546be751bb8", "embedding": null, "doc_hash": "e5d7216c17b7f9a3141cc959fc76dff5dbd4b15e5aa84158c56523fe360e7459", "extra_info": null, "node_info": {"start": 9256, "end": 10357, "_node_type": "1"}, "relationships": {"1": "2cc54363-1dcd-44bc-a3e5-b7a1f24943f4", "2": "250a36d5-a2e8-4d8c-a536-4e8106bcdedf"}}, "__type__": "1"}, "cd14f665-ab80-4e3a-aa5c-6d4aef85c24f": {"__data__": {"text": "\u3010Name\u3011matplotlib\u3010Chapter\u3011matplotlib.pyplot\u3010Section\u3011matplotlib.pyplot.scatter\u3010Content\u3011matplotlib.pyplot.scatter#matplotlib.pyplot.scatter(x,y,s=None,c=None,marker=None,cmap=None,norm=None,vmin=None,vmax=None,alpha=None,linewidths=None,*,edgecolors=None,plotnonfinite=False,data=None,**kwargs)[source]#A scatter plot ofyvs.xwith varying marker size and/or color.Parameters:x, yfloat or array-like, shape (n, )The data positions.sfloat or array-like, shape (n, ), optionalThe marker size in points**2 (typographic points are 1/72 in.).\nDefault isrcParams['lines.markersize']**2.The linewidth and edgecolor can visually interact with the marker\nsize, and can lead to artifacts if the marker size is smaller than\nthe linewidth.If the linewidth is greater than 0 and the edgecolor is anything\nbut'none', then the effective size of the marker will be\nincreased by half the linewidth because the stroke will be centered\non the edge of the shape.To eliminate the marker edge either setlinewidth=0oredgecolor='none'.carray-like or list of colors or color, optionalThe marker colors. Possible values:A scalar or sequence of n numbers to be mapped to colors usingcmapandnorm.A 2D array in which the rows are RGB or RGBA.A sequence of colors of length n.A single color format string.Note thatcshould not be a single numeric RGB or RGBA sequence\nbecause that is indistinguishable from an array of values to be\ncolormapped. If you want to specify the same RGB or RGBA value for\nall points, use a 2D array with a single row. Otherwise,\nvalue-matching will have precedence in case of a size matching withxandy.If you wish to specify a single color for all points\nprefer thecolorkeyword argument.Defaults toNone. In that case the marker color is determined\nby the value ofcolor,facecolororfacecolors. In case\nthose are not specified orNone, the marker color is determined\nby the next color of theAxes' current \"shape and fill\" color\ncycle. This cycle defaults torcParams[\"axes.prop_cycle\"](default:cycler('color',['#1f77b4','#ff7f0e','#2ca02c','#d62728','#9467bd','#8c564b','#e377c2','#7f7f7f','#bcbd22','#17becf'])).markerMarkerStyle, default:rcParams[\"scatter.marker\"](default:'o')The marker style.markercan be either an instance of the class\nor the text shorthand for a particular marker.\nSeematplotlib.markersfor more information about marker\nstyles.cmapstr orColormap, default:rcParams[\"image.cmap\"](default:'viridis')The Colormap instance or registered colormap name used to map scalar data\nto colors.This parameter is ignored ifcis RGB(A).normstr orNormalize, optionalThe normalization method used to scale scalar data to the [0, 1] range\nbefore mapping to colors usingcmap. By default, a linear scaling is\nused, mapping the lowest value to 0 and the highest to 1.If given, this can be one of the following:An instance ofNormalizeor one of its subclasses\n(seeColormap Normalization).A scale name, i.e. one of \"linear\", \"log\", \"symlog\", \"logit\", etc. For a\nlist of available scales, callmatplotlib.scale.get_scale_names().\nIn that case, a suitableNormalizesubclass is dynamically generated\nand instantiated.This parameter is ignored ifcis RGB(A).vmin, vmaxfloat, optionalWhen using scalar data and no explicitnorm,vminandvmaxdefine\nthe data range that the colormap covers. By default, the colormap covers\nthe complete value range of", "doc_id": "cd14f665-ab80-4e3a-aa5c-6d4aef85c24f", "embedding": null, "doc_hash": "61185c966fcb3f4bf7ad048a1aaa3aa42d5228b44480c70d0f367d6eb5bd8f54", "extra_info": null, "node_info": {"start": 0, "end": 3320, "_node_type": "1"}, "relationships": {"1": "89fba5a9-67e2-4eb5-abe6-da452527f20b", "3": "e5676e2d-656f-4825-9deb-b7826fe0db3e"}}, "__type__": "1"}, "e5676e2d-656f-4825-9deb-b7826fe0db3e": {"__data__": {"text": "usingcmap. By default, a linear scaling is\nused, mapping the lowest value to 0 and the highest to 1.If given, this can be one of the following:An instance ofNormalizeor one of its subclasses\n(seeColormap Normalization).A scale name, i.e. one of \"linear\", \"log\", \"symlog\", \"logit\", etc. For a\nlist of available scales, callmatplotlib.scale.get_scale_names().\nIn that case, a suitableNormalizesubclass is dynamically generated\nand instantiated.This parameter is ignored ifcis RGB(A).vmin, vmaxfloat, optionalWhen using scalar data and no explicitnorm,vminandvmaxdefine\nthe data range that the colormap covers. By default, the colormap covers\nthe complete value range of the supplied data. It is an error to usevmin/vmaxwhen anorminstance is given (but using astrnormname together withvmin/vmaxis acceptable).This parameter is ignored ifcis RGB(A).alphafloat, default: NoneThe alpha blending value, between 0 (transparent) and 1 (opaque).linewidthsfloat or array-like, default:rcParams[\"lines.linewidth\"](default:1.5)The linewidth of the marker edges. Note: The defaultedgecolorsis 'face'. You may want to change this as well.edgecolors{'face', 'none',None} or color or sequence of color, default:rcParams[\"scatter.edgecolors\"](default:'face')The edge color of the marker. Possible values:'face': The edge color will always be the same as the face color.'none': No patch boundary will be drawn.A color or sequence of colors.For non-filled markers,edgecolorsis ignored. Instead, the color\nis determined like with 'face', i.e. fromc,colors, orfacecolors.plotnonfinitebool, default: FalseWhether to plot points with nonfinitec(i.e.inf,-infornan). IfTruethe points are drawn with thebadcolormap color (seeColormap.set_bad).Returns:PathCollectionOther Parameters:dataindexable object, optionalIf given, the following parameters also accept a strings, which is\ninterpreted asdata[s](unless this raises an exception):x,y,s,linewidths,edgecolors,c,facecolor,facecolors,color**kwargsCollectionpropertiesSee alsoplotTo plot scatter plots when markers are identical in size and color.NotesTheplotfunction will be faster for scatterplots where markers\ndon't vary in size or color.Any or all ofx,y,s, andcmay be masked arrays, in which\ncase all masks will be combined and only unmasked points will be\nplotted.Fundamentally, scatter works with 1D arrays;x,y,s, andcmay be input as N-D arrays, but within scatter they will be\nflattened. The exception isc, which will be flattened only if its\nsize matches the size ofxandy.Examples usingmatplotlib.pyplot.scatter#Scatter MaskedScatter MaskedScatter plots with a legendScatter plots with a legendScatter plot on polar axisScatter plot on polar axisScatter plotScatter plotHyperlinksHyperlinksPyplot tutorialPyplot tutorial", "doc_id": "e5676e2d-656f-4825-9deb-b7826fe0db3e", "embedding": null, "doc_hash": "b7d701212cde48ed88e71b2ba87d239fd6f5083a7f01b7aa040c0ebeea024293", "extra_info": null, "node_info": {"start": 2653, "end": 5405, "_node_type": "1"}, "relationships": {"1": "89fba5a9-67e2-4eb5-abe6-da452527f20b", "2": "cd14f665-ab80-4e3a-aa5c-6d4aef85c24f"}}, "__type__": "1"}, "e9a4c097-95cf-44f9-a726-28f5c7b5ae13": {"__data__": {"text": "\u3010Name\u3011matplotlib\u3010Chapter\u3011matplotlib.pyplot\u3010Section\u3011matplotlib.pyplot.bar\u3010Content\u3011matplotlib.pyplot.bar#matplotlib.pyplot.bar(x,height,width=0.8,bottom=None,*,align='center',data=None,**kwargs)[source]#Make a bar plot.The bars are positioned atxwith the givenalignment. Their\ndimensions are given byheightandwidth. The vertical baseline\nisbottom(default 0).Many parameters can take either a single value applying to all bars\nor a sequence of values, one for each bar.Parameters:xfloat or array-likeThe x coordinates of the bars. See alsoalignfor the\nalignment of the bars to the coordinates.heightfloat or array-likeThe height(s) of the bars.Note that ifbottomhas units (e.g. datetime),heightshould be in\nunits that are a difference from the value ofbottom(e.g. timedelta).widthfloat or array-like, default: 0.8The width(s) of the bars.Note that ifxhas units (e.g. datetime), thenwidthshould be in\nunits that are a difference (e.g. timedelta) around thexvalues.bottomfloat or array-like, default: 0The y coordinate(s) of the bottom side(s) of the bars.Note that ifbottomhas units, then the y-axis will get a Locator and\nFormatter appropriate for the units (e.g. dates, or categorical).align{'center', 'edge'}, default: 'center'Alignment of the bars to thexcoordinates:'center': Center the base on thexpositions.'edge': Align the left edges of the bars with thexpositions.To align the bars on the right edge pass a negativewidthandalign='edge'.Returns:BarContainerContainer with all the bars and optionally errorbars.Other Parameters:colorcolor or list of color, optionalThe colors of the bar faces.edgecolorcolor or list of color, optionalThe colors of the bar edges.linewidthfloat or array-like, optionalWidth of the bar edge(s). If 0, don't draw edges.tick_labelstr or list of str, optionalThe tick labels of the bars.\nDefault: None (Use default numeric labels.)labelstr or list of str, optionalA single label is attached to the resultingBarContaineras a\nlabel for the whole dataset.\nIf a list is provided, it must be the same length asxand\nlabels the individual bars. Repeated labels are not de-duplicated\nand will cause repeated label entries, so this is best used when\nbars also differ in style (e.g., by passing a list tocolor.)xerr, yerrfloat or array-like of shape(N,) or shape(2, N), optionalIf notNone, add horizontal / vertical errorbars to the bar tips.\nThe values are +/- sizes relative to the data:scalar: symmetric +/- values for all barsshape(N,): symmetric +/- values for each barshape(2, N): Separate - and + values for each bar. First row\ncontains the lower errors, the second row contains the upper\nerrors.None: No errorbar. (Default)SeeDifferent ways of specifying error barsfor an example on\nthe usage ofxerrandyerr.ecolorcolor or list of color, default: 'black'The line color of the errorbars.capsizefloat, default:rcParams[\"errorbar.capsize\"](default:0.0)The length of the error bar caps in points.error_kwdict, optionalDictionary of keyword arguments to be passed to theerrorbarmethod. Values ofecolororcapsizedefined\nhere take precedence over the independent keyword arguments.logbool, default: FalseIfTrue, set the y-axis to be log scale.dataindexable object, optionalIf given, all parameters also accept a strings, which is\ninterpreted asdata[s](unless this raises an exception).**kwargsRectanglepropertiesPropertyDescriptionagg_filtera filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array and two offsets from the bottom left corner of the imagealphascalar or Noneangleunknownanimatedboolantialiasedor aabool or", "doc_id": "e9a4c097-95cf-44f9-a726-28f5c7b5ae13", "embedding": null, "doc_hash": "7c5a8b819a3f067a59458da1f655c02906d35296b5f28e97ced4e70ea8b44e62", "extra_info": null, "node_info": {"start": 0, "end": 3586, "_node_type": "1"}, "relationships": {"1": "8163913d-ccbd-419d-bc00-8e58732f0fac", "3": "6b466d74-c628-43cd-8ecc-a262d4a8cfc4"}}, "__type__": "1"}, "6b466d74-c628-43cd-8ecc-a262d4a8cfc4": {"__data__": {"text": "length of the error bar caps in points.error_kwdict, optionalDictionary of keyword arguments to be passed to theerrorbarmethod. Values ofecolororcapsizedefined\nhere take precedence over the independent keyword arguments.logbool, default: FalseIfTrue, set the y-axis to be log scale.dataindexable object, optionalIf given, all parameters also accept a strings, which is\ninterpreted asdata[s](unless this raises an exception).**kwargsRectanglepropertiesPropertyDescriptionagg_filtera filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array and two offsets from the bottom left corner of the imagealphascalar or Noneangleunknownanimatedboolantialiasedor aabool or Nonebounds(left, bottom, width, height)capstyleCapStyleor {'butt', 'projecting', 'round'}clip_boxBboxBaseor Noneclip_onboolclip_pathPatch or (Path, Transform) or Nonecolorcoloredgecoloror eccolor or Nonefacecoloror fccolor or NonefigureFigurefillboolgidstrhatch{'/', '\\', '|', '-', '+', 'x', 'o', 'O', '.', '*'}heightunknownin_layoutbooljoinstyleJoinStyleor {'miter', 'round', 'bevel'}labelobjectlinestyleor ls{'-', '--', '-.', ':', '', (offset, on-off-seq), ...}linewidthor lwfloat or Nonemouseoverboolpath_effectslist ofAbstractPathEffectpickerNone or bool or float or callablerasterizedboolsketch_params(scale: float, length: float, randomness: float)snapbool or NonetransformTransformurlstrvisibleboolwidthunknownxunknownxy(float, float)yunknownzorderfloatSee alsobarhPlot a horizontal bar plot.NotesStacked bars can be achieved by passing individualbottomvalues per\nbar. SeeStacked bar chart.Examples usingmatplotlib.pyplot.bar#Bar color demoBar color demoBar Label DemoBar Label DemoStacked bar chartStacked bar chartGrouped bar chart with labelsGrouped bar chart with labelsHat graphHat graphPercentiles as horizontal bar chartPercentiles as horizontal bar chartBar of pieBar of pieNested pie chartsNested pie chartsBar chart on polar axisBar chart on polar axisHatch demoHatch demoTable DemoTable DemoPyplot tutorialPyplot tutorial", "doc_id": "6b466d74-c628-43cd-8ecc-a262d4a8cfc4", "embedding": null, "doc_hash": "17d7c9e9fedb85b5a46af5b7431a5e1b28a915c0dafddd84b499dd69241d6d2c", "extra_info": null, "node_info": {"start": 2882, "end": 4926, "_node_type": "1"}, "relationships": {"1": "8163913d-ccbd-419d-bc00-8e58732f0fac", "2": "e9a4c097-95cf-44f9-a726-28f5c7b5ae13"}}, "__type__": "1"}, "decb8f95-f894-4bbb-b3a1-90be0582ed72": {"__data__": {"text": "\u3010Name\u3011matplotlib\u3010Chapter\u3011matplotlib.pyplot\u3010Section\u3011matplotlib.pyplot.hist\u3010Content\u3011matplotlib.pyplot.hist#matplotlib.pyplot.hist(x,bins=None,range=None,density=False,weights=None,cumulative=False,bottom=None,histtype='bar',align='mid',orientation='vertical',rwidth=None,log=False,color=None,label=None,stacked=False,*,data=None,**kwargs)[source]#Compute and plot a histogram.This method usesnumpy.histogramto bin the data inxand count the\nnumber of values in each bin, then draws the distribution either as aBarContainerorPolygon. Thebins,range,density, andweightsparameters are forwarded tonumpy.histogram.If the data has already been binned and counted, usebarorstairsto plot the distribution:counts,bins=np.histogram(x)plt.stairs(counts,bins)Alternatively, plot pre-computed bins and counts usinghist()by\ntreating each bin as a single point with a weight equal to its count:plt.hist(bins[:-1],bins,weights=counts)The data inputxcan be a singular array, a list of datasets of\npotentially different lengths ([x0,x1, ...]), or a 2D ndarray in\nwhich each column is a dataset. Note that the ndarray form is\ntransposed relative to the list form. If the input is an array, then\nthe return value is a tuple (n,bins,patches); if the input is a\nsequence of arrays, then the return value is a tuple\n([n0,n1, ...],bins, [patches0,patches1, ...]).Masked arrays are not supported.Parameters:x(n,) array or sequence of (n,) arraysInput values, this takes either a single array or a sequence of\narrays which are not required to be of the same length.binsint or sequence or str, default:rcParams[\"hist.bins\"](default:10)Ifbinsis an integer, it defines the number of equal-width bins\nin the range.Ifbinsis a sequence, it defines the bin edges, including the\nleft edge of the first bin and the right edge of the last bin;\nin this case, bins may be unequally spaced. All but the last\n(righthand-most) bin is half-open. In other words, ifbinsis:[1,2,3,4]then the first bin is[1,2)(including 1, but excluding 2) and\nthe second[2,3). The last bin, however, is[3,4], whichincludes4.Ifbinsis a string, it is one of the binning strategies\nsupported bynumpy.histogram_bin_edges: 'auto', 'fd', 'doane',\n'scott', 'stone', 'rice', 'sturges', or 'sqrt'.rangetuple or None, default: NoneThe lower and upper range of the bins. Lower and upper outliers\nare ignored. If not provided,rangeis(x.min(),x.max()).\nRange has no effect ifbinsis a sequence.Ifbinsis a sequence orrangeis specified, autoscaling\nis based on the specified bin range instead of the\nrange of x.densitybool, default: FalseIfTrue, draw and return a probability density: each bin\nwill display the bin's raw count divided by the total number of\ncountsand the bin width(density=counts/(sum(counts)*np.diff(bins))),\nso that the area under the histogram integrates to 1\n(np.sum(density*np.diff(bins))==1).Ifstackedis alsoTrue, the sum of the histograms is\nnormalized to 1.weights(n,) array-like or None, default: NoneAn array of weights, of the same shape asx. Each value inxonly contributes its associated weight towards the bin count\n(instead of 1). IfdensityisTrue, the weights are\nnormalized, so that the integral of the density over the range\nremains 1.cumulativebool or -1, default: FalseIfTrue, then a histogram is computed where each bin gives the\ncounts in that bin plus all bins for smaller values. The", "doc_id": "decb8f95-f894-4bbb-b3a1-90be0582ed72", "embedding": null, "doc_hash": "1ef059d7c880cebe8a9c81bfe3b3c767c1e1dc27593bb55a769c974985f0496c", "extra_info": null, "node_info": {"start": 0, "end": 3342, "_node_type": "1"}, "relationships": {"1": "84cfefcc-9ad0-43c5-a51a-57c45142558b", "3": "025f765d-28c9-4552-a97b-b275af3166b1"}}, "__type__": "1"}, "025f765d-28c9-4552-a97b-b275af3166b1": {"__data__": {"text": "count divided by the total number of\ncountsand the bin width(density=counts/(sum(counts)*np.diff(bins))),\nso that the area under the histogram integrates to 1\n(np.sum(density*np.diff(bins))==1).Ifstackedis alsoTrue, the sum of the histograms is\nnormalized to 1.weights(n,) array-like or None, default: NoneAn array of weights, of the same shape asx. Each value inxonly contributes its associated weight towards the bin count\n(instead of 1). IfdensityisTrue, the weights are\nnormalized, so that the integral of the density over the range\nremains 1.cumulativebool or -1, default: FalseIfTrue, then a histogram is computed where each bin gives the\ncounts in that bin plus all bins for smaller values. The last bin\ngives the total number of datapoints.Ifdensityis alsoTruethen the histogram is normalized such\nthat the last bin equals 1.Ifcumulativeis a number less than 0 (e.g., -1), the direction\nof accumulation is reversed. In this case, ifdensityis alsoTrue, then the histogram is normalized such that the first bin\nequals 1.bottomarray-like, scalar, or None, default: NoneLocation of the bottom of each bin, i.e. bins are drawn frombottomtobottom+hist(x,bins)If a scalar, the bottom\nof each bin is shifted by the same amount. If an array, each bin\nis shifted independently and the length of bottom must match the\nnumber of bins. If None, defaults to 0.histtype{'bar', 'barstacked', 'step', 'stepfilled'}, default: 'bar'The type of histogram to draw.'bar' is a traditional bar-type histogram. If multiple data\nare given the bars are arranged side by side.'barstacked' is a bar-type histogram where multiple\ndata are stacked on top of each other.'step' generates a lineplot that is by default unfilled.'stepfilled' generates a lineplot that is by default filled.align{'left', 'mid', 'right'}, default: 'mid'The horizontal alignment of the histogram bars.'left': bars are centered on the left bin edges.'mid': bars are centered between the bin edges.'right': bars are centered on the right bin edges.orientation{'vertical', 'horizontal'}, default: 'vertical'If 'horizontal',barhwill be used for bar-type histograms\nand thebottomkwarg will be the left edges.rwidthfloat or None, default: NoneThe relative width of the bars as a fraction of the bin width. IfNone, automatically compute the width.Ignored ifhisttypeis 'step' or 'stepfilled'.logbool, default: FalseIfTrue, the histogram axis will be set to a log scale.colorcolor or array-like of colors or None, default: NoneColor or sequence of colors, one per dataset. Default (None)\nuses the standard line color sequence.labelstr or None, default: NoneString, or sequence of strings to match multiple datasets. Bar\ncharts yield multiple patches per dataset, but only the first gets\nthe label, so thatlegendwill work as expected.stackedbool, default: FalseIfTrue, multiple data are stacked on top of each other IfFalsemultiple data are arranged side by side if histtype is\n'bar' or on top of each other if histtype is 'step'Returns:narray or list of arraysThe values of the histogram bins. Seedensityandweightsfor a\ndescription of the possible semantics. If inputxis an array,\nthen this is an array of lengthnbins. If input is a sequence of\narrays[data1,data2,...], then this is a list of arrays with\nthe values of the histograms for each of the arrays in the same\norder. The dtype of the arrayn(or of its element arrays) will\nalways be float even if no weighting or normalization is used.binsarrayThe edges of the bins. Length nbins + 1 (nbins left edges and right\nedge of last bin). Always a single array even when multiple data\nsets are passed in.patchesBarContaineror list of a singlePolygonor list of such objectsContainer of", "doc_id": "025f765d-28c9-4552-a97b-b275af3166b1", "embedding": null, "doc_hash": "8e80b6e0528813b28dd8ca64e24789f2dd1142cc47078355d75b587bbc50b8c6", "extra_info": null, "node_info": {"start": 2734, "end": 6412, "_node_type": "1"}, "relationships": {"1": "84cfefcc-9ad0-43c5-a51a-57c45142558b", "2": "decb8f95-f894-4bbb-b3a1-90be0582ed72", "3": "7e9d6202-c6e9-4d54-b6ed-c1d7a17342e0"}}, "__type__": "1"}, "7e9d6202-c6e9-4d54-b6ed-c1d7a17342e0": {"__data__": {"text": "other if histtype is 'step'Returns:narray or list of arraysThe values of the histogram bins. Seedensityandweightsfor a\ndescription of the possible semantics. If inputxis an array,\nthen this is an array of lengthnbins. If input is a sequence of\narrays[data1,data2,...], then this is a list of arrays with\nthe values of the histograms for each of the arrays in the same\norder. The dtype of the arrayn(or of its element arrays) will\nalways be float even if no weighting or normalization is used.binsarrayThe edges of the bins. Length nbins + 1 (nbins left edges and right\nedge of last bin). Always a single array even when multiple data\nsets are passed in.patchesBarContaineror list of a singlePolygonor list of such objectsContainer of individual artists used to create the histogram\nor list of such containers if there are multiple input datasets.Other Parameters:dataindexable object, optionalIf given, the following parameters also accept a strings, which is\ninterpreted asdata[s](unless this raises an exception):x,weights**kwargsPatchpropertiesSee alsohist2d2D histogram with rectangular binshexbin2D histogram with hexagonal binsstairsPlot a pre-computed histogrambarPlot a pre-computed histogramNotesFor large numbers of bins (>1000), plotting can be significantly\naccelerated by usingstairsto plot a pre-computed histogram\n(plt.stairs(*np.histogram(data))), or by settinghisttypeto\n'step' or 'stepfilled' rather than 'bar' or 'barstacked'.Examples usingmatplotlib.pyplot.hist#HistogramsHistogramsPlotting cumulative distributionsPlotting cumulative distributionsSome features of the histogram (hist) functionSome features of the histogram (hist) functionDemo of the histogram function's different histtype settingsDemo of the histogram function's different histtype settingsThe histogram (hist) function with multiple data setsThe histogram (hist) function with multiple data setsText and mathtext using pyplotText and mathtext using pyplotAnimated histogramAnimated histogramSVG HistogramSVG HistogramPyplot tutorialPyplot tutorialImage tutorialImage tutorial", "doc_id": "7e9d6202-c6e9-4d54-b6ed-c1d7a17342e0", "embedding": null, "doc_hash": "8a1a22ca93722a9134aa4ef7ea65377b4dc55df4cb9eea3f776666b30b71e452", "extra_info": null, "node_info": {"start": 6288, "end": 8354, "_node_type": "1"}, "relationships": {"1": "84cfefcc-9ad0-43c5-a51a-57c45142558b", "2": "025f765d-28c9-4552-a97b-b275af3166b1"}}, "__type__": "1"}, "15e39797-d25c-40e8-a8cc-ab11a5562869": {"__data__": {"text": "\u3010Name\u3011matplotlib\u3010Chapter\u3011matplotlib.pyplot\u3010Section\u3011matplotlib.pyplot.imshow\u3010Content\u3011matplotlib.pyplot.imshow#matplotlib.pyplot.imshow(X,cmap=None,norm=None,*,aspect=None,interpolation=None,alpha=None,vmin=None,vmax=None,origin=None,extent=None,interpolation_stage=None,filternorm=True,filterrad=4.0,resample=None,url=None,data=None,**kwargs)[source]#Display data as an image, i.e., on a 2D regular raster.The input may either be actual RGB(A) data, or 2D scalar data, which\nwill be rendered as a pseudocolor image. For displaying a grayscale\nimage, set up the colormapping using the parameterscmap='gray',vmin=0,vmax=255.The number of pixels used to render an image is set by the Axes size\nand the figuredpi. This can lead to aliasing artifacts when\nthe image is resampled, because the displayed image size will usually\nnot match the size ofX(seeImage antialiasing).\nThe resampling can be controlled via theinterpolationparameter\nand/orrcParams[\"image.interpolation\"](default:'antialiased').Parameters:Xarray-like or PIL imageThe image data. Supported array shapes are:(M, N): an image with scalar data. The values are mapped to\ncolors using normalization and a colormap. See parametersnorm,cmap,vmin,vmax.(M, N, 3): an image with RGB values (0-1 float or 0-255 int).(M, N, 4): an image with RGBA values (0-1 float or 0-255 int),\ni.e. including transparency.The first two dimensions (M, N) define the rows and columns of\nthe image.Out-of-range RGB(A) values are clipped.cmapstr orColormap, default:rcParams[\"image.cmap\"](default:'viridis')The Colormap instance or registered colormap name used to map scalar data\nto colors.This parameter is ignored ifXis RGB(A).normstr orNormalize, optionalThe normalization method used to scale scalar data to the [0, 1] range\nbefore mapping to colors usingcmap. By default, a linear scaling is\nused, mapping the lowest value to 0 and the highest to 1.If given, this can be one of the following:An instance ofNormalizeor one of its subclasses\n(seeColormap Normalization).A scale name, i.e. one of \"linear\", \"log\", \"symlog\", \"logit\", etc. For a\nlist of available scales, callmatplotlib.scale.get_scale_names().\nIn that case, a suitableNormalizesubclass is dynamically generated\nand instantiated.This parameter is ignored ifXis RGB(A).vmin, vmaxfloat, optionalWhen using scalar data and no explicitnorm,vminandvmaxdefine\nthe data range that the colormap covers. By default, the colormap covers\nthe complete value range of the supplied data. It is an error to usevmin/vmaxwhen anorminstance is given (but using astrnormname together withvmin/vmaxis acceptable).This parameter is ignored ifXis RGB(A).aspect{'equal', 'auto'} or float or None, default: NoneThe aspect ratio of the Axes. This parameter is particularly\nrelevant for images since it determines whether data pixels are\nsquare.This parameter is a shortcut for explicitly callingAxes.set_aspect. See there for further details.'equal': Ensures an aspect ratio of 1. Pixels will be square\n(unless pixel sizes are explicitly made non-square in data\ncoordinates usingextent).'auto': The Axes is kept fixed and the aspect is adjusted so\nthat the data fit in the Axes. In general, this will result in\nnon-square pixels.Normally, None (the default) means to usercParams[\"image.aspect\"](default:'equal'). However, if\nthe image uses a transform that does not contain the axes data", "doc_id": "15e39797-d25c-40e8-a8cc-ab11a5562869", "embedding": null, "doc_hash": "790276a17819e32bf76bba2521d2c63fae82ceca152a8b075da56db9aff347b4", "extra_info": null, "node_info": {"start": 0, "end": 3362, "_node_type": "1"}, "relationships": {"1": "fe555328-12a9-45f4-b8ad-b9fbedd623df", "3": "04a8f462-08cb-4005-b852-d807be0bd6f1"}}, "__type__": "1"}, "04a8f462-08cb-4005-b852-d807be0bd6f1": {"__data__": {"text": "'auto'} or float or None, default: NoneThe aspect ratio of the Axes. This parameter is particularly\nrelevant for images since it determines whether data pixels are\nsquare.This parameter is a shortcut for explicitly callingAxes.set_aspect. See there for further details.'equal': Ensures an aspect ratio of 1. Pixels will be square\n(unless pixel sizes are explicitly made non-square in data\ncoordinates usingextent).'auto': The Axes is kept fixed and the aspect is adjusted so\nthat the data fit in the Axes. In general, this will result in\nnon-square pixels.Normally, None (the default) means to usercParams[\"image.aspect\"](default:'equal'). However, if\nthe image uses a transform that does not contain the axes data transform,\nthen None means to not modify the axes aspect at all (in that case, directly\ncallAxes.set_aspectif desired).interpolationstr, default:rcParams[\"image.interpolation\"](default:'antialiased')The interpolation method used.Supported values are 'none', 'antialiased', 'nearest', 'bilinear',\n'bicubic', 'spline16', 'spline36', 'hanning', 'hamming', 'hermite',\n'kaiser', 'quadric', 'catrom', 'gaussian', 'bessel', 'mitchell',\n'sinc', 'lanczos', 'blackman'.The dataXis resampled to the pixel size of the image on the\nfigure canvas, using the interpolation method to either up- or\ndownsample the data.Ifinterpolationis 'none', then for the ps, pdf, and svg\nbackends no down- or upsampling occurs, and the image data is\npassed to the backend as a native image. Note that different ps,\npdf, and svg viewers may display these raw pixels differently. On\nother backends, 'none' is the same as 'nearest'.Ifinterpolationis the default 'antialiased', then 'nearest'\ninterpolation is used if the image is upsampled by more than a\nfactor of three (i.e. the number of display pixels is at least\nthree times the size of the data array). If the upsampling rate is\nsmaller than 3, or the image is downsampled, then 'hanning'\ninterpolation is used to act as an anti-aliasing filter, unless the\nimage happens to be upsampled by exactly a factor of two or one.SeeInterpolations for imshowfor an overview of the supported interpolation methods, andImage antialiasingfor\na discussion of image antialiasing.Some interpolation methods require an additional radius parameter,\nwhich can be set byfilterrad. Additionally, the antigrain image\nresize filter is controlled by the parameterfilternorm.interpolation_stage{'data', 'rgba'}, default: 'data'If 'data', interpolation\nis carried out on the data provided by the user. If 'rgba', the\ninterpolation is carried out after the colormapping has been\napplied (visual interpolation).alphafloat or array-like, optionalThe alpha blending value, between 0 (transparent) and 1 (opaque).\nIfalphais an array, the alpha blending values are applied pixel\nby pixel, andalphamust have the same shape asX.origin{'upper', 'lower'}, default:rcParams[\"image.origin\"](default:'upper')Place the [0, 0] index of the array in the upper left or lower\nleft corner of the Axes. The convention (the default) 'upper' is\ntypically used for matrices and images.Note that the vertical axis points upward for 'lower'\nbut downward for 'upper'.See theorigin and extent in imshowtutorial for\nexamples and a more detailed description.extentfloats (left, right, bottom, top), optionalThe bounding box in data coordinates that the image will fill.\nThese values may be unitful and match the units of the Axes.\nThe image is stretched individually along x and y to fill the box.The default extent is determined by the following conditions.\nPixels have unit size in data coordinates. Their centers are on\ninteger coordinates, and", "doc_id": "04a8f462-08cb-4005-b852-d807be0bd6f1", "embedding": null, "doc_hash": "a306d7315e87b9934187746754732e2f59b5bfa347566d4c27d5b81cb98b5064", "extra_info": null, "node_info": {"start": 2747, "end": 6378, "_node_type": "1"}, "relationships": {"1": "fe555328-12a9-45f4-b8ad-b9fbedd623df", "2": "15e39797-d25c-40e8-a8cc-ab11a5562869", "3": "dd179565-96a0-426b-b171-692a517c3770"}}, "__type__": "1"}, "dd179565-96a0-426b-b171-692a517c3770": {"__data__": {"text": "default:rcParams[\"image.origin\"](default:'upper')Place the [0, 0] index of the array in the upper left or lower\nleft corner of the Axes. The convention (the default) 'upper' is\ntypically used for matrices and images.Note that the vertical axis points upward for 'lower'\nbut downward for 'upper'.See theorigin and extent in imshowtutorial for\nexamples and a more detailed description.extentfloats (left, right, bottom, top), optionalThe bounding box in data coordinates that the image will fill.\nThese values may be unitful and match the units of the Axes.\nThe image is stretched individually along x and y to fill the box.The default extent is determined by the following conditions.\nPixels have unit size in data coordinates. Their centers are on\ninteger coordinates, and their center coordinates range from 0 to\ncolumns-1 horizontally and from 0 to rows-1 vertically.Note that the direction of the vertical axis and thus the default\nvalues for top and bottom depend onorigin:Fororigin=='upper'the default is(-0.5,numcols-0.5,numrows-0.5,-0.5).Fororigin=='lower'the default is(-0.5,numcols-0.5,-0.5,numrows-0.5).See theorigin and extent in imshowtutorial for\nexamples and a more detailed description.filternormbool, default: TrueA parameter for the antigrain image resize filter (see the\nantigrain documentation). Iffilternormis set, the filter\nnormalizes integer values and corrects the rounding errors. It\ndoesn't do anything with the source floating point values, it\ncorrects only integers according to the rule of 1.0 which means\nthat any sum of pixel weights must be equal to 1.0. So, the\nfilter function must produce a graph of the proper shape.filterradfloat > 0, default: 4.0The filter radius for filters that have a radius parameter, i.e.\nwhen interpolation is one of: 'sinc', 'lanczos' or 'blackman'.resamplebool, default:rcParams[\"image.resample\"](default:True)WhenTrue, use a full resampling method. WhenFalse, only\nresample when the output image is larger than the input image.urlstr, optionalSet the url of the createdAxesImage. SeeArtist.set_url.Returns:AxesImageOther Parameters:dataindexable object, optionalIf given, all parameters also accept a strings, which is\ninterpreted asdata[s](unless this raises an exception).**kwargsArtistpropertiesThese parameters are passed on to the constructor of theAxesImageartist.See alsomatshowPlot a matrix or an array as an image.NotesUnlessextentis used, pixel centers will be located at integer\ncoordinates. In other words: the origin will coincide with the center\nof pixel (0, 0).There are two common representations for RGB images with an alpha\nchannel:Straight (unassociated) alpha: R, G, and B channels represent the\ncolor of the pixel, disregarding its opacity.Premultiplied (associated) alpha: R, G, and B channels represent\nthe color of the pixel, adjusted for its opacity by multiplication.imshowexpects RGB images adopting the straight\n(unassociated) alpha representation.Examples usingmatplotlib.pyplot.imshow#Affine transform of an imageAffine transform of an imageBarcodeBarcodeContour ImageContour ImageCreating annotated heatmapsCreating annotated heatmapsClipping images with patchesClipping images with patchesMany ways to plot imagesMany ways to plot imagesImage MaskedImage MaskedBlend transparency with color in 2D imagesBlend transparency with color in 2D imagesInterpolations for imshowInterpolations for imshowLayer ImagesLayer ImagesVisualize matrices with matshowVisualize matrices with matshowMultiple imagesMultiple imagespcolor imagespcolor imagesShading exampleShading exampleSubplots spacings and marginsSubplots spacings and marginsColorbarColorbarCreating a colormap from a list of colorsCreating a colormap from a list of colorsDolphinsDolphinsHyperlinksHyperlinksImage tutorialImage tutorialTight Layout guideTight Layout guide", "doc_id": "dd179565-96a0-426b-b171-692a517c3770", "embedding": null, "doc_hash": "4d5b2aeb365392d47310c008b91b2d1302ed58f465cd074af2caadd9f9f7bf01", "extra_info": null, "node_info": {"start": 6222, "end": 10041, "_node_type": "1"}, "relationships": {"1": "fe555328-12a9-45f4-b8ad-b9fbedd623df", "2": "04a8f462-08cb-4005-b852-d807be0bd6f1"}}, "__type__": "1"}, "b20a0780-b560-4b36-8ae3-c9da461588ad": {"__data__": {"text": "\u3010Name\u3011matplotlib\u3010Chapter\u3011matplotlib.pyplot\u3010Section\u3011matplotlib.pyplot.figure\u3010Content\u3011matplotlib.pyplot.figure#matplotlib.pyplot.figure(num=None,figsize=None,dpi=None,*,facecolor=None,edgecolor=None,frameon=True,FigureClass=<class'matplotlib.figure.Figure'>,clear=False,**kwargs)[source]#Create a new figure, or activate an existing figure.Parameters:numint or str orFigureorSubFigure, optionalA unique identifier for the figure.If a figure with that identifier already exists, this figure is made\nactive and returned. An integer refers to theFigure.numberattribute, a string refers to the figure label.If there is no figure with the identifier ornumis not given, a new\nfigure is created, made active and returned. Ifnumis an int, it\nwill be used for theFigure.numberattribute, otherwise, an\nauto-generated integer value is used (starting at 1 and incremented\nfor each new figure). Ifnumis a string, the figure label and the\nwindow title is set to this value. If num is aSubFigure, its\nparentFigureis activated.figsize(float, float), default:rcParams[\"figure.figsize\"](default:[6.4,4.8])Width, height in inches.dpifloat, default:rcParams[\"figure.dpi\"](default:100.0)The resolution of the figure in dots-per-inch.facecolorcolor, default:rcParams[\"figure.facecolor\"](default:'white')The background color.edgecolorcolor, default:rcParams[\"figure.edgecolor\"](default:'white')The border color.frameonbool, default: TrueIf False, suppress drawing the figure frame.FigureClasssubclass ofFigureIf set, an instance of this subclass will be created, rather than a\nplainFigure.clearbool, default: FalseIf True and the figure already exists, then it is cleared.layout{'constrained', 'compressed', 'tight', 'none',LayoutEngine, None}, default: NoneThe layout mechanism for positioning of plot elements to avoid\noverlapping Axes decorations (labels, ticks, etc). Note that layout\nmanagers can measurably slow down figure display.'constrained': The constrained layout solver adjusts axes sizes\nto avoid overlapping axes decorations. Can handle complex plot\nlayouts and colorbars, and is thus recommended.SeeConstrained Layout Guidefor examples.'compressed': uses the same algorithm as 'constrained', but\nremoves extra space between fixed-aspect-ratio Axes. Best for\nsimple grids of axes.'tight': Use the tight layout mechanism. This is a relatively\nsimple algorithm that adjusts the subplot parameters so that\ndecorations do not overlap. SeeFigure.set_tight_layoutfor\nfurther details.'none': Do not use a layout engine.ALayoutEngineinstance. Builtin layout classes areConstrainedLayoutEngineandTightLayoutEngine, more easily\naccessible by 'constrained' and 'tight'. Passing an instance\nallows third parties to provide their own layout engine.If not given, fall back to using the parameterstight_layoutandconstrained_layout, including their config defaultsrcParams[\"figure.autolayout\"](default:False) andrcParams[\"figure.constrained_layout.use\"](default:False).**kwargsAdditional keyword arguments are passed to theFigureconstructor.Returns:FigureNotesA newly created figure is passed to thenew_managermethod or thenew_figure_managerfunction provided by the current\nbackend, which install a canvas and a manager on the figure.Once this is done,rcParams[\"figure.hooks\"](default:[]) are called, one at a time, on the\nfigure; these hooks allow arbitrary customization of the figure (e.g.,\nattaching callbacks) or of associated elements (e.g., modifying the\ntoolbar). Seemplcvd -- an example of figure hookfor an example of\ntoolbar customization.If you are creating many figures, make sure you explicitly callpyplot.closeon the figures you are not using, because this will\nenable pyplot to properly clean up the memory.rcParamsdefines the default values, which can", "doc_id": "b20a0780-b560-4b36-8ae3-c9da461588ad", "embedding": null, "doc_hash": "980d5b27851297039e500ae40dd8390772768283e8534a32bf6db4a5b9c46107", "extra_info": null, "node_info": {"start": 0, "end": 3742, "_node_type": "1"}, "relationships": {"1": "0a64953c-dbb9-4c4e-8342-55e074c1a387", "3": "2db3c2e7-ef60-4995-bc53-0abc262306b8"}}, "__type__": "1"}, "2db3c2e7-ef60-4995-bc53-0abc262306b8": {"__data__": {"text": "to theFigureconstructor.Returns:FigureNotesA newly created figure is passed to thenew_managermethod or thenew_figure_managerfunction provided by the current\nbackend, which install a canvas and a manager on the figure.Once this is done,rcParams[\"figure.hooks\"](default:[]) are called, one at a time, on the\nfigure; these hooks allow arbitrary customization of the figure (e.g.,\nattaching callbacks) or of associated elements (e.g., modifying the\ntoolbar). Seemplcvd -- an example of figure hookfor an example of\ntoolbar customization.If you are creating many figures, make sure you explicitly callpyplot.closeon the figures you are not using, because this will\nenable pyplot to properly clean up the memory.rcParamsdefines the default values, which can be modified\nin the matplotlibrc file.Examples usingmatplotlib.pyplot.figure#Errorbar limit selectionErrorbar limit selectionEventCollection DemoEventCollection DemoFilled polygonFilled polygonScatter plot with histogramsScatter plot with histogramsSpectrum representationsSpectrum representationsBarcodeBarcodeFigimage DemoFigimage DemoLayer ImagesLayer ImagesAligning LabelsAligning LabelsAxes Zoom EffectAxes Zoom EffectCustom Figure subclassesCustom Figure subclassesResizing axes with constrained layoutResizing axes with constrained layoutResizing axes with tight layoutResizing axes with tight layoutFigure size in different unitsFigure size in different unitsGeographic ProjectionsGeographic ProjectionsUsing Gridspec to make multi-column/row subplot layoutsUsing Gridspec to make multi-column/row subplot layoutsNested GridspecsNested GridspecsManaging multiple figures in pyplotManaging multiple figures in pyplotFigure subfiguresFigure subfiguresCreating multiple subplots using plt.subplotsCreating multiple subplots using plt.subplotsPlotting cumulative distributionsPlotting cumulative distributionsError bar rendering on polar axisError bar rendering on polar axisPolar legendPolar legendScatter plot on polar axisScatter plot on polar axisAnnotation PolarAnnotation PolarArrow DemoArrow DemoAuto-wrapping textAuto-wrapping textText Rotation ModeText Rotation ModeThe difference between \\dfrac and \\fracThe difference between \\dfrac and \\fracAnnotation arrow style referenceAnnotation arrow style referenceFonts demo (object-oriented style)Fonts demo (object-oriented style)Fonts demo (keyword arguments)Fonts demo (keyword arguments)Convert texts to imagesConvert texts to imagesMathtext ExamplesMathtext ExamplesConcatenating text objects with different propertiesConcatenating text objects with different propertiesSTIX FontsSTIX FontsText CommandsText CommandsUnicode minusUnicode minusUsetex Baseline TestUsetex Baseline TestUsetex FonteffectsUsetex FonteffectsReference for Matplotlib artistsReference for Matplotlib artistsDrawing fancy boxesDrawing fancy boxesHatch demoHatch demoTwo subplots using pyplotTwo subplots using pyplotAxes dividerAxes dividerDemo Axes GridDemo Axes GridAxes Grid2Axes Grid2Showing RGB channels using RGBAxesShowing RGB channels using RGBAxesPer-row or per-column colorbarsPer-row or per-column colorbarsAxes with a fixed physical sizeAxes with a fixed physical sizeSetting a fixed aspect on ImageGrid cellsSetting a fixed aspect on ImageGrid cellsInset locator demoInset locator demoMake room for ylabel using axes_gridMake room for ylabel using axes_gridParasite Simple2Parasite Simple2Simple Axes Divider 1Simple Axes Divider 1Simple axes divider 3Simple axes divider 3Simple ImageGridSimple ImageGridSimple ImageGrid 2Simple ImageGrid 2Axis DirectionAxis Directionaxis_direction demoaxis_direction demoAxis line stylesAxis line stylesCurvilinear grid demoCurvilinear grid demoDemo CurveLinear Grid2Demo CurveLinear Grid2floating_axes featuresfloating_axes featuresfloating_axis demofloating_axis demoParasite Axes demoParasite Axes demoTicklabel alignmentTicklabel alignmentTicklabel directionTicklabel directionSimple axis", "doc_id": "2db3c2e7-ef60-4995-bc53-0abc262306b8", "embedding": null, "doc_hash": "9df4c10016980ca24f612108ab5ebdfa36411921486b1ce17329d758975e7444", "extra_info": null, "node_info": {"start": 3086, "end": 7015, "_node_type": "1"}, "relationships": {"1": "0a64953c-dbb9-4c4e-8342-55e074c1a387", "2": "b20a0780-b560-4b36-8ae3-c9da461588ad", "3": "1d64a832-24b2-48cb-b05d-971fa3e0f453"}}, "__type__": "1"}, "1d64a832-24b2-48cb-b05d-971fa3e0f453": {"__data__": {"text": "aspect on ImageGrid cellsInset locator demoInset locator demoMake room for ylabel using axes_gridMake room for ylabel using axes_gridParasite Simple2Parasite Simple2Simple Axes Divider 1Simple Axes Divider 1Simple axes divider 3Simple axes divider 3Simple ImageGridSimple ImageGridSimple ImageGrid 2Simple ImageGrid 2Axis DirectionAxis Directionaxis_direction demoaxis_direction demoAxis line stylesAxis line stylesCurvilinear grid demoCurvilinear grid demoDemo CurveLinear Grid2Demo CurveLinear Grid2floating_axes featuresfloating_axes featuresfloating_axis demofloating_axis demoParasite Axes demoParasite Axes demoTicklabel alignmentTicklabel alignmentTicklabel directionTicklabel directionSimple axis directionSimple axis directionSimple axis tick label and tick directionsSimple axis tick label and tick directionsSimple Axis PadSimple Axis PadCustom spines with axisartistCustom spines with axisartistSimple AxislineSimple AxislineSimple Axisline3Simple Axisline3Anatomy of a figureAnatomy of a figureFirefoxFirefoxShaded & power normalized renderingShaded & power normalized renderingXKCDXKCDThe double pendulum problemThe double pendulum problemFrame grabbingFrame grabbingRain simulationRain simulationAnimated 3D random walkAnimated 3D random walkMATPLOTLIB UNCHAINEDMATPLOTLIB UNCHAINEDClose EventClose EventInteractive functionsInteractive functionsLasso DemoLasso DemoAdding lines to figuresAdding lines to figuresHyperlinksHyperlinksMatplotlib logoMatplotlib logoMultipage PDFMultipage PDFSVG Filter LineSVG Filter LineSVG filter pieSVG filter pietransforms.offset_copytransforms.offset_copyZorder DemoZorder DemoPlot 2D data on 3D plotPlot 2D data on 3D plotDemo of 3D bar chartsDemo of 3D bar chartsCreate 2D bar graphs in different planesCreate 2D bar graphs in different planes3D box surface plot3D box surface plotPlot contour (level) curves in 3DPlot contour (level) curves in 3DPlot contour (level) curves in 3D using the extend3d optionPlot contour (level) curves in 3D using the extend3d optionProject contour profiles onto a graphProject contour profiles onto a graphFilled contoursFilled contoursProject filled contour onto a graphProject filled contour onto a graph3D errorbars3D errorbarsCreate 3D histogram of 2D dataCreate 3D histogram of 2D dataParametric curveParametric curveLorenz attractorLorenz attractor2D and 3D axes in same figure2D and 3D axes in same figureAutomatic text offsettingAutomatic text offsettingDraw flat objects in 3D plotDraw flat objects in 3D plotGenerate polygons to fill under 3D line graphGenerate polygons to fill under 3D line graph3D quiver plot3D quiver plotRotating a 3D plotRotating a 3D plot3D scatterplot3D scatterplot3D plots as subplots3D plots as subplots3D surface (solid color)3D surface (solid color)3D surface (checkerboard)3D surface (checkerboard)3D surface with polar coordinates3D surface with polar coordinatesText annotations in 3DText annotations in 3DTriangular 3D contour plotTriangular 3D contour plotTriangular 3D filled contour plotTriangular 3D filled contour plotTriangular 3D surfacesTriangular 3D surfacesMore triangular 3D surfacesMore triangular 3D surfaces3D voxel / volumetric plot3D voxel / volumetric plot3D voxel plot of the NumPy logo3D voxel plot of the NumPy logo3D voxel / volumetric plot with RGB colors3D voxel / volumetric plot with RGB colors3D voxel / volumetric plot with cylindrical coordinates3D voxel / volumetric plot with cylindrical coordinates3D wireframe plot3D wireframe plotAnimate a 3D wireframe plotAnimate a 3D wireframe plotAsinh DemoAsinh DemoLeft ventricle bullseyeLeft ventricle bullseyeThe Sankey classThe Sankey", "doc_id": "1d64a832-24b2-48cb-b05d-971fa3e0f453", "embedding": null, "doc_hash": "2adc1169058a681c7fdef7e72d74ac56bd074a9d877020ce85d3332b1df1e618", "extra_info": null, "node_info": {"start": 7035, "end": 10672, "_node_type": "1"}, "relationships": {"1": "0a64953c-dbb9-4c4e-8342-55e074c1a387", "2": "2db3c2e7-ef60-4995-bc53-0abc262306b8", "3": "84e8f062-fa23-4a51-bd3e-a8c862f97911"}}, "__type__": "1"}, "84e8f062-fa23-4a51-bd3e-a8c862f97911": {"__data__": {"text": "filled contour plotTriangular 3D filled contour plotTriangular 3D surfacesTriangular 3D surfacesMore triangular 3D surfacesMore triangular 3D surfaces3D voxel / volumetric plot3D voxel / volumetric plot3D voxel plot of the NumPy logo3D voxel plot of the NumPy logo3D voxel / volumetric plot with RGB colors3D voxel / volumetric plot with RGB colors3D voxel / volumetric plot with cylindrical coordinates3D voxel / volumetric plot with cylindrical coordinates3D wireframe plot3D wireframe plotAnimate a 3D wireframe plotAnimate a 3D wireframe plotAsinh DemoAsinh DemoLeft ventricle bullseyeLeft ventricle bullseyeThe Sankey classThe Sankey classLong chain of connections using SankeyLong chain of connections using SankeyRankine power cycleRankine power cycleSkewT-logP diagram: using transforms and custom projectionsSkewT-logP diagram: using transforms and custom projectionsFig Axes Customize SimpleFig Axes Customize SimpleTick formattersTick formattersEllipse with unitsEllipse with unitsSVG HistogramSVG HistogramTool ManagerTool ManagerMenuMenuRectangle and ellipse selectorsRectangle and ellipse selectorssubplot2grid demosubplot2grid demoGridSpec demoGridSpec demoNested GridSpecsNested GridSpecsSimple Legend01Simple Legend01Pyplot tutorialPyplot tutorialArtist tutorialArtist tutorialQuick start guideQuick start guideorigin and extent in imshoworigin and extent in ~.Axes.imshowPath effects guidePath effects guideTransformations TutorialTransformations TutorialConstrained Layout GuideConstrained Layout GuideTight Layout guideTight Layout guideArranging multiple Axes in a FigureArranging multiple Axes in a FigureAxis TicksAxis TicksComplex and semantic figure composition (subplot_mosaic)Complex and semantic figure composition (subplot_mosaic)Specifying colorsSpecifying colorsText in MatplotlibText in MatplotlibText properties and layoutText properties and layoutAnnotationsAnnotationsWriting mathematical expressionsWriting mathematical expressions", "doc_id": "84e8f062-fa23-4a51-bd3e-a8c862f97911", "embedding": null, "doc_hash": "3480949abc4657792b116128d21f32b980603b68d8f1b0c3a94a7afda1ab4839", "extra_info": null, "node_info": {"start": 10672, "end": 12639, "_node_type": "1"}, "relationships": {"1": "0a64953c-dbb9-4c4e-8342-55e074c1a387", "2": "1d64a832-24b2-48cb-b05d-971fa3e0f453"}}, "__type__": "1"}, "1f979ee9-2ec1-470d-953d-5148d19ffc01": {"__data__": {"text": "\u3010Name\u3011matplotlib\u3010Chapter\u3011matplotlib.pyplot\u3010Section\u3011matplotlib.pyplot.subplot\u3010Content\u3011matplotlib.pyplot.subplot#matplotlib.pyplot.subplot(*args,**kwargs)[source]#Add an Axes to the current figure or retrieve an existing Axes.This is a wrapper ofFigure.add_subplotwhich provides additional\nbehavior when working with the implicit API (see the notes section).Call signatures:subplot(nrows,ncols,index,**kwargs)subplot(pos,**kwargs)subplot(**kwargs)subplot(ax)Parameters:*argsint, (int, int,index), orSubplotSpec, default: (1, 1, 1)The position of the subplot described by one ofThree integers (nrows,ncols,index). The subplot will take theindexposition on a grid withnrowsrows andncolscolumns.indexstarts at 1 in the upper left corner and increases to the\nright.indexcan also be a two-tuple specifying the (first,last) indices (1-based, and includinglast) of the subplot, e.g.,fig.add_subplot(3,1,(1,2))makes a subplot that spans the\nupper 2/3 of the figure.A 3-digit integer. The digits are interpreted as if given separately\nas three single-digit integers, i.e.fig.add_subplot(235)is the\nsame asfig.add_subplot(2,3,5). Note that this can only be used\nif there are no more than 9 subplots.ASubplotSpec.projection{None, 'aitoff', 'hammer', 'lambert', 'mollweide', 'polar', 'rectilinear', str}, optionalThe projection type of the subplot (Axes).stris the name\nof a custom projection, seeprojections. The default\nNone results in a 'rectilinear' projection.polarbool, default: FalseIf True, equivalent to projection='polar'.sharex, shareyAxes, optionalShare the x or yaxiswith sharex and/or sharey. The\naxis will have the same limits, ticks, and scale as the axis of the\nshared axes.labelstrA label for the returned axes.Returns:AxesThe Axes of the subplot. The returned Axes can actually be an instance\nof a subclass, such asprojections.polar.PolarAxesfor polar\nprojections.Other Parameters:**kwargsThis method also takes the keyword arguments for the returned axes\nbase class; except for thefigureargument. The keyword arguments\nfor the rectilinear base classAxescan be found in\nthe following table but there might also be other keyword\narguments if another projection is used.PropertyDescriptionadjustable{'box', 'datalim'}agg_filtera filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array and two offsets from the bottom left corner of the imagealphascalar or Noneanchor(float, float) or {'C', 'SW', 'S', 'SE', 'E', 'NE', ...}animatedboolaspect{'auto', 'equal'} or floatautoscale_onboolautoscalex_onunknownautoscaley_onunknownaxes_locatorCallable[[Axes, Renderer], Bbox]axisbelowbool or 'line'box_aspectfloat or Noneclip_boxBboxBaseor Noneclip_onboolclip_pathPatch or (Path, Transform) or Nonefacecoloror fccolorfigureFigureframe_onboolgidstrin_layoutboollabelobjectmouseoverboolnavigateboolnavigate_modeunknownpath_effectslist ofAbstractPathEffectpickerNone or bool or float or callableposition[left, bottom, width, height] orBboxprop_cycleCyclerrasterization_zorderfloat or Nonerasterizedboolsketch_params(scale: float, length: float, randomness: float)snapbool or NonesubplotspecunknowntitlestrtransformTransformurlstrvisibleboolxbound(lower: float, upper: float)xlabelstrxlim(left: float, right: float)xmarginfloat greater than", "doc_id": "1f979ee9-2ec1-470d-953d-5148d19ffc01", "embedding": null, "doc_hash": "e849869ea7688275b77d95a7669eb4561909be491e2490da488ea158943f25aa", "extra_info": null, "node_info": {"start": 0, "end": 3274, "_node_type": "1"}, "relationships": {"1": "0b9709e6-1b0a-4843-9472-891049926598", "3": "921af296-ae97-44fa-8c68-4ce2da964acf"}}, "__type__": "1"}, "921af296-ae97-44fa-8c68-4ce2da964acf": {"__data__": {"text": "Renderer], Bbox]axisbelowbool or 'line'box_aspectfloat or Noneclip_boxBboxBaseor Noneclip_onboolclip_pathPatch or (Path, Transform) or Nonefacecoloror fccolorfigureFigureframe_onboolgidstrin_layoutboollabelobjectmouseoverboolnavigateboolnavigate_modeunknownpath_effectslist ofAbstractPathEffectpickerNone or bool or float or callableposition[left, bottom, width, height] orBboxprop_cycleCyclerrasterization_zorderfloat or Nonerasterizedboolsketch_params(scale: float, length: float, randomness: float)snapbool or NonesubplotspecunknowntitlestrtransformTransformurlstrvisibleboolxbound(lower: float, upper: float)xlabelstrxlim(left: float, right: float)xmarginfloat greater than -0.5xscaleunknownxticklabelsunknownxticksunknownybound(lower: float, upper: float)ylabelstrylim(bottom: float, top: float)ymarginfloat greater than -0.5yscaleunknownyticklabelsunknownyticksunknownzorderfloatSee alsoFigure.add_subplotpyplot.subplotspyplot.axesFigure.subplotsNotesCreating a new Axes will delete any preexisting Axes that\noverlaps with it beyond sharing a boundary:importmatplotlib.pyplotasplt# plot a line, implicitly creating a subplot(111)plt.plot([1,2,3])# now create a subplot which represents the top plot of a grid# with 2 rows and 1 column. Since this subplot will overlap the# first, the plot (and its axes) previously created, will be removedplt.subplot(211)If you do not want this behavior, use theFigure.add_subplotmethod\nor thepyplot.axesfunction instead.If nokwargsare passed and there exists an Axes in the location\nspecified byargsthen that Axes will be returned rather than a new\nAxes being created.Ifkwargsare passed and there exists an Axes in the location\nspecified byargs, the projection type is the same, and thekwargsmatch with the existing Axes, then the existing Axes is\nreturned. Otherwise a new Axes is created with the specified\nparameters. We save a reference to thekwargswhich we use\nfor this comparison. If any of the values inkwargsare\nmutable we will not detect the case where they are mutated.\nIn these cases we suggest usingFigure.add_subplotand the\nexplicit Axes API rather than the implicit pyplot API.Examplesplt.subplot(221)# equivalent but more generalax1=plt.subplot(2,2,1)# add a subplot with no frameax2=plt.subplot(222,frameon=False)# add a polar subplotplt.subplot(223,projection='polar')# add a red subplot that shares the x-axis with ax1plt.subplot(224,sharex=ax1,facecolor='red')# delete ax2 from the figureplt.delaxes(ax2)# add ax2 to the figure againplt.subplot(ax2)# make the first axes \"current\" againplt.subplot(221)Examples usingmatplotlib.pyplot.subplot#Controlling view limits using margins and sticky_edgesControlling view limits using margins and sticky_edgesResizing axes with tight layoutResizing axes with tight layoutGeographic ProjectionsGeographic ProjectionsManaging multiple figures in pyplotManaging multiple figures in pyplotSharing axis limits and viewsSharing axis limits and viewsShared axisShared axisMultiple subplotsMultiple subplotsSubplots spacings and marginsSubplots spacings and marginsBar chart on polar axisBar chart on polar axisTwo subplots using pyplotTwo subplots using pyplotSimple ColorbarSimple ColorbarMATPLOTLIB UNCHAINEDMATPLOTLIB UNCHAINEDCustomize RcCustomize Rctransforms.offset_copytransforms.offset_copyPyplot tutorialPyplot tutorialConstrained Layout GuideConstrained Layout GuideTight Layout guideTight Layout guideArranging multiple Axes in a FigureArranging multiple Axes in a Figure", "doc_id": "921af296-ae97-44fa-8c68-4ce2da964acf", "embedding": null, "doc_hash": "cb200abfb92bc5326b1dd02b4edea5fef5a33b641f992e51b03a4719dc05b4c2", "extra_info": null, "node_info": {"start": 2597, "end": 6073, "_node_type": "1"}, "relationships": {"1": "0b9709e6-1b0a-4843-9472-891049926598", "2": "1f979ee9-2ec1-470d-953d-5148d19ffc01"}}, "__type__": "1"}, "21dae533-69c4-4c7f-820a-fbaa24f1c6a8": {"__data__": {"text": "\u3010Name\u3011matplotlib\u3010Chapter\u3011matplotlib.pyplot\u3010Section\u3011matplotlib.pyplot.subplots\u3010Content\u3011The `matplotlib.pyplot.subplots` function is a utility wrapper that allows the user to create figures and subplots in a single function call. It returns a figure object and an array of axes objects that correspond to the subplots.Here is a summary of the parameters and their default values that can be passed to the `subplots` function:- `nrows`: Number of rows in the subplot grid (default: 1).- `ncols`: Number of columns in the subplot grid (default: 1).- `sharex`: Controls sharing of x-axis properties among subplots (default: False). Possible options are True, False, 'all', 'none', 'row', and 'col'.- `sharey`: Controls sharing of y-axis properties among subplots (default: False). Possible options are True, False, 'all', 'none', 'row', and 'col'.- `squeeze`: If True, extra dimensions are squeezed out from the returned array of axes objects (default: True).- `width_ratios`: Array-like object that defines the relative widths of the columns in the grid.- `height_ratios`: Array-like object that defines the relative heights of the rows in the grid.- `subplot_kw`: A dictionary of keywords that are passed to the `add_subplot` call used to create each subplot.- `gridspec_kw`: A dictionary of keywords that are passed to the `GridSpec` constructor used to create the grid the subplots are placed on.- `**fig_kw`: Additional keyword arguments that are passed to the `figure` call.The function returns a figure object (`fig`) and an array of axes objects (`ax`). The dimensions of the array can be controlled by the `squeeze` parameter.Here are some examples of how to use the `subplots` function:- To create a single subplot:```fig, ax = plt.subplots()```- To create a 2x2 grid of subplots:```fig, axs = plt.subplots(2, 2)```- To create two subplots and unpack the output array immediately:```fig, (ax1, ax2) = plt.subplots(1, 2, sharey=True)```After creating the subplots, you can manipulate each `ax` object to customize the plot, such as adding labels, titles, and legends.In addition to creating subplots, the `subplots` function also supports various plot types and customization options. Some of the examples provided in the documentation include bar charts, scatter plots, line plots, histograms, and more.Overall, the `subplots` function is a convenient and powerful tool for creating and customizing figures and subplots in Matplotlib.", "doc_id": "21dae533-69c4-4c7f-820a-fbaa24f1c6a8", "embedding": null, "doc_hash": "9c80818b3b7e913f27deb4301e5e2ba159155e6b91bca5bbad1100770e8c466a", "extra_info": null, "node_info": {"start": 0, "end": 2439, "_node_type": "1"}, "relationships": {"1": "29d607dc-9d3f-4a6c-8ce9-2153925b0407"}}, "__type__": "1"}, "57938b90-324b-44b3-b300-7d4e84aeb7e1": {"__data__": {"text": "\u3010Name\u3011matplotlib\u3010Chapter\u3011matplotlib.pyplot\u3010Section\u3011matplotlib.pyplot.xlabel\u3010Content\u3011matplotlib.pyplot.xlabel#matplotlib.pyplot.xlabel(xlabel,fontdict=None,labelpad=None,*,loc=None,**kwargs)[source]#Set the label for the x-axis.Parameters:xlabelstrThe label text.labelpadfloat, default:rcParams[\"axes.labelpad\"](default:4.0)Spacing in points from the Axes bounding box including ticks\nand tick labels. If None, the previous value is left as is.loc{'left', 'center', 'right'}, default:rcParams[\"xaxis.labellocation\"](default:'center')The label position. This is a high-level alternative for passing\nparametersxandhorizontalalignment.Other Parameters:**kwargsTextpropertiesTextproperties control the appearance of the label.See alsotextDocuments the properties supported byText.Examples usingmatplotlib.pyplot.xlabel#Multiple subplotsMultiple subplotsControlling style of text and labels using a dictionaryControlling style of text and labels using a dictionarySolarized Light stylesheetSolarized Light stylesheetInfinite linesInfinite linesText and mathtext using pyplotText and mathtext using pyplotFindobj DemoFindobj DemoCustom scaleCustom scalePyplot tutorialPyplot tutorialQuick start guideQuick start guide", "doc_id": "57938b90-324b-44b3-b300-7d4e84aeb7e1", "embedding": null, "doc_hash": "6eb0b15de59db4a6b43ee421879ea12b34b72380e6098f73f9c0a638254b60ff", "extra_info": null, "node_info": {"start": 0, "end": 1210, "_node_type": "1"}, "relationships": {"1": "c13b8d4e-ad89-4fe0-bf5b-c5c2a1228e72"}}, "__type__": "1"}, "01dcfc65-3776-471d-a44c-9e2d0ec0d546": {"__data__": {"text": "\u3010Name\u3011matplotlib\u3010Chapter\u3011matplotlib.pyplot\u3010Section\u3011matplotlib.pyplot.ylabel\u3010Content\u3011matplotlib.pyplot.ylabel#matplotlib.pyplot.ylabel(ylabel,fontdict=None,labelpad=None,*,loc=None,**kwargs)[source]#Set the label for the y-axis.Parameters:ylabelstrThe label text.labelpadfloat, default:rcParams[\"axes.labelpad\"](default:4.0)Spacing in points from the Axes bounding box including ticks\nand tick labels. If None, the previous value is left as is.loc{'bottom', 'center', 'top'}, default:rcParams[\"yaxis.labellocation\"](default:'center')The label position. This is a high-level alternative for passing\nparametersyandhorizontalalignment.Other Parameters:**kwargsTextpropertiesTextproperties control the appearance of the label.See alsotextDocuments the properties supported byText.Examples usingmatplotlib.pyplot.ylabel#Multiple subplotsMultiple subplotsControlling style of text and labels using a dictionaryControlling style of text and labels using a dictionarySolarized Light stylesheetSolarized Light stylesheetSimple plotSimple plotText and mathtext using pyplotText and mathtext using pyplotFindobj DemoFindobj DemoTable DemoTable DemoCustom scaleCustom scalePyplot tutorialPyplot tutorialQuick start guideQuick start guide", "doc_id": "01dcfc65-3776-471d-a44c-9e2d0ec0d546", "embedding": null, "doc_hash": "1ee6e5333c914b20d3abe7e943d53b2c379cd7b57e23f674e982855a512a8d44", "extra_info": null, "node_info": {"start": 0, "end": 1224, "_node_type": "1"}, "relationships": {"1": "70328127-e70b-472c-8a7e-bea0e8a65703"}}, "__type__": "1"}, "41e06a6d-d74a-4600-8b6d-10d97754e6eb": {"__data__": {"text": "\u3010Name\u3011matplotlib\u3010Chapter\u3011matplotlib.pyplot\u3010Section\u3011matplotlib.pyplot.xlim\u3010Content\u3011matplotlib.pyplot.xlim#matplotlib.pyplot.xlim(*args,**kwargs)[source]#Get or set the x limits of the current axes.Call signatures:left,right=xlim()# return the current xlimxlim((left,right))# set the xlim to left, rightxlim(left,right)# set the xlim to left, rightIf you do not specify args, you can passleftorrightas kwargs,\ni.e.:xlim(right=3)# adjust the right leaving left unchangedxlim(left=1)# adjust the left leaving right unchangedSetting limits turns autoscaling off for the x-axis.Returns:left, rightA tuple of the new x-axis limits.NotesCalling this function with no arguments (e.g.xlim()) is the pyplot\nequivalent of callingget_xlimon the current axes.\nCalling this function with arguments is the pyplot equivalent of callingset_xlimon the current axes. All arguments are passed though.Examples usingmatplotlib.pyplot.xlim#Shared axisShared axisInfinite linesInfinite linesFrame grabbingFrame grabbingInteractive functionsInteractive functions", "doc_id": "41e06a6d-d74a-4600-8b6d-10d97754e6eb", "embedding": null, "doc_hash": "e70c97d75e4f1c083fbd38cb2c0ac15ff6ef5f52b066a8806be9a65ef24652fa", "extra_info": null, "node_info": {"start": 0, "end": 1036, "_node_type": "1"}, "relationships": {"1": "402ec030-3fb4-4018-bcdd-5308a6575284"}}, "__type__": "1"}, "923c83fc-f45a-4989-86d0-c4757d18a4c3": {"__data__": {"text": "\u3010Name\u3011matplotlib\u3010Chapter\u3011matplotlib.pyplot\u3010Section\u3011matplotlib.pyplot.ylim\u3010Content\u3011matplotlib.pyplot.ylim#matplotlib.pyplot.ylim(*args,**kwargs)[source]#Get or set the y-limits of the current axes.Call signatures:bottom,top=ylim()# return the current ylimylim((bottom,top))# set the ylim to bottom, topylim(bottom,top)# set the ylim to bottom, topIf you do not specify args, you can alternatively passbottomortopas kwargs, i.e.:ylim(top=3)# adjust the top leaving bottom unchangedylim(bottom=1)# adjust the bottom leaving top unchangedSetting limits turns autoscaling off for the y-axis.Returns:bottom, topA tuple of the new y-axis limits.NotesCalling this function with no arguments (e.g.ylim()) is the pyplot\nequivalent of callingget_ylimon the current axes.\nCalling this function with arguments is the pyplot equivalent of callingset_ylimon the current axes. All arguments are passed though.Examples usingmatplotlib.pyplot.ylim#Infinite linesInfinite linesFrame grabbingFrame grabbingInteractive functionsInteractive functionsFindobj DemoFindobj DemoPyplot tutorialPyplot tutorial", "doc_id": "923c83fc-f45a-4989-86d0-c4757d18a4c3", "embedding": null, "doc_hash": "c24238235b90646eb4424b04993d397a00a46c905ed6e47c3d3af109bd942745", "extra_info": null, "node_info": {"start": 0, "end": 1082, "_node_type": "1"}, "relationships": {"1": "19af61ee-a052-4192-93ec-d0040315bac1"}}, "__type__": "1"}, "2bee4d70-b50a-4dbb-af2d-5929296bd0b0": {"__data__": {"text": "\u3010Name\u3011matplotlib\u3010Chapter\u3011matplotlib.pyplot\u3010Section\u3011matplotlib.pyplot.title\u3010Content\u3011matplotlib.pyplot.title#matplotlib.pyplot.title(label,fontdict=None,loc=None,pad=None,*,y=None,**kwargs)[source]#Set a title for the Axes.Set one of the three available Axes titles. The available titles\nare positioned above the Axes in the center, flush with the left\nedge, and flush with the right edge.Parameters:labelstrText to use for the titlefontdictdictDiscouragedThe use offontdictis discouraged. Parameters should be passed as\nindividual keyword arguments or using dictionary-unpackingset_title(...,**fontdict).A dictionary controlling the appearance of the title text,\nthe defaultfontdictis:{'fontsize':rcParams['axes.titlesize'],'fontweight':rcParams['axes.titleweight'],'color':rcParams['axes.titlecolor'],'verticalalignment':'baseline','horizontalalignment':loc}loc{'center', 'left', 'right'}, default:rcParams[\"axes.titlelocation\"](default:'center')Which title to set.yfloat, default:rcParams[\"axes.titley\"](default:None)Vertical Axes location for the title (1.0 is the top). If\nNone (the default) andrcParams[\"axes.titley\"](default:None) is also None, y is\ndetermined automatically to avoid decorators on the Axes.padfloat, default:rcParams[\"axes.titlepad\"](default:6.0)The offset of the title from the top of the Axes, in points.Returns:TextThe matplotlib text instance representing the titleOther Parameters:**kwargsTextpropertiesOther keyword arguments are text properties, seeTextfor a list\nof valid text properties.Examples usingmatplotlib.pyplot.title#Plotting masked and NaN valuesPlotting masked and NaN valuesStairs DemoStairs DemoStep DemoStep DemoGeographic ProjectionsGeographic ProjectionsMultiple subplotsMultiple subplotsControlling style of text and labels using a dictionaryControlling style of text and labels using a dictionaryTitle positioningTitle positioningSolarized Light stylesheetSolarized Light stylesheetStyle sheets referenceStyle sheets referenceText and mathtext using pyplotText and mathtext using pyplotInteractive functionsInteractive functionsFindobj DemoFindobj DemoMultipage PDFMultipage PDFSet and get propertiesSet and get propertiesTable DemoTable DemoZorder DemoZorder DemoRotating a 3D plotRotating a 3D plotCustom scaleCustom scaleThe Sankey classThe Sankey classSVG HistogramSVG HistogramPyplot tutorialPyplot tutorialQuick start guideQuick start guide", "doc_id": "2bee4d70-b50a-4dbb-af2d-5929296bd0b0", "embedding": null, "doc_hash": "72dba1ac744303519a89f10b0b84c2fe754909ceaeab568982df7dde637b0d45", "extra_info": null, "node_info": {"start": 0, "end": 2394, "_node_type": "1"}, "relationships": {"1": "66f0df93-c8b2-457d-8822-669a847faf1e"}}, "__type__": "1"}, "8f99addd-4db5-4034-94c5-7861e287c264": {"__data__": {"text": "\u3010Name\u3011matplotlib\u3010Chapter\u3011matplotlib.pyplot\u3010Section\u3011matplotlib.pyplot.legend\u3010Content\u3011matplotlib.pyplot.legend#matplotlib.pyplot.legend(*args,**kwargs)[source]#Place a legend on the Axes.Call signatures:legend()legend(handles,labels)legend(handles=handles)legend(labels)The call signatures correspond to the following different ways to use\nthis method:1. Automatic detection of elements to be shown in the legendThe elements to be added to the legend are automatically determined,\nwhen you do not pass in any extra arguments.In this case, the labels are taken from the artist. You can specify\nthem either at artist creation or by calling theset_label()method on the artist:ax.plot([1,2,3],label='Inline label')ax.legend()or:line,=ax.plot([1,2,3])line.set_label('Label via method')ax.legend()NoteSpecific artists can be excluded from the automatic legend element\nselection by using a label starting with an underscore, \"_\".\nA string starting with an underscore is the default label for all\nartists, so callingAxes.legendwithout any arguments and\nwithout setting the labels manually will result in no legend being\ndrawn.2. Explicitly listing the artists and labels in the legendFor full control of which artists have a legend entry, it is possible\nto pass an iterable of legend artists followed by an iterable of\nlegend labels respectively:ax.legend([line1,line2,line3],['label1','label2','label3'])3. Explicitly listing the artists in the legendThis is similar to 2, but the labels are taken from the artists'\nlabel properties. Example:line1,=ax.plot([1,2,3],label='label1')line2,=ax.plot([1,2,3],label='label2')ax.legend(handles=[line1,line2])4. Labeling existing plot elementsDiscouragedThis call signature is discouraged, because the relation between\nplot elements and labels is only implicit by their order and can\neasily be mixed up.To make a legend for all artists on an Axes, call this function with\nan iterable of strings, one for each legend item. For example:ax.plot([1,2,3])ax.plot([5,6,7])ax.legend(['First line','Second line'])Parameters:handlessequence of (Artistor tuple ofArtist), optionalA list of Artists (lines, patches) to be added to the legend.\nUse this together withlabels, if you need full control on what\nis shown in the legend and the automatic mechanism described above\nis not sufficient.The length of handles and labels should be the same in this\ncase. If they are not, they are truncated to the smaller length.If an entry contains a tuple, then the legend handler for all Artists in the\ntuple will be placed alongside a single label.labelslist of str, optionalA list of labels to show next to the artists.\nUse this together withhandles, if you need full control on what\nis shown in the legend and the automatic mechanism described above\nis not sufficient.Returns:LegendOther Parameters:locstr or pair of floats, default:rcParams[\"legend.loc\"](default:'best')The location of the legend.The strings'upperleft','upperright','lowerleft','lowerright'place the legend at the corresponding corner of the\naxes.The strings'uppercenter','lowercenter','centerleft','centerright'place the legend at the center of the corresponding edge\nof the axes.The string'center'places the legend at the center of the axes.The string'best'places the legend at the location, among the nine\nlocations defined so far, with the minimum overlap with other drawn\nartists. This option can be quite slow for plots with large amounts of\ndata; your plotting speed may benefit from providing a specific location.The location can also be a 2-tuple giving the coordinates of the lower-left\ncorner of the legend in axes coordinates", "doc_id": "8f99addd-4db5-4034-94c5-7861e287c264", "embedding": null, "doc_hash": "ef104da04256ae4efe52162612fdb19765fa91fb916eb4718035456b3eef39ff", "extra_info": null, "node_info": {"start": 0, "end": 3618, "_node_type": "1"}, "relationships": {"1": "40e0131c-28aa-483f-98af-41b1e81b2756", "3": "5c4f80b1-a38e-4fb9-94f3-fc35d99fa974"}}, "__type__": "1"}, "5c4f80b1-a38e-4fb9-94f3-fc35d99fa974": {"__data__": {"text": "location of the legend.The strings'upperleft','upperright','lowerleft','lowerright'place the legend at the corresponding corner of the\naxes.The strings'uppercenter','lowercenter','centerleft','centerright'place the legend at the center of the corresponding edge\nof the axes.The string'center'places the legend at the center of the axes.The string'best'places the legend at the location, among the nine\nlocations defined so far, with the minimum overlap with other drawn\nartists. This option can be quite slow for plots with large amounts of\ndata; your plotting speed may benefit from providing a specific location.The location can also be a 2-tuple giving the coordinates of the lower-left\ncorner of the legend in axes coordinates (in which casebbox_to_anchorwill be ignored).For back-compatibility,'centerright'(but no other location) can also\nbe spelled'right', and each \"string\" location can also be given as a\nnumeric value:Location StringLocation Code'best' (Axes only)0'upper right'1'upper left'2'lower left'3'lower right'4'right'5'center left'6'center right'7'lower center'8'upper center'9'center'10bbox_to_anchorBboxBase, 2-tuple, or 4-tuple of floatsBox that is used to position the legend in conjunction withloc.\nDefaults toaxes.bbox(if called as a method toAxes.legend) orfigure.bbox(ifFigure.legend). This argument allows arbitrary\nplacement of the legend.Bbox coordinates are interpreted in the coordinate system given bybbox_transform, with the default transform\nAxes or Figure coordinates, depending on whichlegendis called.If a 4-tuple orBboxBaseis given, then it specifies the bbox(x,y,width,height)that the legend is placed in.\nTo put the legend in the best location in the bottom right\nquadrant of the axes (or figure):loc='best',bbox_to_anchor=(0.5,0.,0.5,0.5)A 2-tuple(x,y)places the corner of the legend specified bylocat\nx, y. For example, to put the legend's upper right-hand corner in the\ncenter of the axes (or figure) the following keywords can be used:loc='upper right',bbox_to_anchor=(0.5,0.5)ncolsint, default: 1The number of columns that the legend has.For backward compatibility, the spellingncolis also supported\nbut it is discouraged. If both are given,ncolstakes precedence.propNone orFontPropertiesor dictThe font properties of the legend. If None (default), the currentmatplotlib.rcParamswill be used.fontsizeint or {'xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large'}The font size of the legend. If the value is numeric the size will be the\nabsolute font size in points. String values are relative to the current\ndefault font size. This argument is only used ifpropis not specified.labelcolorstr or list, default:rcParams[\"legend.labelcolor\"](default:'None')The color of the text in the legend. Either a valid color string\n(for example, 'red'), or a list of color strings. The labelcolor can\nalso be made to match the color of the line or marker using 'linecolor',\n'markerfacecolor' (or 'mfc'), or 'markeredgecolor' (or 'mec').Labelcolor can be set globally usingrcParams[\"legend.labelcolor\"](default:'None'). If None,\nusercParams[\"text.color\"](default:'black').numpointsint, default:rcParams[\"legend.numpoints\"](default:1)The number of marker points in the legend when creating a legend\nentry for aLine2D(line).scatterpointsint, default:rcParams[\"legend.scatterpoints\"](default:1)The number of marker points in the legend when creating\na legend entry for aPathCollection(scatter plot).scatteryoffsetsiterable of", "doc_id": "5c4f80b1-a38e-4fb9-94f3-fc35d99fa974", "embedding": null, "doc_hash": "b58597d7399ee3c9d0b9cfcadccf9f58e48b02b5a8f377eca24423a20e100f12", "extra_info": null, "node_info": {"start": 2981, "end": 6453, "_node_type": "1"}, "relationships": {"1": "40e0131c-28aa-483f-98af-41b1e81b2756", "2": "8f99addd-4db5-4034-94c5-7861e287c264", "3": "611c6c1a-8eb4-48d5-b22c-94f7158add14"}}, "__type__": "1"}, "611c6c1a-8eb4-48d5-b22c-94f7158add14": {"__data__": {"text": "of color strings. The labelcolor can\nalso be made to match the color of the line or marker using 'linecolor',\n'markerfacecolor' (or 'mfc'), or 'markeredgecolor' (or 'mec').Labelcolor can be set globally usingrcParams[\"legend.labelcolor\"](default:'None'). If None,\nusercParams[\"text.color\"](default:'black').numpointsint, default:rcParams[\"legend.numpoints\"](default:1)The number of marker points in the legend when creating a legend\nentry for aLine2D(line).scatterpointsint, default:rcParams[\"legend.scatterpoints\"](default:1)The number of marker points in the legend when creating\na legend entry for aPathCollection(scatter plot).scatteryoffsetsiterable of floats, default:[0.375,0.5,0.3125]The vertical offset (relative to the font size) for the markers\ncreated for a scatter plot legend entry. 0.0 is at the base the\nlegend text, and 1.0 is at the top. To draw all markers at the\nsame height, set to[0.5].markerscalefloat, default:rcParams[\"legend.markerscale\"](default:1.0)The relative size of legend markers compared to the originally drawn ones.markerfirstbool, default: TrueIfTrue, legend marker is placed to the left of the legend label.\nIfFalse, legend marker is placed to the right of the legend label.reversebool, default: FalseIfTrue, the legend labels are displayed in reverse order from the input.\nIfFalse, the legend labels are displayed in the same order as the input.New in version 3.7.frameonbool, default:rcParams[\"legend.frameon\"](default:True)Whether the legend should be drawn on a patch (frame).fancyboxbool, default:rcParams[\"legend.fancybox\"](default:True)Whether round edges should be enabled around theFancyBboxPatchwhich\nmakes up the legend's background.shadowNone, bool or dict, default:rcParams[\"legend.shadow\"](default:False)Whether to draw a shadow behind the legend.\nThe shadow can be configured usingPatchkeywords.\nCustomization viarcParams[\"legend.shadow\"](default:False) is currently not supported.framealphafloat, default:rcParams[\"legend.framealpha\"](default:0.8)The alpha transparency of the legend's background.\nIfshadowis activated andframealphaisNone, the default value is\nignored.facecolor\"inherit\" or color, default:rcParams[\"legend.facecolor\"](default:'inherit')The legend's background color.\nIf\"inherit\", usercParams[\"axes.facecolor\"](default:'white').edgecolor\"inherit\" or color, default:rcParams[\"legend.edgecolor\"](default:'0.8')The legend's background patch edge color.\nIf\"inherit\", use takercParams[\"axes.edgecolor\"](default:'black').mode{\"expand\", None}Ifmodeis set to\"expand\"the legend will be horizontally\nexpanded to fill the axes area (orbbox_to_anchorif defines\nthe legend's size).bbox_transformNone orTransformThe transform for the bounding box (bbox_to_anchor). For a value\nofNone(default) the Axes'transAxestransform will be used.titlestr or NoneThe legend's title. Default is no title (None).title_fontpropertiesNone orFontPropertiesor dictThe font properties of the legend's title. If None (default), thetitle_fontsizeargument will be used if present; iftitle_fontsizeis\nalso None, the currentrcParams[\"legend.title_fontsize\"](default:None) will be used.title_fontsizeint or {'xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large'}, default:rcParams[\"legend.title_fontsize\"](default:None)The font size of the legend's title.\nNote: This cannot be combined withtitle_fontproperties. If you", "doc_id": "611c6c1a-8eb4-48d5-b22c-94f7158add14", "embedding": null, "doc_hash": "a9aacede61b92be73a9beb39c7dc6e02c4d5c577ce4d09cb2d291455b123ede0", "extra_info": null, "node_info": {"start": 6496, "end": 9863, "_node_type": "1"}, "relationships": {"1": "40e0131c-28aa-483f-98af-41b1e81b2756", "2": "5c4f80b1-a38e-4fb9-94f3-fc35d99fa974", "3": "84b69df2-4714-4801-8434-250a5c7e892e"}}, "__type__": "1"}, "84b69df2-4714-4801-8434-250a5c7e892e": {"__data__": {"text": "For a value\nofNone(default) the Axes'transAxestransform will be used.titlestr or NoneThe legend's title. Default is no title (None).title_fontpropertiesNone orFontPropertiesor dictThe font properties of the legend's title. If None (default), thetitle_fontsizeargument will be used if present; iftitle_fontsizeis\nalso None, the currentrcParams[\"legend.title_fontsize\"](default:None) will be used.title_fontsizeint or {'xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large'}, default:rcParams[\"legend.title_fontsize\"](default:None)The font size of the legend's title.\nNote: This cannot be combined withtitle_fontproperties. If you want\nto set the fontsize alongside other font properties, use thesizeparameter intitle_fontproperties.alignment{'center', 'left', 'right'}, default: 'center'The alignment of the legend title and the box of entries. The entries\nare aligned as a single block, so that markers always lined up.borderpadfloat, default:rcParams[\"legend.borderpad\"](default:0.4)The fractional whitespace inside the legend border, in font-size units.labelspacingfloat, default:rcParams[\"legend.labelspacing\"](default:0.5)The vertical space between the legend entries, in font-size units.handlelengthfloat, default:rcParams[\"legend.handlelength\"](default:2.0)The length of the legend handles, in font-size units.handleheightfloat, default:rcParams[\"legend.handleheight\"](default:0.7)The height of the legend handles, in font-size units.handletextpadfloat, default:rcParams[\"legend.handletextpad\"](default:0.8)The pad between the legend handle and text, in font-size units.borderaxespadfloat, default:rcParams[\"legend.borderaxespad\"](default:0.5)The pad between the axes and legend border, in font-size units.columnspacingfloat, default:rcParams[\"legend.columnspacing\"](default:2.0)The spacing between columns, in font-size units.handler_mapdict or NoneThe custom dictionary mapping instances or types to a legend\nhandler. Thishandler_mapupdates the default handler map\nfound atmatplotlib.legend.Legend.get_legend_handler_map.draggablebool, default: FalseWhether the legend can be dragged with the mouse.See alsoFigure.legendNotesSome artists are not supported by this function. SeeLegend guidefor details.Examples(Sourcecode,2x.png,png)Examples usingmatplotlib.pyplot.legend#Errorbar limit selectionErrorbar limit selectionDiscrete distribution as horizontal bar chartDiscrete distribution as horizontal bar chartPlotting masked and NaN valuesPlotting masked and NaN valuesScatter plots with a legendScatter plots with a legendStairs DemoStairs DemoStep DemoStep DemoContourf HatchingContourf HatchingContourf and log color scaleContourf and log color scaleTricontour DemoTricontour DemoLabeling a pie and a donutLabeling a pie and a donutPolar legendPolar legendLegend using pre-defined labelsLegend using pre-defined labelsInfinite linesInfinite linesFindobj DemoFindobj DemoZorder DemoZorder DemoThe Sankey classThe Sankey classSVG HistogramSVG HistogramQuick start guideQuick start guide", "doc_id": "84b69df2-4714-4801-8434-250a5c7e892e", "embedding": null, "doc_hash": "ce7033a2da524c9672966492667b74f5b791b54b2ada769e5149fa95cf2004a3", "extra_info": null, "node_info": {"start": 9813, "end": 12826, "_node_type": "1"}, "relationships": {"1": "40e0131c-28aa-483f-98af-41b1e81b2756", "2": "611c6c1a-8eb4-48d5-b22c-94f7158add14"}}, "__type__": "1"}, "0259b837-fae2-4a4e-a897-ec2d76093d95": {"__data__": {"text": "\u3010Name\u3011matplotlib\u3010Chapter\u3011matplotlib.pyplot\u3010Section\u3011matplotlib.pyplot.grid\u3010Content\u3011matplotlib.pyplot.grid#matplotlib.pyplot.grid(visible=None,which='major',axis='both',**kwargs)[source]#Configure the grid lines.Parameters:visiblebool or None, optionalWhether to show the grid lines. If anykwargsare supplied, it\nis assumed you want the grid on andvisiblewill be set to True.IfvisibleisNoneand there are nokwargs, this toggles the\nvisibility of the lines.which{'major', 'minor', 'both'}, optionalThe grid lines to apply the changes on.axis{'both', 'x', 'y'}, optionalThe axis to apply the changes on.**kwargsLine2DpropertiesDefine the line properties of the grid, e.g.:grid(color='r',linestyle='-',linewidth=2)Valid keyword arguments are:PropertyDescriptionagg_filtera filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array and two offsets from the bottom left corner of the imagealphascalar or Noneanimatedboolantialiasedor aaboolclip_boxBboxBaseor Noneclip_onboolclip_pathPatch or (Path, Transform) or Nonecoloror ccolordash_capstyleCapStyleor {'butt', 'projecting', 'round'}dash_joinstyleJoinStyleor {'miter', 'round', 'bevel'}dashessequence of floats (on/off ink in points) or (None, None)data(2, N) array or two 1D arraysdrawstyleor ds{'default', 'steps', 'steps-pre', 'steps-mid', 'steps-post'}, default: 'default'figureFigurefillstyle{'full', 'left', 'right', 'bottom', 'top', 'none'}gapcolorcolor or Nonegidstrin_layoutboollabelobjectlinestyleor ls{'-', '--', '-.', ':', '', (offset, on-off-seq), ...}linewidthor lwfloatmarkermarker style string,PathorMarkerStylemarkeredgecoloror meccolormarkeredgewidthor mewfloatmarkerfacecoloror mfccolormarkerfacecoloraltor mfcaltcolormarkersizeor msfloatmarkeveryNone or int or (int, int) or slice or list[int] or float or (float, float) or list[bool]mouseoverboolpath_effectslist ofAbstractPathEffectpickerfloat or callable[[Artist, Event], tuple[bool, dict]]pickradiusfloatrasterizedboolsketch_params(scale: float, length: float, randomness: float)snapbool or Nonesolid_capstyleCapStyleor {'butt', 'projecting', 'round'}solid_joinstyleJoinStyleor {'miter', 'round', 'bevel'}transformunknownurlstrvisibleboolxdata1D arrayydata1D arrayzorderfloatNotesThe axis is drawn as a unit, so the effective zorder for drawing the\ngrid is determined by the zorder of each axis, not by the zorder of theLine2Dobjects comprising the grid. Therefore, to set grid zorder,\nuseset_axisbelowor, for more control, call theset_zordermethod of each axis.Examples usingmatplotlib.pyplot.grid#Step DemoStep DemoGeographic ProjectionsGeographic ProjectionsText and mathtext using pyplotText and mathtext using pyplotCustomize RcCustomize RcFindobj DemoFindobj DemoCustom scaleCustom scaleSkewT-logP diagram: using transforms and custom projectionsSkewT-logP diagram: using transforms and custom projectionsPyplot tutorialPyplot tutorial", "doc_id": "0259b837-fae2-4a4e-a897-ec2d76093d95", "embedding": null, "doc_hash": "75d369908f34c99404518a1d92c4b5ae445b3a263d7efb914538a832944a9f6b", "extra_info": null, "node_info": {"start": 0, "end": 2902, "_node_type": "1"}, "relationships": {"1": "35deea04-7fc0-4524-b940-94ada213b3ad"}}, "__type__": "1"}, "77a6f780-e158-4696-b9af-c6dcf9389bb9": {"__data__": {"text": "\u3010Name\u3011matplotlib\u3010Chapter\u3011matplotlib.pyplot\u3010Section\u3011matplotlib.pyplot.savefig\u3010Content\u3011matplotlib.pyplot.savefig#matplotlib.pyplot.savefig(*args,**kwargs)[source]#Save the current figure.Call signature:savefig(fname,*,transparent=None,dpi='figure',format=None,metadata=None,bbox_inches=None,pad_inches=0.1,facecolor='auto',edgecolor='auto',backend=None,**kwargs)The available output formats depend on the backend being used.Parameters:fnamestr or path-like or binary file-likeA path, or a Python file-like object, or\npossibly some backend-dependent object such asmatplotlib.backends.backend_pdf.PdfPages.Ifformatis set, it determines the output format, and the file\nis saved asfname. Note thatfnameis used verbatim, and there\nis no attempt to make the extension, if any, offnamematchformat, and no extension is appended.Ifformatis not set, then the format is inferred from the\nextension offname, if there is one. Ifformatis not\nset andfnamehas no extension, then the file is saved withrcParams[\"savefig.format\"](default:'png') and the appropriate extension is appended tofname.Other Parameters:transparentbool, default:rcParams[\"savefig.transparent\"](default:False)IfTrue, the Axes patches will all be transparent; the\nFigure patch will also be transparent unlessfacecolorand/oredgecolorare specified via kwargs.IfFalsehas no effect and the color of the Axes and\nFigure patches are unchanged (unless the Figure patch\nis specified via thefacecolorand/oredgecolorkeyword\narguments in which case those colors are used).The transparency of these patches will be restored to their\noriginal values upon exit of this function.This is useful, for example, for displaying\na plot on top of a colored background on a web page.dpifloat or 'figure', default:rcParams[\"savefig.dpi\"](default:'figure')The resolution in dots per inch. If 'figure', use the figure's\ndpi value.formatstrThe file format, e.g. 'png', 'pdf', 'svg', ... The behavior when\nthis is unset is documented underfname.metadatadict, optionalKey/value pairs to store in the image metadata. The supported keys\nand defaults depend on the image format and backend:'png' with Agg backend: See the parametermetadataofprint_png.'pdf' with pdf backend: See the parametermetadataofPdfPages.'svg' with svg backend: See the parametermetadataofprint_svg.'eps' and 'ps' with PS backend: Only 'Creator' is supported.Not supported for 'pgf', 'raw', and 'rgba' as those formats do not support\nembedding metadata.\nDoes not currently support 'jpg', 'tiff', or 'webp', but may include\nembedding EXIF metadata in the future.bbox_inchesstr orBbox, default:rcParams[\"savefig.bbox\"](default:None)Bounding box in inches: only the given portion of the figure is\nsaved. If 'tight', try to figure out the tight bbox of the figure.pad_inchesfloat or 'layout', default:rcParams[\"savefig.pad_inches\"](default:0.1)Amount of padding in inches around the figure when bbox_inches is\n'tight'. If 'layout' use the padding from the constrained or\ncompressed layout engine; ignored if one of those engines is not in\nuse.facecolorcolor or 'auto', default:rcParams[\"savefig.facecolor\"](default:'auto')The facecolor of the figure. If 'auto', use the current figure\nfacecolor.edgecolorcolor or 'auto', default:rcParams[\"savefig.edgecolor\"](default:'auto')The edgecolor of the figure. If 'auto', use the current figure\nedgecolor.backendstr, optionalUse a non-default backend to render the file, e.g. to render a\npng file with the \"cairo\" backend rather than the default \"agg\",\nor a pdf file with the \"pgf\" backend rather than the default\n\"pdf\". Note", "doc_id": "77a6f780-e158-4696-b9af-c6dcf9389bb9", "embedding": null, "doc_hash": "462ae8b456ab904998ffcaaa766c67cf0683acbfc6d94ceb87108e1ef68635a7", "extra_info": null, "node_info": {"start": 0, "end": 3557, "_node_type": "1"}, "relationships": {"1": "8ed614c1-b29d-4e0b-8f82-214ff157076b", "3": "df2bb066-b103-4cac-a628-d20f45824979"}}, "__type__": "1"}, "df2bb066-b103-4cac-a628-d20f45824979": {"__data__": {"text": "of padding in inches around the figure when bbox_inches is\n'tight'. If 'layout' use the padding from the constrained or\ncompressed layout engine; ignored if one of those engines is not in\nuse.facecolorcolor or 'auto', default:rcParams[\"savefig.facecolor\"](default:'auto')The facecolor of the figure. If 'auto', use the current figure\nfacecolor.edgecolorcolor or 'auto', default:rcParams[\"savefig.edgecolor\"](default:'auto')The edgecolor of the figure. If 'auto', use the current figure\nedgecolor.backendstr, optionalUse a non-default backend to render the file, e.g. to render a\npng file with the \"cairo\" backend rather than the default \"agg\",\nor a pdf file with the \"pgf\" backend rather than the default\n\"pdf\". Note that the default backend is normally sufficient. SeeThe builtin backendsfor a list of valid backends for each\nfile format. Custom backends can be referenced as \"module://...\".orientation{'landscape', 'portrait'}Currently only supported by the postscript backend.papertypestrOne of 'letter', 'legal', 'executive', 'ledger', 'a0' through\n'a10', 'b0' through 'b10'. Only supported for postscript\noutput.bbox_extra_artistslist ofArtist, optionalA list of extra artists that will be considered when the\ntight bbox is calculated.pil_kwargsdict, optionalAdditional keyword arguments that are passed toPIL.Image.Image.savewhen saving the figure.Examples usingmatplotlib.pyplot.savefig#Print StdoutPrint StdoutRasterization for vector graphicsRasterization for vector graphicsSVG Filter LineSVG Filter LineSVG filter pieSVG filter pieCanvasAgg demoCanvasAgg demoSVG HistogramSVG HistogramSVG TooltipSVG Tooltip", "doc_id": "df2bb066-b103-4cac-a628-d20f45824979", "embedding": null, "doc_hash": "02e9801890f77bc231a1cce034aa065b9e6f212cbc945349251ebba08a17e3c0", "extra_info": null, "node_info": {"start": 2841, "end": 4459, "_node_type": "1"}, "relationships": {"1": "8ed614c1-b29d-4e0b-8f82-214ff157076b", "2": "77a6f780-e158-4696-b9af-c6dcf9389bb9"}}, "__type__": "1"}, "2d2dc7dd-775b-4464-81ee-f3b590892e64": {"__data__": {"text": "\u3010Name\u3011matplotlib\u3010Chapter\u3011matplotlib.pyplot\u3010Section\u3011matplotlib.pyplot.show\u3010Content\u3011The Numpy reference is a comprehensive guide that provides detailed information about the Numpy library, which is a fundamental package for scientific computing in Python. This reference is organized by topic and provides information on each function and class available in the Numpy library.The reference starts with a brief introduction to Numpy and its main features, such as array creation, manipulation, and mathematical operations. It also explains how to install Numpy and import it into a Python program.The reference then dives into the various functions and classes provided by Numpy. Each function and class is explained in detail and includes information about the parameters, return values, and usage examples. Some of the functions covered in the reference include array creation functions (e.g., arange, linspace), mathematical functions (e.g., sin, cos, exp), linear algebra functions (e.g., dot, eig), and array manipulation functions (e.g., reshape, transpose).In addition to the functions and classes, the reference also covers topics such as indexing and slicing arrays, broadcasting, and array iterators. It also includes information on how to save and load arrays from files, as well as how to perform input and output operations with arrays.The Numpy reference also provides information on how to perform advanced array operations, such as sorting, searching, and resizing arrays. It also covers topics such as structured arrays, masked arrays, and universal functions.Throughout the reference, there are numerous examples that demonstrate the usage of each function or class. These examples are accompanied by code snippets and detailed explanations of the output.Overall, the Numpy reference is a valuable resource for anyone working with the Numpy library. It provides a comprehensive overview of all the functions and classes available in Numpy, along with examples and explanations. Whether you are a beginner or an experienced user of Numpy, this reference will help you understand and utilize Numpy's functionality to its fullest extent.", "doc_id": "2d2dc7dd-775b-4464-81ee-f3b590892e64", "embedding": null, "doc_hash": "6dbea85a084f776dd4bb83559fef01dcd50abbc107c5e1b03dfe57f02c8251af", "extra_info": null, "node_info": {"start": 0, "end": 2149, "_node_type": "1"}, "relationships": {"1": "2fc6c1d5-6a22-4b97-8112-e25f4a2f87e1"}}, "__type__": "1"}, "082ef123-bc68-4a24-b8b8-fb48acd23f58": {"__data__": {"text": "\u3010Name\u3011matplotlib\u3010Chapter\u3011matplotlib.pyplot\u3010Section\u3011matplotlib.pyplot.tight_layout\u3010Content\u3011matplotlib.pyplot.tight_layout#matplotlib.pyplot.tight_layout(*,pad=1.08,h_pad=None,w_pad=None,rect=None)[source]#Adjust the padding between and around subplots.To exclude an artist on the Axes from the bounding box calculation\nthat determines the subplot parameters (i.e. legend, or annotation),\nseta.set_in_layout(False)for that artist.Parameters:padfloat, default: 1.08Padding between the figure edge and the edges of subplots,\nas a fraction of the font size.h_pad, w_padfloat, default:padPadding (height/width) between edges of adjacent subplots,\nas a fraction of the font size.recttuple (left, bottom, right, top), default: (0, 0, 1, 1)A rectangle in normalized figure coordinates into which the whole\nsubplots area (including labels) will fit.See alsoFigure.set_layout_enginepyplot.tight_layoutExamples usingmatplotlib.pyplot.tight_layout#LinestylesLinestylesCreating annotated heatmapsCreating annotated heatmapsInterpolations for imshowInterpolations for imshowStreamplotStreamplotResizing axes with tight layoutResizing axes with tight layoutLabeling ticks using engineering notationLabeling ticks using engineering notationFigure legend demoFigure legend demoZorder DemoZorder Demo3D wireframe plots in one direction3D wireframe plots in one directionTick locatorsTick locatorsTight Layout guideTight Layout guide", "doc_id": "082ef123-bc68-4a24-b8b8-fb48acd23f58", "embedding": null, "doc_hash": "05b5838ff56c68ec643cdb88087cde2ccc7c2ac58f68289a97f3aef0884dc9d7", "extra_info": null, "node_info": {"start": 0, "end": 1413, "_node_type": "1"}, "relationships": {"1": "37f5bc0e-4eae-4048-a1ec-33c13b47e551"}}, "__type__": "1"}, "15732f05-b725-49d2-8bde-50a805070870": {"__data__": {"text": "\u3010Name\u3011matplotlib\u3010Chapter\u3011matplotlib.pyplot\u3010Section\u3011matplotlib.pyplot.colorbar\u3010Content\u3011matplotlib.pyplot.colorbar#matplotlib.pyplot.colorbar(mappable=None,cax=None,ax=None,**kwargs)[source]#Add a colorbar to a plot.Parameters:mappableThematplotlib.cm.ScalarMappable(i.e.,AxesImage,ContourSet, etc.) described by this colorbar. This argument is\nmandatory for theFigure.colorbarmethod but optional for thepyplot.colorbarfunction, which sets the default to the current\nimage.Note that one can create aScalarMappable\"on-the-fly\" to\ngenerate colorbars not attached to a previously drawn artist, e.g.fig.colorbar(cm.ScalarMappable(norm=norm,cmap=cmap),ax=ax)caxAxes, optionalAxes into which the colorbar will be drawn. IfNone, then a new\nAxes is created and the space for it will be stolen from the Axes(s)\nspecified inax.axAxesor iterable ornumpy.ndarrayof Axes, optionalThe one or more parent Axes from which space for a new colorbar Axes\nwill be stolen. This parameter is only used ifcaxis not set.Defaults to the Axes that contains the mappable used to create the\ncolorbar.use_gridspecbool, optionalIfcaxisNone, a newcaxis created as an instance of\nAxes. Ifaxis positioned with a subplotspec anduse_gridspecisTrue, thencaxis also positioned with a subplotspec.Returns:colorbarColorbarOther Parameters:locationNone or {'left', 'right', 'top', 'bottom'}The location, relative to the parent axes, where the colorbar axes\nis created. It also determines theorientationof the colorbar\n(colorbars on the left and right are vertical, colorbars at the top\nand bottom are horizontal). If None, the location will come from theorientationif it is set (vertical colorbars on the right, horizontal\nones at the bottom), or default to 'right' iforientationis unset.orientationNone or {'vertical', 'horizontal'}The orientation of the colorbar. It is preferable to set thelocationof the colorbar, as that also determines theorientation; passing\nincompatible values forlocationandorientationraises an exception.fractionfloat, default: 0.15Fraction of original axes to use for colorbar.shrinkfloat, default: 1.0Fraction by which to multiply the size of the colorbar.aspectfloat, default: 20Ratio of long to short dimensions.padfloat, default: 0.05 if vertical, 0.15 if horizontalFraction of original axes between colorbar and new image axes.anchor(float, float), optionalThe anchor point of the colorbar axes.\nDefaults to (0.0, 0.5) if vertical; (0.5, 1.0) if horizontal.panchor(float, float), orFalse, optionalThe anchor point of the colorbar parent axes. IfFalse, the parent\naxes' anchor will be unchanged.\nDefaults to (1.0, 0.5) if vertical; (0.5, 0.0) if horizontal.extend{'neither', 'both', 'min', 'max'}Make pointed end(s) for out-of-range values (unless 'neither'). These are\nset for a given colormap using the colormap set_under and set_over methods.extendfrac{None, 'auto', length, lengths}If set toNone, both the minimum and maximum triangular colorbar\nextensions will have a length of 5% of the interior colorbar length (this\nis the default setting).If set to 'auto', makes the triangular colorbar extensions the same lengths\nas the interior boxes (whenspacingis set to 'uniform') or the same\nlengths as the respective adjacent interior boxes (whenspacingis set to\n'proportional').If a scalar, indicates the length of both the minimum and maximum\ntriangular colorbar extensions as a fraction of the interior colorbar\nlength. A two-element sequence", "doc_id": "15732f05-b725-49d2-8bde-50a805070870", "embedding": null, "doc_hash": "47f9ce22f82cb285cb2a1be2ad95098985992a5f94c631f22a3f6ecb78218277", "extra_info": null, "node_info": {"start": 0, "end": 3435, "_node_type": "1"}, "relationships": {"1": "f92adc74-8c4c-41c4-ba86-c21bbbc505d7", "3": "299fff0c-d4b7-44ff-93c2-cf44d05c4d1e"}}, "__type__": "1"}, "299fff0c-d4b7-44ff-93c2-cf44d05c4d1e": {"__data__": {"text": "pointed end(s) for out-of-range values (unless 'neither'). These are\nset for a given colormap using the colormap set_under and set_over methods.extendfrac{None, 'auto', length, lengths}If set toNone, both the minimum and maximum triangular colorbar\nextensions will have a length of 5% of the interior colorbar length (this\nis the default setting).If set to 'auto', makes the triangular colorbar extensions the same lengths\nas the interior boxes (whenspacingis set to 'uniform') or the same\nlengths as the respective adjacent interior boxes (whenspacingis set to\n'proportional').If a scalar, indicates the length of both the minimum and maximum\ntriangular colorbar extensions as a fraction of the interior colorbar\nlength. A two-element sequence of fractions may also be given, indicating\nthe lengths of the minimum and maximum colorbar extensions respectively as\na fraction of the interior colorbar length.extendrectboolIfFalsethe minimum and maximum colorbar extensions will be triangular\n(the default). IfTruethe extensions will be rectangular.spacing{'uniform', 'proportional'}For discrete colorbars (BoundaryNormor contours), 'uniform' gives each\ncolor the same space; 'proportional' makes the space proportional to the\ndata interval.ticksNone or list of ticks or LocatorIf None, ticks are determined automatically from the input.formatNone or str or FormatterIf None,ScalarFormatteris used.\nFormat strings, e.g.,\"%4.2e\"or\"{x:.2e}\", are supported.\nAn alternativeFormattermay be given instead.drawedgesboolWhether to draw lines at color boundaries.labelstrThe label on the colorbar's long axis.boundaries, valuesNone or a sequenceIf unset, the colormap will be displayed on a 0-1 scale.\nIf sequences,valuesmust have a length 1 less thanboundaries. For\neach region delimited by adjacent entries inboundaries, the color mapped\nto the corresponding value in values will be used.\nNormally only useful for indexed colors (i.e.norm=NoNorm()) or other\nunusual circumstances.NotesIfmappableis aContourSet, itsextendkwarg is\nincluded automatically.Theshrinkkwarg provides a simple way to scale the colorbar with\nrespect to the axes. Note that ifcaxis specified, it determines the\nsize of the colorbar, andshrinkandaspectare ignored.For more precise control, you can manually specify the positions of the\naxes objects in which the mappable and the colorbar are drawn. In this\ncase, do not use any of the axes properties kwargs.It is known that some vector graphics viewers (svg and pdf) render\nwhite gaps between segments of the colorbar. This is due to bugs in\nthe viewers, not Matplotlib. As a workaround, the colorbar can be\nrendered with overlapping segments:cbar=colorbar()cbar.solids.set_edgecolor(\"face\")draw()However, this has negative consequences in other circumstances, e.g.\nwith semi-transparent images (alpha < 1) and colorbar extensions;\ntherefore, this workaround is not used by default (see issue #1188).Examples usingmatplotlib.pyplot.colorbar#Contour DemoContour DemoContour ImageContour ImageContourf demoContourf demoContourf HatchingContourf HatchingContourf and log color scaleContourf and log color scaleCreating annotated heatmapsCreating annotated heatmapsImage MaskedImage MaskedMultiple imagesMultiple imagespcolor imagespcolor imagespcolormeshpcolormeshTricontour DemoTricontour DemoSubplots spacings and marginsSubplots spacings and marginsColorbarColorbarCreating a colormap from a list of colorsCreating a colormap from a list of colorsEllipse CollectionEllipse CollectionPlotting multiple lines with a LineCollectionPlotting multiple lines with a LineCollectionAxes dividerAxes dividerSimple ColorbarSimple ColorbarColorbar Tick LabellingColorbar Tick LabellingImage tutorialImage tutorialTight Layout", "doc_id": "299fff0c-d4b7-44ff-93c2-cf44d05c4d1e", "embedding": null, "doc_hash": "8b39542b9c07ed6588ce28267805c9df0f1eb975f908e529916ad1920ac6ae2c", "extra_info": null, "node_info": {"start": 2791, "end": 6517, "_node_type": "1"}, "relationships": {"1": "f92adc74-8c4c-41c4-ba86-c21bbbc505d7", "2": "15732f05-b725-49d2-8bde-50a805070870", "3": "b06bba3a-07c9-4d46-b1ac-e1e27c0a30e2"}}, "__type__": "1"}, "b06bba3a-07c9-4d46-b1ac-e1e27c0a30e2": {"__data__": {"text": "DemoContour DemoContour ImageContour ImageContourf demoContourf demoContourf HatchingContourf HatchingContourf and log color scaleContourf and log color scaleCreating annotated heatmapsCreating annotated heatmapsImage MaskedImage MaskedMultiple imagesMultiple imagespcolor imagespcolor imagespcolormeshpcolormeshTricontour DemoTricontour DemoSubplots spacings and marginsSubplots spacings and marginsColorbarColorbarCreating a colormap from a list of colorsCreating a colormap from a list of colorsEllipse CollectionEllipse CollectionPlotting multiple lines with a LineCollectionPlotting multiple lines with a LineCollectionAxes dividerAxes dividerSimple ColorbarSimple ColorbarColorbar Tick LabellingColorbar Tick LabellingImage tutorialImage tutorialTight Layout guideTight Layout guide", "doc_id": "b06bba3a-07c9-4d46-b1ac-e1e27c0a30e2", "embedding": null, "doc_hash": "84100dbde20922f975778a3823bb2faadefaebc9a5677722620c5533788359a2", "extra_info": null, "node_info": {"start": 6398, "end": 7186, "_node_type": "1"}, "relationships": {"1": "f92adc74-8c4c-41c4-ba86-c21bbbc505d7", "2": "299fff0c-d4b7-44ff-93c2-cf44d05c4d1e"}}, "__type__": "1"}, "f44d9598-81eb-42dc-ad8b-b6338c5acfaa": {"__data__": {"text": "\u3010Name\u3011matplotlib\u3010Chapter\u3011matplotlib.pyplot\u3010Section\u3011matplotlib.pyplot.cla\u3010Content\u3011matplotlib.pyplot.cla#matplotlib.pyplot.cla()[source]#Clear the current axes.", "doc_id": "f44d9598-81eb-42dc-ad8b-b6338c5acfaa", "embedding": null, "doc_hash": "78417792b028e46bc1c0184eea320d4a93a6180b718a4cb61cedbde63a88a866", "extra_info": null, "node_info": {"start": 0, "end": 158, "_node_type": "1"}, "relationships": {"1": "1a5b38da-2fbb-43d3-8969-1d8fe8ca01be"}}, "__type__": "1"}, "1d24690c-0bda-4f21-8ab1-e517ec34481e": {"__data__": {"text": "\u3010Name\u3011matplotlib\u3010Chapter\u3011matplotlib.axes\u3010Section\u3011matplotlib.axes.Axes.plot\u3010Content\u3011The Numpy reference provides information on the plot function in the matplotlib.axes.Axes module. The plot function is used to plot y versus x as lines and/or markers. It has multiple call signatures depending on the inputs provided.The coordinates of the points or line nodes are given by x and y. The optional parameter fmt is a shortcut string notation for defining basic formatting like color, marker, and linestyle.You can also use Line2D properties as keyword arguments to have more control over the appearance. Line properties and fmt can be mixed together. There are also format strings available for setting color, marker, and line style.The plot function also allows for plotting objects with labeled data, such as dictionaries, pandas DataFrame, or structured numpy arrays. Instead of providing the data in x and y, you can provide the object in the data parameter and just give the labels for x and y.Multiple sets of data can be plotted in various ways. The most straightforward way is to call the plot function multiple times. If x and/or y are 2D arrays, a separate data set will be drawn for each column. If both x and y are 2D, they must have the same shape. If only one of them is 2D, the other must have length N and will be used for every data set m. Alternatively, multiple sets of [x], y, [fmt] groups can be specified.The plot function also allows for customization of various properties such as line label, linewidth, antialiasing, marker face color, etc., using keyword arguments.Other parameters include scalex and scaley, which determine if the view limits are adapted to the data limits, and **kwargs, which are used to specify additional Line2D properties.The function returns a list of Line2D objects representing the plotted data.The Numpy reference also provides examples and further information on various topics related to plotting, such as categorical variables, cross spectral density, error bands, filling between lines, custom line styles, multiple subplots, boxplots, polar plots, annotations, axis limits, tick labels, sliders, legends, animations, transformations, and more.Please note that the Numpy reference is available in Shift-JIS character encoding.", "doc_id": "1d24690c-0bda-4f21-8ab1-e517ec34481e", "embedding": null, "doc_hash": "582b90475bfa62c6dd33186a4038d1e4565091d4414ddc5c1f613872f4f63b3f", "extra_info": null, "node_info": {"start": 0, "end": 2280, "_node_type": "1"}, "relationships": {"1": "c4f5b381-badf-4ee5-9a33-fade9f2a745c"}}, "__type__": "1"}, "8c4fe111-bcc7-4d6d-834b-79d34a80c15a": {"__data__": {"text": "\u3010Name\u3011matplotlib\u3010Chapter\u3011matplotlib.axes\u3010Section\u3011matplotlib.axes.Axes.scatter\u3010Content\u3011matplotlib.axes.Axes.scatter#Axes.scatter(x,y,s=None,c=None,marker=None,cmap=None,norm=None,vmin=None,vmax=None,alpha=None,linewidths=None,*,edgecolors=None,plotnonfinite=False,data=None,**kwargs)[source]#A scatter plot ofyvs.xwith varying marker size and/or color.Parameters:x, yfloat or array-like, shape (n, )The data positions.sfloat or array-like, shape (n, ), optionalThe marker size in points**2 (typographic points are 1/72 in.).\nDefault isrcParams['lines.markersize']**2.The linewidth and edgecolor can visually interact with the marker\nsize, and can lead to artifacts if the marker size is smaller than\nthe linewidth.If the linewidth is greater than 0 and the edgecolor is anything\nbut'none', then the effective size of the marker will be\nincreased by half the linewidth because the stroke will be centered\non the edge of the shape.To eliminate the marker edge either setlinewidth=0oredgecolor='none'.carray-like or list of colors or color, optionalThe marker colors. Possible values:A scalar or sequence of n numbers to be mapped to colors usingcmapandnorm.A 2D array in which the rows are RGB or RGBA.A sequence of colors of length n.A single color format string.Note thatcshould not be a single numeric RGB or RGBA sequence\nbecause that is indistinguishable from an array of values to be\ncolormapped. If you want to specify the same RGB or RGBA value for\nall points, use a 2D array with a single row. Otherwise,\nvalue-matching will have precedence in case of a size matching withxandy.If you wish to specify a single color for all points\nprefer thecolorkeyword argument.Defaults toNone. In that case the marker color is determined\nby the value ofcolor,facecolororfacecolors. In case\nthose are not specified orNone, the marker color is determined\nby the next color of theAxes' current \"shape and fill\" color\ncycle. This cycle defaults torcParams[\"axes.prop_cycle\"](default:cycler('color',['#1f77b4','#ff7f0e','#2ca02c','#d62728','#9467bd','#8c564b','#e377c2','#7f7f7f','#bcbd22','#17becf'])).markerMarkerStyle, default:rcParams[\"scatter.marker\"](default:'o')The marker style.markercan be either an instance of the class\nor the text shorthand for a particular marker.\nSeematplotlib.markersfor more information about marker\nstyles.cmapstr orColormap, default:rcParams[\"image.cmap\"](default:'viridis')The Colormap instance or registered colormap name used to map scalar data\nto colors.This parameter is ignored ifcis RGB(A).normstr orNormalize, optionalThe normalization method used to scale scalar data to the [0, 1] range\nbefore mapping to colors usingcmap. By default, a linear scaling is\nused, mapping the lowest value to 0 and the highest to 1.If given, this can be one of the following:An instance ofNormalizeor one of its subclasses\n(seeColormap Normalization).A scale name, i.e. one of \"linear\", \"log\", \"symlog\", \"logit\", etc. For a\nlist of available scales, callmatplotlib.scale.get_scale_names().\nIn that case, a suitableNormalizesubclass is dynamically generated\nand instantiated.This parameter is ignored ifcis RGB(A).vmin, vmaxfloat, optionalWhen using scalar data and no explicitnorm,vminandvmaxdefine\nthe data range that the colormap covers. By default, the colormap covers\nthe complete value", "doc_id": "8c4fe111-bcc7-4d6d-834b-79d34a80c15a", "embedding": null, "doc_hash": "dd34441afe35d9259a17069078328ecc0c987405edab3d354aebb3fb59ee5705", "extra_info": null, "node_info": {"start": 0, "end": 3302, "_node_type": "1"}, "relationships": {"1": "0e336b17-2452-4823-9720-d539be5249ba", "3": "77837d0d-6d3d-4830-b889-e6b90dc05434"}}, "__type__": "1"}, "77837d0d-6d3d-4830-b889-e6b90dc05434": {"__data__": {"text": "to colors usingcmap. By default, a linear scaling is\nused, mapping the lowest value to 0 and the highest to 1.If given, this can be one of the following:An instance ofNormalizeor one of its subclasses\n(seeColormap Normalization).A scale name, i.e. one of \"linear\", \"log\", \"symlog\", \"logit\", etc. For a\nlist of available scales, callmatplotlib.scale.get_scale_names().\nIn that case, a suitableNormalizesubclass is dynamically generated\nand instantiated.This parameter is ignored ifcis RGB(A).vmin, vmaxfloat, optionalWhen using scalar data and no explicitnorm,vminandvmaxdefine\nthe data range that the colormap covers. By default, the colormap covers\nthe complete value range of the supplied data. It is an error to usevmin/vmaxwhen anorminstance is given (but using astrnormname together withvmin/vmaxis acceptable).This parameter is ignored ifcis RGB(A).alphafloat, default: NoneThe alpha blending value, between 0 (transparent) and 1 (opaque).linewidthsfloat or array-like, default:rcParams[\"lines.linewidth\"](default:1.5)The linewidth of the marker edges. Note: The defaultedgecolorsis 'face'. You may want to change this as well.edgecolors{'face', 'none',None} or color or sequence of color, default:rcParams[\"scatter.edgecolors\"](default:'face')The edge color of the marker. Possible values:'face': The edge color will always be the same as the face color.'none': No patch boundary will be drawn.A color or sequence of colors.For non-filled markers,edgecolorsis ignored. Instead, the color\nis determined like with 'face', i.e. fromc,colors, orfacecolors.plotnonfinitebool, default: FalseWhether to plot points with nonfinitec(i.e.inf,-infornan). IfTruethe points are drawn with thebadcolormap color (seeColormap.set_bad).Returns:PathCollectionOther Parameters:dataindexable object, optionalIf given, the following parameters also accept a strings, which is\ninterpreted asdata[s](unless this raises an exception):x,y,s,linewidths,edgecolors,c,facecolor,facecolors,color**kwargsCollectionpropertiesSee alsoplotTo plot scatter plots when markers are identical in size and color.NotesTheplotfunction will be faster for scatterplots where markers\ndon't vary in size or color.Any or all ofx,y,s, andcmay be masked arrays, in which\ncase all masks will be combined and only unmasked points will be\nplotted.Fundamentally, scatter works with 1D arrays;x,y,s, andcmay be input as N-D arrays, but within scatter they will be\nflattened. The exception isc, which will be flattened only if its\nsize matches the size ofxandy.Examples usingmatplotlib.axes.Axes.scatter#Scatter Demo2Scatter Demo2Scatter plot with histogramsScatter plot with histogramsScatter plots with a legendScatter plots with a legendAdvanced quiver and quiverkey functionsAdvanced quiver and quiverkey functionsAxes box aspectAxes box aspectAxis Label PositionAxis Label PositionPlot a confidence ellipse of a two-dimensional datasetPlot a confidence ellipse of a two-dimensional datasetViolin plot customizationViolin plot customizationScatter plot on polar axisScatter plot on polar axisLegend DemoLegend DemoScatter plotScatter plotScatter Histogram (Locatable Axes)Scatter Histogram (Locatable Axes)floating_axes featuresfloating_axes featuresRain simulationRain simulationAnimated scatter saved as GIFAnimated scatter saved as GIFPick event demoPick event demoZoom WindowZoom WindowPlotting with keywordsPlotting with keywordsZorder DemoZorder DemoPlot 2D data on 3D plotPlot 2D data on 3D plot3D scatterplot3D scatterplotAsinh DemoAsinh", "doc_id": "77837d0d-6d3d-4830-b889-e6b90dc05434", "embedding": null, "doc_hash": "7358eb7e713eabac0323a589aeecdf2cb9b96f61d1cd441bb758e6392ef9d924", "extra_info": null, "node_info": {"start": 2719, "end": 6221, "_node_type": "1"}, "relationships": {"1": "0e336b17-2452-4823-9720-d539be5249ba", "2": "8c4fe111-bcc7-4d6d-834b-79d34a80c15a", "3": "1b39e08a-4f86-47d9-82fd-1f1d6b9c3e31"}}, "__type__": "1"}, "1b39e08a-4f86-47d9-82fd-1f1d6b9c3e31": {"__data__": {"text": "box aspectAxis Label PositionAxis Label PositionPlot a confidence ellipse of a two-dimensional datasetPlot a confidence ellipse of a two-dimensional datasetViolin plot customizationViolin plot customizationScatter plot on polar axisScatter plot on polar axisLegend DemoLegend DemoScatter plotScatter plotScatter Histogram (Locatable Axes)Scatter Histogram (Locatable Axes)floating_axes featuresfloating_axes featuresRain simulationRain simulationAnimated scatter saved as GIFAnimated scatter saved as GIFPick event demoPick event demoZoom WindowZoom WindowPlotting with keywordsPlotting with keywordsZorder DemoZorder DemoPlot 2D data on 3D plotPlot 2D data on 3D plot3D scatterplot3D scatterplotAsinh DemoAsinh DemoAutomatically setting tick positionsAutomatically setting tick positionsUnit handlingUnit handlingSelect indices from a collection using polygon selectorSelect indices from a collection using polygon selectorAnnotate Text ArrowAnnotate Text Arrowscatter(x, y)scatter(x, y)scatter(xs, ys, zs)scatter(xs, ys, zs)Quick start guideQuick start guideAnimations using MatplotlibAnimations using MatplotlibChoosing ColormapsChoosing ColormapsAnnotationsAnnotations", "doc_id": "1b39e08a-4f86-47d9-82fd-1f1d6b9c3e31", "embedding": null, "doc_hash": "6213d33054f2bbd0bfc009b423fc03064c1d0c513085da01bb4644cbba43c450", "extra_info": null, "node_info": {"start": 6094, "end": 7266, "_node_type": "1"}, "relationships": {"1": "0e336b17-2452-4823-9720-d539be5249ba", "2": "77837d0d-6d3d-4830-b889-e6b90dc05434"}}, "__type__": "1"}, "ad38bd4e-b8f4-4a90-929f-99ee5cbbbdbb": {"__data__": {"text": "\u3010Name\u3011matplotlib\u3010Chapter\u3011matplotlib.axes\u3010Section\u3011matplotlib.axes.Axes.bar\u3010Content\u3011matplotlib.axes.Axes.bar#Axes.bar(x,height,width=0.8,bottom=None,*,align='center',data=None,**kwargs)[source]#Make a bar plot.The bars are positioned atxwith the givenalignment. Their\ndimensions are given byheightandwidth. The vertical baseline\nisbottom(default 0).Many parameters can take either a single value applying to all bars\nor a sequence of values, one for each bar.Parameters:xfloat or array-likeThe x coordinates of the bars. See alsoalignfor the\nalignment of the bars to the coordinates.heightfloat or array-likeThe height(s) of the bars.Note that ifbottomhas units (e.g. datetime),heightshould be in\nunits that are a difference from the value ofbottom(e.g. timedelta).widthfloat or array-like, default: 0.8The width(s) of the bars.Note that ifxhas units (e.g. datetime), thenwidthshould be in\nunits that are a difference (e.g. timedelta) around thexvalues.bottomfloat or array-like, default: 0The y coordinate(s) of the bottom side(s) of the bars.Note that ifbottomhas units, then the y-axis will get a Locator and\nFormatter appropriate for the units (e.g. dates, or categorical).align{'center', 'edge'}, default: 'center'Alignment of the bars to thexcoordinates:'center': Center the base on thexpositions.'edge': Align the left edges of the bars with thexpositions.To align the bars on the right edge pass a negativewidthandalign='edge'.Returns:BarContainerContainer with all the bars and optionally errorbars.Other Parameters:colorcolor or list of color, optionalThe colors of the bar faces.edgecolorcolor or list of color, optionalThe colors of the bar edges.linewidthfloat or array-like, optionalWidth of the bar edge(s). If 0, don't draw edges.tick_labelstr or list of str, optionalThe tick labels of the bars.\nDefault: None (Use default numeric labels.)labelstr or list of str, optionalA single label is attached to the resultingBarContaineras a\nlabel for the whole dataset.\nIf a list is provided, it must be the same length asxand\nlabels the individual bars. Repeated labels are not de-duplicated\nand will cause repeated label entries, so this is best used when\nbars also differ in style (e.g., by passing a list tocolor.)xerr, yerrfloat or array-like of shape(N,) or shape(2, N), optionalIf notNone, add horizontal / vertical errorbars to the bar tips.\nThe values are +/- sizes relative to the data:scalar: symmetric +/- values for all barsshape(N,): symmetric +/- values for each barshape(2, N): Separate - and + values for each bar. First row\ncontains the lower errors, the second row contains the upper\nerrors.None: No errorbar. (Default)SeeDifferent ways of specifying error barsfor an example on\nthe usage ofxerrandyerr.ecolorcolor or list of color, default: 'black'The line color of the errorbars.capsizefloat, default:rcParams[\"errorbar.capsize\"](default:0.0)The length of the error bar caps in points.error_kwdict, optionalDictionary of keyword arguments to be passed to theerrorbarmethod. Values ofecolororcapsizedefined\nhere take precedence over the independent keyword arguments.logbool, default: FalseIfTrue, set the y-axis to be log scale.dataindexable object, optionalIf given, all parameters also accept a strings, which is\ninterpreted asdata[s](unless this raises an exception).**kwargsRectanglepropertiesPropertyDescriptionagg_filtera filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array and two offsets from the bottom left corner of the imagealphascalar or Noneangleunknownanimatedboolantialiasedor aabool or", "doc_id": "ad38bd4e-b8f4-4a90-929f-99ee5cbbbdbb", "embedding": null, "doc_hash": "8db11d4db756406eb77fcd3a108a791f6d12d24c5e4abb9861f0f1b151e6ae80", "extra_info": null, "node_info": {"start": 0, "end": 3577, "_node_type": "1"}, "relationships": {"1": "d81890ff-271a-4519-bfe7-cbf55c28ca15", "3": "40da8f16-6b89-4fe1-956d-c339e8847851"}}, "__type__": "1"}, "40da8f16-6b89-4fe1-956d-c339e8847851": {"__data__": {"text": "length of the error bar caps in points.error_kwdict, optionalDictionary of keyword arguments to be passed to theerrorbarmethod. Values ofecolororcapsizedefined\nhere take precedence over the independent keyword arguments.logbool, default: FalseIfTrue, set the y-axis to be log scale.dataindexable object, optionalIf given, all parameters also accept a strings, which is\ninterpreted asdata[s](unless this raises an exception).**kwargsRectanglepropertiesPropertyDescriptionagg_filtera filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array and two offsets from the bottom left corner of the imagealphascalar or Noneangleunknownanimatedboolantialiasedor aabool or Nonebounds(left, bottom, width, height)capstyleCapStyleor {'butt', 'projecting', 'round'}clip_boxBboxBaseor Noneclip_onboolclip_pathPatch or (Path, Transform) or Nonecolorcoloredgecoloror eccolor or Nonefacecoloror fccolor or NonefigureFigurefillboolgidstrhatch{'/', '\\', '|', '-', '+', 'x', 'o', 'O', '.', '*'}heightunknownin_layoutbooljoinstyleJoinStyleor {'miter', 'round', 'bevel'}labelobjectlinestyleor ls{'-', '--', '-.', ':', '', (offset, on-off-seq), ...}linewidthor lwfloat or Nonemouseoverboolpath_effectslist ofAbstractPathEffectpickerNone or bool or float or callablerasterizedboolsketch_params(scale: float, length: float, randomness: float)snapbool or NonetransformTransformurlstrvisibleboolwidthunknownxunknownxy(float, float)yunknownzorderfloatSee alsobarhPlot a horizontal bar plot.NotesStacked bars can be achieved by passing individualbottomvalues per\nbar. SeeStacked bar chart.Examples usingmatplotlib.axes.Axes.bar#Bar color demoBar color demoBar Label DemoBar Label DemoStacked bar chartStacked bar chartGrouped bar chart with labelsGrouped bar chart with labelsHat graphHat graphWatermark imageWatermark imagePercentiles as horizontal bar chartPercentiles as horizontal bar chartBar of pieBar of pieNested pie chartsNested pie chartsBar chart on polar axisBar chart on polar axisLegend DemoLegend DemoWays to set a color's alpha valueWays to set a color's alpha valueHatch demoHatch demoggplot style sheetggplot style sheetfloating_axes featuresfloating_axes featuresXKCDXKCDPick event demoPick event demoCreate 2D bar graphs in different planesCreate 2D bar graphs in different planesLog BarLog BarCustom TickerCustom TickerGroup barchart with unitsGroup barchart with unitsbar(x, height)bar(x, height)Quick start guideQuick start guidePath TutorialPath Tutorial", "doc_id": "40da8f16-6b89-4fe1-956d-c339e8847851", "embedding": null, "doc_hash": "714d2e402ed0c2a37680d8a714351afebcff20385f77ae7e1360bfef38793453", "extra_info": null, "node_info": {"start": 2873, "end": 5364, "_node_type": "1"}, "relationships": {"1": "d81890ff-271a-4519-bfe7-cbf55c28ca15", "2": "ad38bd4e-b8f4-4a90-929f-99ee5cbbbdbb"}}, "__type__": "1"}, "116f402c-a135-41fe-9737-1d132107e531": {"__data__": {"text": "\u3010Name\u3011matplotlib\u3010Chapter\u3011matplotlib.axes\u3010Section\u3011matplotlib.axes.Axes.hist\u3010Content\u3011matplotlib.axes.Axes.hist#Axes.hist(x,bins=None,range=None,density=False,weights=None,cumulative=False,bottom=None,histtype='bar',align='mid',orientation='vertical',rwidth=None,log=False,color=None,label=None,stacked=False,*,data=None,**kwargs)[source]#Compute and plot a histogram.This method usesnumpy.histogramto bin the data inxand count the\nnumber of values in each bin, then draws the distribution either as aBarContainerorPolygon. Thebins,range,density, andweightsparameters are forwarded tonumpy.histogram.If the data has already been binned and counted, usebarorstairsto plot the distribution:counts,bins=np.histogram(x)plt.stairs(counts,bins)Alternatively, plot pre-computed bins and counts usinghist()by\ntreating each bin as a single point with a weight equal to its count:plt.hist(bins[:-1],bins,weights=counts)The data inputxcan be a singular array, a list of datasets of\npotentially different lengths ([x0,x1, ...]), or a 2D ndarray in\nwhich each column is a dataset. Note that the ndarray form is\ntransposed relative to the list form. If the input is an array, then\nthe return value is a tuple (n,bins,patches); if the input is a\nsequence of arrays, then the return value is a tuple\n([n0,n1, ...],bins, [patches0,patches1, ...]).Masked arrays are not supported.Parameters:x(n,) array or sequence of (n,) arraysInput values, this takes either a single array or a sequence of\narrays which are not required to be of the same length.binsint or sequence or str, default:rcParams[\"hist.bins\"](default:10)Ifbinsis an integer, it defines the number of equal-width bins\nin the range.Ifbinsis a sequence, it defines the bin edges, including the\nleft edge of the first bin and the right edge of the last bin;\nin this case, bins may be unequally spaced. All but the last\n(righthand-most) bin is half-open. In other words, ifbinsis:[1,2,3,4]then the first bin is[1,2)(including 1, but excluding 2) and\nthe second[2,3). The last bin, however, is[3,4], whichincludes4.Ifbinsis a string, it is one of the binning strategies\nsupported bynumpy.histogram_bin_edges: 'auto', 'fd', 'doane',\n'scott', 'stone', 'rice', 'sturges', or 'sqrt'.rangetuple or None, default: NoneThe lower and upper range of the bins. Lower and upper outliers\nare ignored. If not provided,rangeis(x.min(),x.max()).\nRange has no effect ifbinsis a sequence.Ifbinsis a sequence orrangeis specified, autoscaling\nis based on the specified bin range instead of the\nrange of x.densitybool, default: FalseIfTrue, draw and return a probability density: each bin\nwill display the bin's raw count divided by the total number of\ncountsand the bin width(density=counts/(sum(counts)*np.diff(bins))),\nso that the area under the histogram integrates to 1\n(np.sum(density*np.diff(bins))==1).Ifstackedis alsoTrue, the sum of the histograms is\nnormalized to 1.weights(n,) array-like or None, default: NoneAn array of weights, of the same shape asx. Each value inxonly contributes its associated weight towards the bin count\n(instead of 1). IfdensityisTrue, the weights are\nnormalized, so that the integral of the density over the range\nremains 1.cumulativebool or -1, default: FalseIfTrue, then a histogram is computed where each bin gives the\ncounts in that bin plus all bins for smaller", "doc_id": "116f402c-a135-41fe-9737-1d132107e531", "embedding": null, "doc_hash": "b1ac22778c628c30a3526d927e3f3dedf073cc7003df70423c1b9e91c66a0c24", "extra_info": null, "node_info": {"start": 0, "end": 3321, "_node_type": "1"}, "relationships": {"1": "a08f81e6-f2e0-4038-9bd3-f74f1ed29750", "3": "e8b21146-1f55-4804-a5ad-bc7af564c0bb"}}, "__type__": "1"}, "e8b21146-1f55-4804-a5ad-bc7af564c0bb": {"__data__": {"text": "bin's raw count divided by the total number of\ncountsand the bin width(density=counts/(sum(counts)*np.diff(bins))),\nso that the area under the histogram integrates to 1\n(np.sum(density*np.diff(bins))==1).Ifstackedis alsoTrue, the sum of the histograms is\nnormalized to 1.weights(n,) array-like or None, default: NoneAn array of weights, of the same shape asx. Each value inxonly contributes its associated weight towards the bin count\n(instead of 1). IfdensityisTrue, the weights are\nnormalized, so that the integral of the density over the range\nremains 1.cumulativebool or -1, default: FalseIfTrue, then a histogram is computed where each bin gives the\ncounts in that bin plus all bins for smaller values. The last bin\ngives the total number of datapoints.Ifdensityis alsoTruethen the histogram is normalized such\nthat the last bin equals 1.Ifcumulativeis a number less than 0 (e.g., -1), the direction\nof accumulation is reversed. In this case, ifdensityis alsoTrue, then the histogram is normalized such that the first bin\nequals 1.bottomarray-like, scalar, or None, default: NoneLocation of the bottom of each bin, i.e. bins are drawn frombottomtobottom+hist(x,bins)If a scalar, the bottom\nof each bin is shifted by the same amount. If an array, each bin\nis shifted independently and the length of bottom must match the\nnumber of bins. If None, defaults to 0.histtype{'bar', 'barstacked', 'step', 'stepfilled'}, default: 'bar'The type of histogram to draw.'bar' is a traditional bar-type histogram. If multiple data\nare given the bars are arranged side by side.'barstacked' is a bar-type histogram where multiple\ndata are stacked on top of each other.'step' generates a lineplot that is by default unfilled.'stepfilled' generates a lineplot that is by default filled.align{'left', 'mid', 'right'}, default: 'mid'The horizontal alignment of the histogram bars.'left': bars are centered on the left bin edges.'mid': bars are centered between the bin edges.'right': bars are centered on the right bin edges.orientation{'vertical', 'horizontal'}, default: 'vertical'If 'horizontal',barhwill be used for bar-type histograms\nand thebottomkwarg will be the left edges.rwidthfloat or None, default: NoneThe relative width of the bars as a fraction of the bin width. IfNone, automatically compute the width.Ignored ifhisttypeis 'step' or 'stepfilled'.logbool, default: FalseIfTrue, the histogram axis will be set to a log scale.colorcolor or array-like of colors or None, default: NoneColor or sequence of colors, one per dataset. Default (None)\nuses the standard line color sequence.labelstr or None, default: NoneString, or sequence of strings to match multiple datasets. Bar\ncharts yield multiple patches per dataset, but only the first gets\nthe label, so thatlegendwill work as expected.stackedbool, default: FalseIfTrue, multiple data are stacked on top of each other IfFalsemultiple data are arranged side by side if histtype is\n'bar' or on top of each other if histtype is 'step'Returns:narray or list of arraysThe values of the histogram bins. Seedensityandweightsfor a\ndescription of the possible semantics. If inputxis an array,\nthen this is an array of lengthnbins. If input is a sequence of\narrays[data1,data2,...], then this is a list of arrays with\nthe values of the histograms for each of the arrays in the same\norder. The dtype of the arrayn(or of its element arrays) will\nalways be float even if no weighting or normalization is used.binsarrayThe edges of the bins. Length nbins + 1 (nbins left edges and right\nedge of last bin). Always a single array even when multiple data\nsets are passed in.patchesBarContaineror list of a singlePolygonor list of such", "doc_id": "e8b21146-1f55-4804-a5ad-bc7af564c0bb", "embedding": null, "doc_hash": "fa3e0921a182807aeae24b7d1cf95bec38fdd14f3d3a92ef45c97e8237995213", "extra_info": null, "node_info": {"start": 2715, "end": 6383, "_node_type": "1"}, "relationships": {"1": "a08f81e6-f2e0-4038-9bd3-f74f1ed29750", "2": "116f402c-a135-41fe-9737-1d132107e531", "3": "2246a67e-c667-4020-98df-6ba4ad8b49fc"}}, "__type__": "1"}, "2246a67e-c667-4020-98df-6ba4ad8b49fc": {"__data__": {"text": "top of each other if histtype is 'step'Returns:narray or list of arraysThe values of the histogram bins. Seedensityandweightsfor a\ndescription of the possible semantics. If inputxis an array,\nthen this is an array of lengthnbins. If input is a sequence of\narrays[data1,data2,...], then this is a list of arrays with\nthe values of the histograms for each of the arrays in the same\norder. The dtype of the arrayn(or of its element arrays) will\nalways be float even if no weighting or normalization is used.binsarrayThe edges of the bins. Length nbins + 1 (nbins left edges and right\nedge of last bin). Always a single array even when multiple data\nsets are passed in.patchesBarContaineror list of a singlePolygonor list of such objectsContainer of individual artists used to create the histogram\nor list of such containers if there are multiple input datasets.Other Parameters:dataindexable object, optionalIf given, the following parameters also accept a strings, which is\ninterpreted asdata[s](unless this raises an exception):x,weights**kwargsPatchpropertiesSee alsohist2d2D histogram with rectangular binshexbin2D histogram with hexagonal binsstairsPlot a pre-computed histogrambarPlot a pre-computed histogramNotesFor large numbers of bins (>1000), plotting can be significantly\naccelerated by usingstairsto plot a pre-computed histogram\n(plt.stairs(*np.histogram(data))), or by settinghisttypeto\n'step' or 'stepfilled' rather than 'bar' or 'barstacked'.Examples usingmatplotlib.axes.Axes.hist#Scatter plot with histogramsScatter plot with histogramsAxes DemoAxes DemoHistogramsHistogramsPlotting cumulative distributionsPlotting cumulative distributionsSome features of the histogram (hist) functionSome features of the histogram (hist) functionDemo of the histogram function's different histtype settingsDemo of the histogram function's different histtype settingsThe histogram (hist) function with multiple data setsThe histogram (hist) function with multiple data setsPlacing text boxesPlacing text boxesBayesian Methods for Hackers style sheetBayesian Methods for Hackers style sheetScatter Histogram (Locatable Axes)Scatter Histogram (Locatable Axes)Animated histogramAnimated histogramBuilding histograms using Rectangles and PolyCollectionsBuilding histograms using Rectangles and PolyCollectionsArtist tutorialArtist tutorialhist(x)hist(x)Quick start guideQuick start guidePath TutorialPath TutorialTransformations TutorialTransformations Tutorial", "doc_id": "2246a67e-c667-4020-98df-6ba4ad8b49fc", "embedding": null, "doc_hash": "7fc78ff74032e4e5c89b95c30eb75c1b7abd4c7848cb8ca182e9e591cf0b48d3", "extra_info": null, "node_info": {"start": 6265, "end": 8724, "_node_type": "1"}, "relationships": {"1": "a08f81e6-f2e0-4038-9bd3-f74f1ed29750", "2": "e8b21146-1f55-4804-a5ad-bc7af564c0bb"}}, "__type__": "1"}, "4af47062-3cd8-46a3-809f-125ce7874b07": {"__data__": {"text": "\u3010Name\u3011matplotlib\u3010Chapter\u3011matplotlib.axes\u3010Section\u3011matplotlib.axes.Axes.imshow\u3010Content\u3011matplotlib.axes.Axes.imshow#Axes.imshow(X,cmap=None,norm=None,*,aspect=None,interpolation=None,alpha=None,vmin=None,vmax=None,origin=None,extent=None,interpolation_stage=None,filternorm=True,filterrad=4.0,resample=None,url=None,data=None,**kwargs)[source]#Display data as an image, i.e., on a 2D regular raster.The input may either be actual RGB(A) data, or 2D scalar data, which\nwill be rendered as a pseudocolor image. For displaying a grayscale\nimage, set up the colormapping using the parameterscmap='gray',vmin=0,vmax=255.The number of pixels used to render an image is set by the Axes size\nand the figuredpi. This can lead to aliasing artifacts when\nthe image is resampled, because the displayed image size will usually\nnot match the size ofX(seeImage antialiasing).\nThe resampling can be controlled via theinterpolationparameter\nand/orrcParams[\"image.interpolation\"](default:'antialiased').Parameters:Xarray-like or PIL imageThe image data. Supported array shapes are:(M, N): an image with scalar data. The values are mapped to\ncolors using normalization and a colormap. See parametersnorm,cmap,vmin,vmax.(M, N, 3): an image with RGB values (0-1 float or 0-255 int).(M, N, 4): an image with RGBA values (0-1 float or 0-255 int),\ni.e. including transparency.The first two dimensions (M, N) define the rows and columns of\nthe image.Out-of-range RGB(A) values are clipped.cmapstr orColormap, default:rcParams[\"image.cmap\"](default:'viridis')The Colormap instance or registered colormap name used to map scalar data\nto colors.This parameter is ignored ifXis RGB(A).normstr orNormalize, optionalThe normalization method used to scale scalar data to the [0, 1] range\nbefore mapping to colors usingcmap. By default, a linear scaling is\nused, mapping the lowest value to 0 and the highest to 1.If given, this can be one of the following:An instance ofNormalizeor one of its subclasses\n(seeColormap Normalization).A scale name, i.e. one of \"linear\", \"log\", \"symlog\", \"logit\", etc. For a\nlist of available scales, callmatplotlib.scale.get_scale_names().\nIn that case, a suitableNormalizesubclass is dynamically generated\nand instantiated.This parameter is ignored ifXis RGB(A).vmin, vmaxfloat, optionalWhen using scalar data and no explicitnorm,vminandvmaxdefine\nthe data range that the colormap covers. By default, the colormap covers\nthe complete value range of the supplied data. It is an error to usevmin/vmaxwhen anorminstance is given (but using astrnormname together withvmin/vmaxis acceptable).This parameter is ignored ifXis RGB(A).aspect{'equal', 'auto'} or float or None, default: NoneThe aspect ratio of the Axes. This parameter is particularly\nrelevant for images since it determines whether data pixels are\nsquare.This parameter is a shortcut for explicitly callingAxes.set_aspect. See there for further details.'equal': Ensures an aspect ratio of 1. Pixels will be square\n(unless pixel sizes are explicitly made non-square in data\ncoordinates usingextent).'auto': The Axes is kept fixed and the aspect is adjusted so\nthat the data fit in the Axes. In general, this will result in\nnon-square pixels.Normally, None (the default) means to usercParams[\"image.aspect\"](default:'equal'). However, if\nthe image uses a transform that does not contain the axes data", "doc_id": "4af47062-3cd8-46a3-809f-125ce7874b07", "embedding": null, "doc_hash": "b3b2ae6006c7f0679d36bc7f3c955931bf945099389bc359f19e302ffdc152d7", "extra_info": null, "node_info": {"start": 0, "end": 3353, "_node_type": "1"}, "relationships": {"1": "958796be-a12e-499c-b6b8-e084617998dd", "3": "cad25e76-b45d-4d26-9ddf-dec0482183d0"}}, "__type__": "1"}, "cad25e76-b45d-4d26-9ddf-dec0482183d0": {"__data__": {"text": "'auto'} or float or None, default: NoneThe aspect ratio of the Axes. This parameter is particularly\nrelevant for images since it determines whether data pixels are\nsquare.This parameter is a shortcut for explicitly callingAxes.set_aspect. See there for further details.'equal': Ensures an aspect ratio of 1. Pixels will be square\n(unless pixel sizes are explicitly made non-square in data\ncoordinates usingextent).'auto': The Axes is kept fixed and the aspect is adjusted so\nthat the data fit in the Axes. In general, this will result in\nnon-square pixels.Normally, None (the default) means to usercParams[\"image.aspect\"](default:'equal'). However, if\nthe image uses a transform that does not contain the axes data transform,\nthen None means to not modify the axes aspect at all (in that case, directly\ncallAxes.set_aspectif desired).interpolationstr, default:rcParams[\"image.interpolation\"](default:'antialiased')The interpolation method used.Supported values are 'none', 'antialiased', 'nearest', 'bilinear',\n'bicubic', 'spline16', 'spline36', 'hanning', 'hamming', 'hermite',\n'kaiser', 'quadric', 'catrom', 'gaussian', 'bessel', 'mitchell',\n'sinc', 'lanczos', 'blackman'.The dataXis resampled to the pixel size of the image on the\nfigure canvas, using the interpolation method to either up- or\ndownsample the data.Ifinterpolationis 'none', then for the ps, pdf, and svg\nbackends no down- or upsampling occurs, and the image data is\npassed to the backend as a native image. Note that different ps,\npdf, and svg viewers may display these raw pixels differently. On\nother backends, 'none' is the same as 'nearest'.Ifinterpolationis the default 'antialiased', then 'nearest'\ninterpolation is used if the image is upsampled by more than a\nfactor of three (i.e. the number of display pixels is at least\nthree times the size of the data array). If the upsampling rate is\nsmaller than 3, or the image is downsampled, then 'hanning'\ninterpolation is used to act as an anti-aliasing filter, unless the\nimage happens to be upsampled by exactly a factor of two or one.SeeInterpolations for imshowfor an overview of the supported interpolation methods, andImage antialiasingfor\na discussion of image antialiasing.Some interpolation methods require an additional radius parameter,\nwhich can be set byfilterrad. Additionally, the antigrain image\nresize filter is controlled by the parameterfilternorm.interpolation_stage{'data', 'rgba'}, default: 'data'If 'data', interpolation\nis carried out on the data provided by the user. If 'rgba', the\ninterpolation is carried out after the colormapping has been\napplied (visual interpolation).alphafloat or array-like, optionalThe alpha blending value, between 0 (transparent) and 1 (opaque).\nIfalphais an array, the alpha blending values are applied pixel\nby pixel, andalphamust have the same shape asX.origin{'upper', 'lower'}, default:rcParams[\"image.origin\"](default:'upper')Place the [0, 0] index of the array in the upper left or lower\nleft corner of the Axes. The convention (the default) 'upper' is\ntypically used for matrices and images.Note that the vertical axis points upward for 'lower'\nbut downward for 'upper'.See theorigin and extent in imshowtutorial for\nexamples and a more detailed description.extentfloats (left, right, bottom, top), optionalThe bounding box in data coordinates that the image will fill.\nThese values may be unitful and match the units of the Axes.\nThe image is stretched individually along x and y to fill the box.The default extent is determined by the following conditions.\nPixels have unit size in data coordinates. Their centers are on\ninteger coordinates, and", "doc_id": "cad25e76-b45d-4d26-9ddf-dec0482183d0", "embedding": null, "doc_hash": "a306d7315e87b9934187746754732e2f59b5bfa347566d4c27d5b81cb98b5064", "extra_info": null, "node_info": {"start": 2738, "end": 6369, "_node_type": "1"}, "relationships": {"1": "958796be-a12e-499c-b6b8-e084617998dd", "2": "4af47062-3cd8-46a3-809f-125ce7874b07", "3": "9c10b837-920c-424e-a1d3-93a475934510"}}, "__type__": "1"}, "9c10b837-920c-424e-a1d3-93a475934510": {"__data__": {"text": "default:rcParams[\"image.origin\"](default:'upper')Place the [0, 0] index of the array in the upper left or lower\nleft corner of the Axes. The convention (the default) 'upper' is\ntypically used for matrices and images.Note that the vertical axis points upward for 'lower'\nbut downward for 'upper'.See theorigin and extent in imshowtutorial for\nexamples and a more detailed description.extentfloats (left, right, bottom, top), optionalThe bounding box in data coordinates that the image will fill.\nThese values may be unitful and match the units of the Axes.\nThe image is stretched individually along x and y to fill the box.The default extent is determined by the following conditions.\nPixels have unit size in data coordinates. Their centers are on\ninteger coordinates, and their center coordinates range from 0 to\ncolumns-1 horizontally and from 0 to rows-1 vertically.Note that the direction of the vertical axis and thus the default\nvalues for top and bottom depend onorigin:Fororigin=='upper'the default is(-0.5,numcols-0.5,numrows-0.5,-0.5).Fororigin=='lower'the default is(-0.5,numcols-0.5,-0.5,numrows-0.5).See theorigin and extent in imshowtutorial for\nexamples and a more detailed description.filternormbool, default: TrueA parameter for the antigrain image resize filter (see the\nantigrain documentation). Iffilternormis set, the filter\nnormalizes integer values and corrects the rounding errors. It\ndoesn't do anything with the source floating point values, it\ncorrects only integers according to the rule of 1.0 which means\nthat any sum of pixel weights must be equal to 1.0. So, the\nfilter function must produce a graph of the proper shape.filterradfloat > 0, default: 4.0The filter radius for filters that have a radius parameter, i.e.\nwhen interpolation is one of: 'sinc', 'lanczos' or 'blackman'.resamplebool, default:rcParams[\"image.resample\"](default:True)WhenTrue, use a full resampling method. WhenFalse, only\nresample when the output image is larger than the input image.urlstr, optionalSet the url of the createdAxesImage. SeeArtist.set_url.Returns:AxesImageOther Parameters:dataindexable object, optionalIf given, all parameters also accept a strings, which is\ninterpreted asdata[s](unless this raises an exception).**kwargsArtistpropertiesThese parameters are passed on to the constructor of theAxesImageartist.See alsomatshowPlot a matrix or an array as an image.NotesUnlessextentis used, pixel centers will be located at integer\ncoordinates. In other words: the origin will coincide with the center\nof pixel (0, 0).There are two common representations for RGB images with an alpha\nchannel:Straight (unassociated) alpha: R, G, and B channels represent the\ncolor of the pixel, disregarding its opacity.Premultiplied (associated) alpha: R, G, and B channels represent\nthe color of the pixel, adjusted for its opacity by multiplication.imshowexpects RGB images adopting the straight\n(unassociated) alpha representation.Examples usingmatplotlib.axes.Axes.imshow#Bar chart with gradientsBar chart with gradientsAffine transform of an imageAffine transform of an imageBarcodeBarcodeInteractive Adjustment of Colormap RangeInteractive Adjustment of Colormap RangeContour DemoContour DemoContour ImageContour ImageCreating annotated heatmapsCreating annotated heatmapsImage antialiasingImage antialiasingClipping images with patchesClipping images with patchesMany ways to plot imagesMany ways to plot imagesImage MaskedImage MaskedBlend transparency with color in 2D imagesBlend transparency with color in 2D imagesModifying the coordinate formatterModifying the coordinate formatterInterpolations for imshowInterpolations for imshowLayer ImagesLayer ImagesVisualize matrices with matshowVisualize matrices with matshowMultiple imagesMultiple imagespcolor imagespcolor imagesShading exampleShading exampleAxes box aspectAxes box aspectZoom region inset", "doc_id": "9c10b837-920c-424e-a1d3-93a475934510", "embedding": null, "doc_hash": "1bf15f82fced24ff5a9df295a36385be4bc4cc83e4cdf288e1d1a78538815c90", "extra_info": null, "node_info": {"start": 6322, "end": 10191, "_node_type": "1"}, "relationships": {"1": "958796be-a12e-499c-b6b8-e084617998dd", "2": "cad25e76-b45d-4d26-9ddf-dec0482183d0", "3": "2adae58c-c793-48ec-be2a-a8239bdd6739"}}, "__type__": "1"}, "2adae58c-c793-48ec-be2a-a8239bdd6739": {"__data__": {"text": "chart with gradientsAffine transform of an imageAffine transform of an imageBarcodeBarcodeInteractive Adjustment of Colormap RangeInteractive Adjustment of Colormap RangeContour DemoContour DemoContour ImageContour ImageCreating annotated heatmapsCreating annotated heatmapsImage antialiasingImage antialiasingClipping images with patchesClipping images with patchesMany ways to plot imagesMany ways to plot imagesImage MaskedImage MaskedBlend transparency with color in 2D imagesBlend transparency with color in 2D imagesModifying the coordinate formatterModifying the coordinate formatterInterpolations for imshowInterpolations for imshowLayer ImagesLayer ImagesVisualize matrices with matshowVisualize matrices with matshowMultiple imagesMultiple imagespcolor imagespcolor imagesShading exampleShading exampleAxes box aspectAxes box aspectZoom region inset axesZoom region inset axesUsing a text as a PathUsing a text as a PathColorbarColorbarColormap referenceColormap referenceCreating a colormap from a list of colorsCreating a colormap from a list of colorsAnchored Direction ArrowAnchored Direction ArrowDemo Axes GridDemo Axes GridAxes Grid2Axes Grid2HBoxDivider and VBoxDivider demoHBoxDivider and VBoxDivider demoAdding a colorbar to inset axesAdding a colorbar to inset axesColorbar with AxesDividerColorbar with AxesDividerControlling the position and size of colorbars with Inset AxesControlling the position and size of colorbars with Inset AxesInset locator demo 2Inset locator demo 2Simple ImageGridSimple ImageGridSimple ImageGrid 2Simple ImageGrid 2Simple ColorbarSimple ColorbarShaded & power normalized renderingShaded & power normalized renderingpyplot animationpyplot animationAnimated image using a precomputed list of imagesAnimated image using a precomputed list of imagesScroll eventScroll eventPick event demoPick event demoViewlimsViewlimsPatheffect DemoPatheffect DemoTopographic hillshadingTopographic hillshadingColorbar Tick LabellingColorbar Tick Labellingimshow(Z)imshow(Z)Constrained Layout GuideConstrained Layout GuideTight Layout guideTight Layout guideCreating ColormapsCreating ColormapsChoosing ColormapsChoosing Colormaps", "doc_id": "2adae58c-c793-48ec-be2a-a8239bdd6739", "embedding": null, "doc_hash": "fca0662c236e122b18b9c27f71f9859ef26443056bc1c664f83cf542ab2d219b", "extra_info": null, "node_info": {"start": 9996, "end": 12160, "_node_type": "1"}, "relationships": {"1": "958796be-a12e-499c-b6b8-e084617998dd", "2": "9c10b837-920c-424e-a1d3-93a475934510"}}, "__type__": "1"}, "6a700135-713c-4129-a335-6017b2ea6d7a": {"__data__": {"text": "\u3010Name\u3011matplotlib\u3010Chapter\u3011matplotlib.axes\u3010Section\u3011matplotlib.axes.Axes.set_title\u3010Content\u3011matplotlib.axes.Axes.set_title#Axes.set_title(label,fontdict=None,loc=None,pad=None,*,y=None,**kwargs)[source]#Set a title for the Axes.Set one of the three available Axes titles. The available titles\nare positioned above the Axes in the center, flush with the left\nedge, and flush with the right edge.Parameters:labelstrText to use for the titlefontdictdictDiscouragedThe use offontdictis discouraged. Parameters should be passed as\nindividual keyword arguments or using dictionary-unpackingset_title(...,**fontdict).A dictionary controlling the appearance of the title text,\nthe defaultfontdictis:{'fontsize':rcParams['axes.titlesize'],'fontweight':rcParams['axes.titleweight'],'color':rcParams['axes.titlecolor'],'verticalalignment':'baseline','horizontalalignment':loc}loc{'center', 'left', 'right'}, default:rcParams[\"axes.titlelocation\"](default:'center')Which title to set.yfloat, default:rcParams[\"axes.titley\"](default:None)Vertical Axes location for the title (1.0 is the top). If\nNone (the default) andrcParams[\"axes.titley\"](default:None) is also None, y is\ndetermined automatically to avoid decorators on the Axes.padfloat, default:rcParams[\"axes.titlepad\"](default:6.0)The offset of the title from the top of the Axes, in points.Returns:TextThe matplotlib text instance representing the titleOther Parameters:**kwargsTextpropertiesOther keyword arguments are text properties, seeTextfor a list\nof valid text properties.Examples usingmatplotlib.axes.Axes.set_title#Bar color demoBar color demoBar Label DemoBar Label DemoStacked bar chartStacked bar chartGrouped bar chart with labelsGrouped bar chart with labelsHorizontal bar chartHorizontal bar chartErrorbar subsamplingErrorbar subsamplingEventCollection DemoEventCollection DemoFill Between and AlphaFill Between and AlphaFilling the area between linesFilling the area between linesFill Betweenx DemoFill Betweenx DemoHat graphHat graphMarkevery DemoMarkevery DemoPower spectral density (PSD)Power spectral density (PSD)Scatter Demo2Scatter Demo2Stackplots and streamgraphsStackplots and streamgraphshlines and vlineshlines and vlinesCross- and auto-correlationCross- and auto-correlationInteractive Adjustment of Colormap RangeInteractive Adjustment of Colormap RangeContour Corner MaskContour Corner MaskContour DemoContour DemoContour Label DemoContour Label DemoContourf demoContourf demoCreating annotated heatmapsCreating annotated heatmapsImage antialiasingImage antialiasingMany ways to plot imagesMany ways to plot imagesImage MaskedImage MaskedImage nonuniformImage nonuniformInterpolations for imshowInterpolations for imshowContour plot of irregularly spaced dataContour plot of irregularly spaced datapcolor imagespcolor imagespcolormesh grids and shadingpcolormesh grids and shadingpcolormeshpcolormeshAdvanced quiver and quiverkey functionsAdvanced quiver and quiverkey functionsTricontour DemoTricontour DemoTricontour Smooth DelaunayTricontour Smooth DelaunayTricontour Smooth UserTricontour Smooth UserTrigradient DemoTrigradient DemoTripcolor DemoTripcolor DemoTriplot DemoTriplot DemoAxes DemoAxes DemoControlling view limits using margins and sticky_edgesControlling view limits using margins and sticky_edgesResizing axes with constrained layoutResizing axes with constrained layoutResizing axes with tight layoutResizing axes with tight layoutFigure labels: suptitle, supxlabel, supylabelFigure labels: suptitle, supxlabel, supylabelInvert AxesInvert AxesSecondary AxisSecondary AxisFigure subfiguresFigure", "doc_id": "6a700135-713c-4129-a335-6017b2ea6d7a", "embedding": null, "doc_hash": "d03726158404b78602e7d046804c70a5bd7369975cdc43dcba758194aecfa8e9", "extra_info": null, "node_info": {"start": 0, "end": 3585, "_node_type": "1"}, "relationships": {"1": "8ec40b5f-f75c-4096-a0d3-4d6d3df637cd", "3": "120a9fca-fd70-4ca6-9b35-5667e714befc"}}, "__type__": "1"}, "120a9fca-fd70-4ca6-9b35-5667e714befc": {"__data__": {"text": "quiver and quiverkey functionsTricontour DemoTricontour DemoTricontour Smooth DelaunayTricontour Smooth DelaunayTricontour Smooth UserTricontour Smooth UserTrigradient DemoTrigradient DemoTripcolor DemoTripcolor DemoTriplot DemoTriplot DemoAxes DemoAxes DemoControlling view limits using margins and sticky_edgesControlling view limits using margins and sticky_edgesResizing axes with constrained layoutResizing axes with constrained layoutResizing axes with tight layoutResizing axes with tight layoutFigure labels: suptitle, supxlabel, supylabelFigure labels: suptitle, supxlabel, supylabelInvert AxesInvert AxesSecondary AxisSecondary AxisFigure subfiguresFigure subfiguresCreating multiple subplots using plt.subplotsCreating multiple subplots using plt.subplotsBox plots with custom fill colorsBox plots with custom fill colorsPlot a confidence ellipse of a two-dimensional datasetPlot a confidence ellipse of a two-dimensional datasetViolin plot customizationViolin plot customizationDifferent ways of specifying error barsDifferent ways of specifying error barsIncluding upper and lower limits in error barsIncluding upper and lower limits in error barsHexagonal binned plotHexagonal binned plotSome features of the histogram (hist) functionSome features of the histogram (hist) functionThe histogram (hist) function with multiple data setsThe histogram (hist) function with multiple data setsBar of pieBar of pieLabeling a pie and a donutLabeling a pie and a donutPolar plotPolar plotError bar rendering on polar axisError bar rendering on polar axisAccented textAccented textAlign y-labelsAlign y-labelsScale invariant angle labelScale invariant angle labelAngle annotations on bracket arrowsAngle annotations on bracket arrowsDate tick labelsDate tick labelsLabeling ticks using engineering notationLabeling ticks using engineering notationUsing ttf font filesUsing ttf font filesLabelling subplotsLabelling subplotsLegend DemoLegend DemoMathtextMathtextMath fontfamilyMath fontfamilyMultilineMultilineRendering math equations using TeXRendering math equations using TeXText CommandsText CommandsTitle positioningTitle positioningColor DemoColor DemoCreating a colormap from a list of colorsCreating a colormap from a list of colorsWays to set a color's alpha valueWays to set a color's alpha valueLine, Poly and RegularPoly Collection with autoscalingLine, Poly and RegularPoly Collection with autoscalingCompound pathCompound pathMmh Donuts!!!Mmh Donuts!!!Plotting multiple lines with a LineCollectionPlotting multiple lines with a LineCollectionBezier CurveBezier CurveBayesian Methods for Hackers style sheetBayesian Methods for Hackers style sheetDark background style sheetDark background style sheetFiveThirtyEight style sheetFiveThirtyEight style sheetMake room for ylabel using axes_gridMake room for ylabel using axes_gridAxis DirectionAxis DirectionAnatomy of a figureAnatomy of a figureXKCDXKCDpyplot animationpyplot animationCross-hair cursorCross-hair cursorData browserData browserKeypress eventKeypress eventLegend pickingLegend pickingLooking GlassLooking GlassPath editorPath editorPick event demoPick event demoPick event demo 2Pick event demo 2Poly EditorPoly EditorTrifinder Event DemoTrifinder Event DemoViewlimsViewlimsPacked-bubble chartPacked-bubble chartRasterization for vector graphicsRasterization for vector graphicsZorder DemoZorder DemoDemo of 3D bar chartsDemo of 3D bar chartsLorenz attractorLorenz attractor3D wireframe plots in one direction3D wireframe plots in one directionAsinh DemoAsinh DemoLoglog AspectLoglog AspectExploring normalizationsExploring normalizationsScalesScalesRadar chart (aka spider or star chart)Radar chart (aka spider or star chart)Topographic hillshadingTopographic hillshadingSpinesSpinesSpine placementSpine placementColorbar Tick LabellingColorbar Tick LabellingCustom tick formatter for time seriesCustom tick formatter for time seriesDate Precision and EpochsDate Precision and EpochsMove x-axis tick labels to the", "doc_id": "120a9fca-fd70-4ca6-9b35-5667e714befc", "embedding": null, "doc_hash": "a1fab15ea04c78db3a5a65d31028d5c0c54c8d4cbc91ac311f3e6a0f1ef4e197", "extra_info": null, "node_info": {"start": 2983, "end": 6975, "_node_type": "1"}, "relationships": {"1": "8ec40b5f-f75c-4096-a0d3-4d6d3df637cd", "2": "6a700135-713c-4129-a335-6017b2ea6d7a", "3": "0eef522a-6501-4003-8b26-4ec9a18d25e0"}}, "__type__": "1"}, "0eef522a-6501-4003-8b26-4ec9a18d25e0": {"__data__": {"text": "chartPacked-bubble chartRasterization for vector graphicsRasterization for vector graphicsZorder DemoZorder DemoDemo of 3D bar chartsDemo of 3D bar chartsLorenz attractorLorenz attractor3D wireframe plots in one direction3D wireframe plots in one directionAsinh DemoAsinh DemoLoglog AspectLoglog AspectExploring normalizationsExploring normalizationsScalesScalesRadar chart (aka spider or star chart)Radar chart (aka spider or star chart)Topographic hillshadingTopographic hillshadingSpinesSpinesSpine placementSpine placementColorbar Tick LabellingColorbar Tick LabellingCustom tick formatter for time seriesCustom tick formatter for time seriesDate Precision and EpochsDate Precision and EpochsMove x-axis tick labels to the topMove x-axis tick labels to the topArtist testsArtist testsGroup barchart with unitsGroup barchart with unitsEvans testEvans testAnnotated cursorAnnotated cursorRectangle and ellipse selectorsRectangle and ellipse selectorsSpan SelectorSpan SelectorArtist tutorialArtist tutorialQuick start guideQuick start guideStyling with cyclerStyling with cyclerTransformations TutorialTransformations TutorialConstrained Layout GuideConstrained Layout GuideTight Layout guideTight Layout guideAxis scalesAxis scalesAxis TicksAxis TicksSpecifying colorsSpecifying colorsColormap NormalizationColormap NormalizationText in MatplotlibText in Matplotlib", "doc_id": "0eef522a-6501-4003-8b26-4ec9a18d25e0", "embedding": null, "doc_hash": "d65d0ebddc01880e13f7d974e7776b854cf24ce66d61517c3568369e4868260d", "extra_info": null, "node_info": {"start": 6852, "end": 8220, "_node_type": "1"}, "relationships": {"1": "8ec40b5f-f75c-4096-a0d3-4d6d3df637cd", "2": "120a9fca-fd70-4ca6-9b35-5667e714befc"}}, "__type__": "1"}, "b68bd84a-7c6a-4193-9f9a-6375c659cbe9": {"__data__": {"text": "\u3010Name\u3011matplotlib\u3010Chapter\u3011matplotlib.axes\u3010Section\u3011matplotlib.axes.Axes.set_xlabel\u3010Content\u3011matplotlib.axes.Axes.set_xlabel#Axes.set_xlabel(xlabel,fontdict=None,labelpad=None,*,loc=None,**kwargs)[source]#Set the label for the x-axis.Parameters:xlabelstrThe label text.labelpadfloat, default:rcParams[\"axes.labelpad\"](default:4.0)Spacing in points from the Axes bounding box including ticks\nand tick labels. If None, the previous value is left as is.loc{'left', 'center', 'right'}, default:rcParams[\"xaxis.labellocation\"](default:'center')The label position. This is a high-level alternative for passing\nparametersxandhorizontalalignment.Other Parameters:**kwargsTextpropertiesTextproperties control the appearance of the label.See alsotextDocuments the properties supported byText.Examples usingmatplotlib.axes.Axes.set_xlabel#Bar Label DemoBar Label DemoHorizontal bar chartHorizontal bar chartBroken BarhBroken BarhCross spectral density (CSD)Cross spectral density (CSD)Fill Between and AlphaFill Between and AlphaFilling the area between linesFilling the area between linesFill Betweenx DemoFill Betweenx DemoHatch-filled histogramsHatch-filled histogramsHat graphHat graphMapping marker properties to multivariate dataMapping marker properties to multivariate dataPower spectral density (PSD)Power spectral density (PSD)Scatter Demo2Scatter Demo2Stackplots and streamgraphsStackplots and streamgraphshlines and vlineshlines and vlinesContourf demoContourf demoSpectrogramSpectrogramTricontour DemoTricontour DemoTripcolor DemoTripcolor DemoTriplot DemoTriplot DemoAligning LabelsAligning LabelsAxes DemoAxes DemoAxis Label PositionAxis Label PositionResizing axes with constrained layoutResizing axes with constrained layoutResizing axes with tight layoutResizing axes with tight layoutFigure labels: suptitle, supxlabel, supylabelFigure labels: suptitle, supxlabel, supylabelInvert AxesInvert AxesSecondary AxisSecondary AxisFigure subfiguresFigure subfiguresMultiple subplotsMultiple subplotsPlots with different scalesPlots with different scalesBox plots with custom fill colorsBox plots with custom fill colorsBoxplotsBoxplotsBox plot vs. violin plot comparisonBox plot vs. violin plot comparisonViolin plot customizationViolin plot customizationPlotting cumulative distributionsPlotting cumulative distributionsSome features of the histogram (hist) functionSome features of the histogram (hist) functionProducing multiple histograms side by sideProducing multiple histograms side by sideAccented textAccented textLabeling ticks using engineering notationLabeling ticks using engineering notationUsing ttf font filesUsing ttf font filesLegend DemoLegend DemoMathtextMathtextMultilineMultilineRendering math equations using TeXRendering math equations using TeXText CommandsText CommandsTitle positioningTitle positioningColor DemoColor DemoLine, Poly and RegularPoly Collection with autoscalingLine, Poly and RegularPoly Collection with autoscalingEllipse CollectionEllipse CollectionDark background style sheetDark background style sheetMake room for ylabel using axes_gridMake room for ylabel using axes_gridParasite SimpleParasite SimpleTicklabel alignmentTicklabel alignmentSimple axis tick label and tick directionsSimple axis tick label and tick directionsSimple AxislineSimple AxislineAnatomy of a figureAnatomy of a figureXKCDXKCDKeypress eventKeypress eventPlot 2D data on 3D plotPlot 2D data on 3D plotCreate 2D bar graphs in different planesCreate 2D bar graphs in different planes3D errorbars3D errorbarsLorenz attractorLorenz attractorAutomatic text offsettingAutomatic text offsetting3D scatterplot3D scatterplot3D surface with polar coordinates3D surface with polar coordinatesText annotations in 3DText annotations in 3DAsinh DemoAsinh DemoLog BarLog BarCentering labels between ticksCentering labels between ticksSliderSliderPGF", "doc_id": "b68bd84a-7c6a-4193-9f9a-6375c659cbe9", "embedding": null, "doc_hash": "a157f7e6dc68816db37b9455a11f4c67294c803c6827980f5f0e083d9fc46cfa", "extra_info": null, "node_info": {"start": 0, "end": 3851, "_node_type": "1"}, "relationships": {"1": "b9833daf-11ec-4a70-b081-ab4a8ed54ba1", "3": "47e3fbad-7a0e-4a14-932d-ffbdd0f0ef55"}}, "__type__": "1"}, "47e3fbad-7a0e-4a14-932d-ffbdd0f0ef55": {"__data__": {"text": "SimpleParasite SimpleTicklabel alignmentTicklabel alignmentSimple axis tick label and tick directionsSimple axis tick label and tick directionsSimple AxislineSimple AxislineAnatomy of a figureAnatomy of a figureXKCDXKCDKeypress eventKeypress eventPlot 2D data on 3D plotPlot 2D data on 3D plotCreate 2D bar graphs in different planesCreate 2D bar graphs in different planes3D errorbars3D errorbarsLorenz attractorLorenz attractorAutomatic text offsettingAutomatic text offsetting3D scatterplot3D scatterplot3D surface with polar coordinates3D surface with polar coordinatesText annotations in 3DText annotations in 3DAsinh DemoAsinh DemoLog BarLog BarCentering labels between ticksCentering labels between ticksSliderSliderPGF fontsPGF fontsPGF texsystemPGF texsystemArtist tutorialArtist tutorialQuick start guideQuick start guideConstrained Layout GuideConstrained Layout GuideTight Layout guideTight Layout guideArranging multiple Axes in a FigureArranging multiple Axes in a FigureAxis scalesAxis scalesChoosing ColormapsChoosing ColormapsText in MatplotlibText in Matplotlib", "doc_id": "47e3fbad-7a0e-4a14-932d-ffbdd0f0ef55", "embedding": null, "doc_hash": "f97f064e55a44ea859c9fb587a3eaf9b12b767bdc9d32184fe70f0096303f069", "extra_info": null, "node_info": {"start": 3125, "end": 4204, "_node_type": "1"}, "relationships": {"1": "b9833daf-11ec-4a70-b081-ab4a8ed54ba1", "2": "b68bd84a-7c6a-4193-9f9a-6375c659cbe9"}}, "__type__": "1"}, "c9354f08-17de-46fe-a479-9170aa4f6864": {"__data__": {"text": "\u3010Name\u3011matplotlib\u3010Chapter\u3011matplotlib.axes\u3010Section\u3011matplotlib.axes.Axes.set_ylabel\u3010Content\u3011matplotlib.axes.Axes.set_ylabel#Axes.set_ylabel(ylabel,fontdict=None,labelpad=None,*,loc=None,**kwargs)[source]#Set the label for the y-axis.Parameters:ylabelstrThe label text.labelpadfloat, default:rcParams[\"axes.labelpad\"](default:4.0)Spacing in points from the Axes bounding box including ticks\nand tick labels. If None, the previous value is left as is.loc{'bottom', 'center', 'top'}, default:rcParams[\"yaxis.labellocation\"](default:'center')The label position. This is a high-level alternative for passing\nparametersyandhorizontalalignment.Other Parameters:**kwargsTextpropertiesTextproperties control the appearance of the label.See alsotextDocuments the properties supported byText.Examples usingmatplotlib.axes.Axes.set_ylabel#Bar color demoBar color demoGrouped bar chart with labelsGrouped bar chart with labelsCross spectral density (CSD)Cross spectral density (CSD)Fill Between and AlphaFill Between and AlphaHatch-filled histogramsHatch-filled histogramsHat graphHat graphMapping marker properties to multivariate dataMapping marker properties to multivariate dataPower spectral density (PSD)Power spectral density (PSD)Scatter Demo2Scatter Demo2Stackplots and streamgraphsStackplots and streamgraphsContourf demoContourf demoCreating annotated heatmapsCreating annotated heatmapsSpectrogramSpectrogramTricontour DemoTricontour DemoTripcolor DemoTripcolor DemoTriplot DemoTriplot DemoAligning LabelsAligning LabelsAxes DemoAxes DemoAxis Label PositionAxis Label PositionResizing axes with constrained layoutResizing axes with constrained layoutResizing axes with tight layoutResizing axes with tight layoutFigure labels: suptitle, supxlabel, supylabelFigure labels: suptitle, supxlabel, supylabelInvert AxesInvert AxesSecondary AxisSecondary AxisFigure subfiguresFigure subfiguresMultiple subplotsMultiple subplotsPlots with different scalesPlots with different scalesBox plots with custom fill colorsBox plots with custom fill colorsBoxplotsBoxplotsBox plot vs. violin plot comparisonBox plot vs. violin plot comparisonViolin plot customizationViolin plot customizationPlotting cumulative distributionsPlotting cumulative distributionsSome features of the histogram (hist) functionSome features of the histogram (hist) functionProducing multiple histograms side by sideProducing multiple histograms side by sideAccented textAccented textAlign y-labelsAlign y-labelsDate tick labelsDate tick labelsLegend DemoLegend DemoMathtextMathtextMultilineMultilineRendering math equations using TeXRendering math equations using TeXText CommandsText CommandsColor DemoColor DemoLine, Poly and RegularPoly Collection with autoscalingLine, Poly and RegularPoly Collection with autoscalingEllipse CollectionEllipse CollectionDark background style sheetDark background style sheetMake room for ylabel using axes_gridMake room for ylabel using axes_gridParasite SimpleParasite SimpleTicklabel alignmentTicklabel alignmentSimple axis tick label and tick directionsSimple axis tick label and tick directionsSimple AxislineSimple AxislineAnatomy of a figureAnatomy of a figureXKCDXKCDPick event demoPick event demoPlot 2D data on 3D plotPlot 2D data on 3D plotCreate 2D bar graphs in different planesCreate 2D bar graphs in different planes3D errorbars3D errorbarsLorenz attractorLorenz attractor2D and 3D axes in same figure2D and 3D axes in same figureAutomatic text offsettingAutomatic text offsetting3D scatterplot3D scatterplot3D surface with polar coordinates3D surface with polar coordinatesText annotations in 3DText annotations in 3DAsinh DemoAsinh DemoLog BarLog BarSymlog DemoSymlog DemoTopographic hillshadingTopographic hillshadingArtist tutorialArtist tutorialQuick start guideQuick start", "doc_id": "c9354f08-17de-46fe-a479-9170aa4f6864", "embedding": null, "doc_hash": "159b617b118c7cd363c2f3d5d89e9727bf7031b1fea49ddc99b7834608dad5d2", "extra_info": null, "node_info": {"start": 0, "end": 3786, "_node_type": "1"}, "relationships": {"1": "19269416-37a5-4137-9ad5-24ffee2ef565", "3": "70870493-3a8b-4ade-9d18-49fac24eb477"}}, "__type__": "1"}, "70870493-3a8b-4ade-9d18-49fac24eb477": {"__data__": {"text": "AxislineSimple AxislineAnatomy of a figureAnatomy of a figureXKCDXKCDPick event demoPick event demoPlot 2D data on 3D plotPlot 2D data on 3D plotCreate 2D bar graphs in different planesCreate 2D bar graphs in different planes3D errorbars3D errorbarsLorenz attractorLorenz attractor2D and 3D axes in same figure2D and 3D axes in same figureAutomatic text offsettingAutomatic text offsetting3D scatterplot3D scatterplot3D surface with polar coordinates3D surface with polar coordinatesText annotations in 3DText annotations in 3DAsinh DemoAsinh DemoLog BarLog BarSymlog DemoSymlog DemoTopographic hillshadingTopographic hillshadingArtist tutorialArtist tutorialQuick start guideQuick start guideConstrained Layout GuideConstrained Layout GuideTight Layout guideTight Layout guideArranging multiple Axes in a FigureArranging multiple Axes in a FigureAxis scalesAxis scalesChoosing ColormapsChoosing ColormapsText in MatplotlibText in Matplotlib", "doc_id": "70870493-3a8b-4ade-9d18-49fac24eb477", "embedding": null, "doc_hash": "9b826d149b2471a9e28c4fa5ca472b9bf82f129ed4e7784cf23cd991d8962d62", "extra_info": null, "node_info": {"start": 3099, "end": 4040, "_node_type": "1"}, "relationships": {"1": "19269416-37a5-4137-9ad5-24ffee2ef565", "2": "c9354f08-17de-46fe-a479-9170aa4f6864"}}, "__type__": "1"}, "287610cd-940a-408c-b443-b4eec18cf3b5": {"__data__": {"text": "\u3010Name\u3011matplotlib\u3010Chapter\u3011matplotlib.axes\u3010Section\u3011matplotlib.axes.Axes.legend\u3010Content\u3011The `legend()` function in the `Axes` class of the `matplotlib` library is used to place a legend on the axes. It has several call signatures that allow different ways to use the function.1. Automatic detection of elements to be shown in the legend:   When no extra arguments are passed, the elements to be added to the legend are automatically determined. The labels for the legend are taken from the artist. You can specify the labels either at artist creation or by calling the `set_label()` method on the artist. For example:   ```python   ax.plot([1,2,3],label='Inline label')   ax.legend()   ```   or   ```python   line, = ax.plot([1,2,3])   line.set_label('Label via method')   ax.legend()   ```   Artists can be excluded from the automatic legend element selection by using a label starting with an underscore, \"_\". If no labels are specified, no legend will be drawn.2. Explicitly listing the artists and labels in the legend:   If you want full control over which artists have a legend entry, you can pass an iterable of legend artists followed by an iterable of legend labels. This allows you to specify which artists and labels should be included in the legend. For example:   ```python   ax.legend([line1,line2,line3],['label1','label2','label3'])   ```3. Explicitly listing the artists in the legend:   This is similar to the previous method, but the labels are taken from the artists' label properties. For example:   ```python   line1, = ax.plot([1,2,3],label='label1')   line2, = ax.plot([1,2,3],label='label2')   ax.legend(handles=[line1,line2])   ```4. Labeling existing plot elements (discouraged):   This method is discouraged because the relation between plot elements and labels is only implicit by their order and can easily be mixed up. You can make a legend for all artists on an axes by calling the function with an iterable of strings, one for each legend item. For example:   ```python   ax.plot([1,2,3])   ax.plot([5,6,7])   ax.legend(['First line','Second line'])   ```The `legend()` function also has several parameters that allow you to customize the legend's appearance and position, such as `loc`, `bbox_to_anchor`, `ncols`, `prop`, `fontsize`, `labelcolor`, etc. These parameters allow you to control the location, font properties, colors, and other aspects of the legend.In addition to the parameters, the function also returns a `Legend` object, which you can use to further customize the legend if needed.Overall, the `legend()` function in `matplotlib` provides a convenient way to add a legend to your plot, allowing you to provide additional information about the elements in the plot.", "doc_id": "287610cd-940a-408c-b443-b4eec18cf3b5", "embedding": null, "doc_hash": "fc535f61adba48a355aaf1bf361d7ae5c46ed6f5df55db67589eb9a7d921b3b7", "extra_info": null, "node_info": {"start": 0, "end": 2712, "_node_type": "1"}, "relationships": {"1": "139ecf1c-cc2e-42ae-b368-02d1a074e39f"}}, "__type__": "1"}, "5b71ef8b-509d-411a-859c-b5d919875750": {"__data__": {"text": "\u3010Name\u3011matplotlib\u3010Chapter\u3011matplotlib.axes\u3010Section\u3011matplotlib.axes.Axes.grid\u3010Content\u3011matplotlib.axes.Axes.grid#Axes.grid(visible=None,which='major',axis='both',**kwargs)[source]#Configure the grid lines.Parameters:visiblebool or None, optionalWhether to show the grid lines. If anykwargsare supplied, it\nis assumed you want the grid on andvisiblewill be set to True.IfvisibleisNoneand there are nokwargs, this toggles the\nvisibility of the lines.which{'major', 'minor', 'both'}, optionalThe grid lines to apply the changes on.axis{'both', 'x', 'y'}, optionalThe axis to apply the changes on.**kwargsLine2DpropertiesDefine the line properties of the grid, e.g.:grid(color='r',linestyle='-',linewidth=2)Valid keyword arguments are:PropertyDescriptionagg_filtera filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array and two offsets from the bottom left corner of the imagealphascalar or Noneanimatedboolantialiasedor aaboolclip_boxBboxBaseor Noneclip_onboolclip_pathPatch or (Path, Transform) or Nonecoloror ccolordash_capstyleCapStyleor {'butt', 'projecting', 'round'}dash_joinstyleJoinStyleor {'miter', 'round', 'bevel'}dashessequence of floats (on/off ink in points) or (None, None)data(2, N) array or two 1D arraysdrawstyleor ds{'default', 'steps', 'steps-pre', 'steps-mid', 'steps-post'}, default: 'default'figureFigurefillstyle{'full', 'left', 'right', 'bottom', 'top', 'none'}gapcolorcolor or Nonegidstrin_layoutboollabelobjectlinestyleor ls{'-', '--', '-.', ':', '', (offset, on-off-seq), ...}linewidthor lwfloatmarkermarker style string,PathorMarkerStylemarkeredgecoloror meccolormarkeredgewidthor mewfloatmarkerfacecoloror mfccolormarkerfacecoloraltor mfcaltcolormarkersizeor msfloatmarkeveryNone or int or (int, int) or slice or list[int] or float or (float, float) or list[bool]mouseoverboolpath_effectslist ofAbstractPathEffectpickerfloat or callable[[Artist, Event], tuple[bool, dict]]pickradiusfloatrasterizedboolsketch_params(scale: float, length: float, randomness: float)snapbool or Nonesolid_capstyleCapStyleor {'butt', 'projecting', 'round'}solid_joinstyleJoinStyleor {'miter', 'round', 'bevel'}transformunknownurlstrvisibleboolxdata1D arrayydata1D arrayzorderfloatNotesThe axis is drawn as a unit, so the effective zorder for drawing the\ngrid is determined by the zorder of each axis, not by the zorder of theLine2Dobjects comprising the grid. Therefore, to set grid zorder,\nuseset_axisbelowor, for more control, call theset_zordermethod of each axis.Examples usingmatplotlib.axes.Axes.grid#Broken BarhBroken BarhCross spectral density (CSD)Cross spectral density (CSD)Fill Between and AlphaFill Between and AlphaPower spectral density (PSD)Power spectral density (PSD)Scatter Demo2Scatter Demo2Scatter plots with a legendScatter plots with a legendSimple PlotSimple PlotCross- and auto-correlationCross- and auto-correlationContour Corner MaskContour Corner MaskCreating annotated heatmapsCreating annotated heatmapsMany ways to plot imagesMany ways to plot imagesWatermark imageWatermark imageAxes PropsAxes PropsInvert AxesInvert AxesPlotting cumulative distributionsPlotting cumulative distributionsPolar plotPolar plotDate tick labelsDate tick labelsMultilineMultilineText watermarkText watermarkPathPatch objectPathPatch objectaxis_direction demoaxis_direction demofloating_axes featuresfloating_axes featuresAnatomy of a", "doc_id": "5b71ef8b-509d-411a-859c-b5d919875750", "embedding": null, "doc_hash": "5a1e710208d94b2b789ced0e40b9e9c993934707b13dc2f73afe1b90a016b906", "extra_info": null, "node_info": {"start": 0, "end": 3390, "_node_type": "1"}, "relationships": {"1": "07e6eb64-1f15-40b4-9093-f9bfaea87d64", "3": "1e8abe22-a111-4fae-818b-9b2f66701a85"}}, "__type__": "1"}, "1e8abe22-a111-4fae-818b-9b2f66701a85": {"__data__": {"text": "spectral density (CSD)Fill Between and AlphaFill Between and AlphaPower spectral density (PSD)Power spectral density (PSD)Scatter Demo2Scatter Demo2Scatter plots with a legendScatter plots with a legendSimple PlotSimple PlotCross- and auto-correlationCross- and auto-correlationContour Corner MaskContour Corner MaskCreating annotated heatmapsCreating annotated heatmapsMany ways to plot imagesMany ways to plot imagesWatermark imageWatermark imageAxes PropsAxes PropsInvert AxesInvert AxesPlotting cumulative distributionsPlotting cumulative distributionsPolar plotPolar plotDate tick labelsDate tick labelsMultilineMultilineText watermarkText watermarkPathPatch objectPathPatch objectaxis_direction demoaxis_direction demofloating_axes featuresfloating_axes featuresAnatomy of a figureAnatomy of a figureStock prices over 32 yearsStock prices over 32 yearsDecayDecayThe double pendulum problemThe double pendulum problemCustom projectionCustom projectionPatheffect DemoPatheffect Demo2D and 3D axes in same figure2D and 3D axes in same figureAsinh DemoAsinh DemoLog DemoLog DemoScalesScalesLog AxisLog AxisSymlog DemoSymlog DemoArtist testsArtist testsQuick start guideQuick start guideAxis scalesAxis scalesAxis TicksAxis Ticks", "doc_id": "1e8abe22-a111-4fae-818b-9b2f66701a85", "embedding": null, "doc_hash": "9fa0403bba5f02eda9e89f2cbf1211a65a48eaf34efbc5e62ad8002620c6af71", "extra_info": null, "node_info": {"start": 2610, "end": 3840, "_node_type": "1"}, "relationships": {"1": "07e6eb64-1f15-40b4-9093-f9bfaea87d64", "2": "5b71ef8b-509d-411a-859c-b5d919875750"}}, "__type__": "1"}, "6cfb47e0-4230-4d4d-832d-e76254c22bcd": {"__data__": {"text": "\u3010Name\u3011matplotlib\u3010Chapter\u3011matplotlib.axes\u3010Section\u3011matplotlib.axes.Axes.set_xlim\u3010Content\u3011matplotlib.axes.Axes.set_xlim#Axes.set_xlim(left=None,right=None,*,emit=True,auto=False,xmin=None,xmax=None)[source]#Set the x-axis view limits.Parameters:leftfloat, optionalThe left xlim in data coordinates. PassingNoneleaves the\nlimit unchanged.The left and right xlims may also be passed as the tuple\n(left,right) as the first positional argument (or as\ntheleftkeyword argument).rightfloat, optionalThe right xlim in data coordinates. PassingNoneleaves the\nlimit unchanged.emitbool, default: TrueWhether to notify observers of limit change.autobool or None, default: FalseWhether to turn on autoscaling of the x-axis. True turns on,\nFalse turns off, None leaves unchanged.xmin, xmaxfloat, optionalThey are equivalent to left and right respectively, and it is an\nerror to pass bothxminandleftorxmaxandright.Returns:left, right(float, float)The new x-axis limits in data coordinates.See alsoget_xlimset_xbound,get_xboundinvert_xaxis,xaxis_invertedNotesTheleftvalue may be greater than therightvalue, in which\ncase the x-axis values will decrease from left to right.Examples>>>set_xlim(left,right)>>>set_xlim((left,right))>>>left,right=set_xlim(left,right)One limit may be left unchanged.>>>set_xlim(right=right_lim)Limits may be passed in reverse order to flip the direction of\nthe x-axis. For example, supposexrepresents the number of\nyears before present. The x-axis limits might be set like the\nfollowing so 5000 years ago is on the left of the plot and the\npresent is on the right.>>>set_xlim(5000,0)Examples usingmatplotlib.axes.Axes.set_xlim#Bar Label DemoBar Label DemoBroken BarhBroken BarhCross spectral density (CSD)Cross spectral density (CSD)EventCollection DemoEventCollection DemoMarkevery DemoMarkevery DemoContouring the solution space of optimizationsContouring the solution space of optimizationsImage nonuniformImage nonuniformpcolormesh grids and shadingpcolormesh grids and shadingSpectrogramSpectrogramAxes box aspectAxes box aspectAxes DemoAxes DemoInvert AxesInvert AxesBoxplotsBoxplotsViolin plot customizationViolin plot customizationIncluding upper and lower limits in error barsIncluding upper and lower limits in error barsBar of pieBar of pieAnnotate TransformAnnotate TransformAnnotationBbox demoAnnotationBbox demoUsing a text as a PathUsing a text as a PathText Rotation Relative To LineText Rotation Relative To LineMmh Donuts!!!Mmh Donuts!!!Plotting multiple lines with a LineCollectionPlotting multiple lines with a LineCollectionInset locator demo 2Inset locator demo 2Parasite Simple2Parasite Simple2Simple Axis PadSimple Axis PadAnatomy of a figureAnatomy of a figureStock prices over 32 yearsStock prices over 32 yearsXKCDXKCDDecayDecayRain simulationRain simulationAnimated scatter saved as GIFAnimated scatter saved as GIFPath editorPath editorPoly EditorPoly EditorResampling DataResampling DataZoom WindowZoom WindowCustom projectionCustom projectionSVG Filter LineSVG Filter LineTickedStroke patheffectTickedStroke patheffectPlot 2D data on 3D plotPlot 2D data on 3D plotDraw flat objects in 3D plotDraw flat objects in 3D plotText annotations in 3DText annotations in 3DAsinh DemoAsinh DemoLoglog AspectLoglog AspectScalesScalesIshikawa DiagramIshikawa DiagramSkewT-logP diagram: using transforms and custom projectionsSkewT-logP diagram: using transforms and custom projectionsFormatting date ticks using ConciseDateFormatterFormatting date ticks using ConciseDateFormatterDate Demo", "doc_id": "6cfb47e0-4230-4d4d-832d-e76254c22bcd", "embedding": null, "doc_hash": "279e50e1395ad46a9320755da2fd72009ac4ecd1d4ecddc2269b664072ff7710", "extra_info": null, "node_info": {"start": 0, "end": 3517, "_node_type": "1"}, "relationships": {"1": "b2fd04aa-de91-4e14-8db7-466323a29c73", "3": "e775d19f-6c3b-409d-8d4a-cdccb2e24615"}}, "__type__": "1"}, "e775d19f-6c3b-409d-8d4a-cdccb2e24615": {"__data__": {"text": "saved as GIFAnimated scatter saved as GIFPath editorPath editorPoly EditorPoly EditorResampling DataResampling DataZoom WindowZoom WindowCustom projectionCustom projectionSVG Filter LineSVG Filter LineTickedStroke patheffectTickedStroke patheffectPlot 2D data on 3D plotPlot 2D data on 3D plotDraw flat objects in 3D plotDraw flat objects in 3D plotText annotations in 3DText annotations in 3DAsinh DemoAsinh DemoLoglog AspectLoglog AspectScalesScalesIshikawa DiagramIshikawa DiagramSkewT-logP diagram: using transforms and custom projectionsSkewT-logP diagram: using transforms and custom projectionsFormatting date ticks using ConciseDateFormatterFormatting date ticks using ConciseDateFormatterDate Demo ConvertDate Demo ConvertDate tick locators and formattersDate tick locators and formattersAnnotation with unitsAnnotation with unitsArtist testsArtist testsAnnotated cursorAnnotated cursorCursorCursorSpan SelectorSpan SelectorAnnotate Text ArrowAnnotate Text ArrowPath TutorialPath TutorialTransformations TutorialTransformations TutorialAxis scalesAxis scalesAxis TicksAxis TicksSpecifying colorsSpecifying colorsChoosing ColormapsChoosing Colormaps", "doc_id": "e775d19f-6c3b-409d-8d4a-cdccb2e24615", "embedding": null, "doc_hash": "d3ca62f8ad6b93bf4b43998b57c51cfb3480dd7b0523179078eb4dfb9ab6eb25", "extra_info": null, "node_info": {"start": 2811, "end": 3968, "_node_type": "1"}, "relationships": {"1": "b2fd04aa-de91-4e14-8db7-466323a29c73", "2": "6cfb47e0-4230-4d4d-832d-e76254c22bcd"}}, "__type__": "1"}, "751fb11c-594e-49e5-a441-45ada15bf970": {"__data__": {"text": "\u3010Name\u3011matplotlib\u3010Chapter\u3011matplotlib.axes\u3010Section\u3011matplotlib.axes.Axes.set_ylim\u3010Content\u3011matplotlib.axes.Axes.set_ylim#Axes.set_ylim(bottom=None,top=None,*,emit=True,auto=False,ymin=None,ymax=None)[source]#Set the y-axis view limits.Parameters:bottomfloat, optionalThe bottom ylim in data coordinates. PassingNoneleaves the\nlimit unchanged.The bottom and top ylims may also be passed as the tuple\n(bottom,top) as the first positional argument (or as\nthebottomkeyword argument).topfloat, optionalThe top ylim in data coordinates. PassingNoneleaves the\nlimit unchanged.emitbool, default: TrueWhether to notify observers of limit change.autobool or None, default: FalseWhether to turn on autoscaling of the y-axis.Trueturns on,Falseturns off,Noneleaves unchanged.ymin, ymaxfloat, optionalThey are equivalent to bottom and top respectively, and it is an\nerror to pass bothyminandbottomorymaxandtop.Returns:bottom, top(float, float)The new y-axis limits in data coordinates.See alsoget_ylimset_ybound,get_yboundinvert_yaxis,yaxis_invertedNotesThebottomvalue may be greater than thetopvalue, in which\ncase the y-axis values will decrease frombottomtotop.Examples>>>set_ylim(bottom,top)>>>set_ylim((bottom,top))>>>bottom,top=set_ylim(bottom,top)One limit may be left unchanged.>>>set_ylim(top=top_lim)Limits may be passed in reverse order to flip the direction of\nthe y-axis. For example, supposeyrepresents depth of the\nocean in m. The y-axis limits might be set like the following\nso 5000 m depth is at the bottom of the plot and the surface,\n0 m, is at the top.>>>set_ylim(5000,0)Examples usingmatplotlib.axes.Axes.set_ylim#Grouped bar chart with labelsGrouped bar chart with labelsBroken BarhBroken BarhEventCollection DemoEventCollection DemoHat graphHat graphMarkevery DemoMarkevery DemoPower spectral density (PSD)Power spectral density (PSD)Contouring the solution space of optimizationsContouring the solution space of optimizationsImage nonuniformImage nonuniformpcolormesh grids and shadingpcolormesh grids and shadingAxes DemoAxes DemoBroken AxisBroken AxisBoxplotsBoxplotsAlign y-labelsAlign y-labelsAnnotate TransformAnnotate TransformAnnotating a plotAnnotating a plotAnnotationBbox demoAnnotationBbox demoUsing a text as a PathUsing a text as a PathLine, Poly and RegularPoly Collection with autoscalingLine, Poly and RegularPoly Collection with autoscalingMmh Donuts!!!Mmh Donuts!!!Plotting multiple lines with a LineCollectionPlotting multiple lines with a LineCollectionInset locator demo 2Inset locator demo 2Parasite Simple2Parasite Simple2Simple Axis PadSimple Axis PadSimple AxislineSimple AxislineAnatomy of a figureAnatomy of a figureIntegral as the area under a curveIntegral as the area under a curveXKCDXKCDDecayDecayAnimated histogramAnimated histogramRain simulationRain simulationMATPLOTLIB UNCHAINEDMATPLOTLIB UNCHAINEDData browserData browserPath editorPath editorPick event demo 2Pick event demo 2Poly EditorPoly EditorZoom WindowZoom WindowCustom projectionCustom projectionSVG Filter LineSVG Filter LineTickedStroke patheffectTickedStroke patheffectPlot 2D data on 3D plotPlot 2D data on 3D plotDraw flat objects in 3D plotDraw flat objects in 3D plotText annotations in 3DText annotations in 3DAsinh DemoAsinh DemoLoglog AspectLoglog AspectLog DemoLog DemoIshikawa DiagramIshikawa DiagramSkewT-logP diagram: using transforms and custom projectionsSkewT-logP diagram: using transforms and custom", "doc_id": "751fb11c-594e-49e5-a441-45ada15bf970", "embedding": null, "doc_hash": "6b4b5ed5e14088ad356886f8064d7c3ee87b5602e8d93955fbd98b1c0909da0f", "extra_info": null, "node_info": {"start": 0, "end": 3422, "_node_type": "1"}, "relationships": {"1": "b557c7cf-654e-41eb-977c-9f5585160233", "3": "8aad5cf6-0e45-484a-a4fe-67d2bd260ace"}}, "__type__": "1"}, "8aad5cf6-0e45-484a-a4fe-67d2bd260ace": {"__data__": {"text": "histogramAnimated histogramRain simulationRain simulationMATPLOTLIB UNCHAINEDMATPLOTLIB UNCHAINEDData browserData browserPath editorPath editorPick event demo 2Pick event demo 2Poly EditorPoly EditorZoom WindowZoom WindowCustom projectionCustom projectionSVG Filter LineSVG Filter LineTickedStroke patheffectTickedStroke patheffectPlot 2D data on 3D plotPlot 2D data on 3D plotDraw flat objects in 3D plotDraw flat objects in 3D plotText annotations in 3DText annotations in 3DAsinh DemoAsinh DemoLoglog AspectLoglog AspectLog DemoLog DemoIshikawa DiagramIshikawa DiagramSkewT-logP diagram: using transforms and custom projectionsSkewT-logP diagram: using transforms and custom projectionsAnnotation with unitsAnnotation with unitsArtist testsArtist testsAnnotated cursorAnnotated cursorCursorCursorSpan SelectorSpan SelectorAnnotate Text ArrowAnnotate Text ArrowQuick start guideQuick start guidePath TutorialPath TutorialTransformations TutorialTransformations TutorialAxis TicksAxis TicksPlacing ColorbarsPlacing ColorbarsSpecifying colorsSpecifying colorsChoosing ColormapsChoosing ColormapsAnnotationsAnnotations", "doc_id": "8aad5cf6-0e45-484a-a4fe-67d2bd260ace", "embedding": null, "doc_hash": "d115ab5c591def79b559c328fa46555f541dfa8eb99cf91120b88d56fb2fab46", "extra_info": null, "node_info": {"start": 2745, "end": 3862, "_node_type": "1"}, "relationships": {"1": "b557c7cf-654e-41eb-977c-9f5585160233", "2": "751fb11c-594e-49e5-a441-45ada15bf970"}}, "__type__": "1"}, "4edee55a-e251-41bf-807d-8301ac52f42c": {"__data__": {"text": "\u3010Name\u3011matplotlib\u3010Chapter\u3011matplotlib.axes\u3010Section\u3011matplotlib.axes.Axes.set_xticks\u3010Content\u3011matplotlib.axes.Axes.set_xticks#Axes.set_xticks(ticks,labels=None,*,minor=False,**kwargs)[source]#Set the xaxis' tick locations and optionally tick labels.If necessary, the view limits of the Axis are expanded so that all\ngiven ticks are visible.Parameters:ticks1D array-likeArray of tick locations. The axisLocatoris replaced by aFixedLocator.The values may be either floats or in axis units.Pass an empty list to remove all ticks:set_xticks([])Some tick formatters will not label arbitrary tick positions;\ne.g. log formatters only label decade ticks by default. In\nsuch a case you can set a formatter explicitly on the axis\nusingAxis.set_major_formatteror provide formattedlabelsyourself.labelslist of str, optionalTick labels for each location inticks.labelsmust be of the same\nlength asticks. If not set, the labels are generate using the axis\ntickFormatter.minorbool, default: FalseIfFalse, set the major ticks; ifTrue, the minor ticks.**kwargsTextproperties for the labels. Using these is only allowed if\nyou passlabels. In other cases, please usetick_params.NotesThe mandatory expansion of the view limits is an intentional design\nchoice to prevent the surprise of a non-visible tick. If you need\nother limits, you should set the limits explicitly after setting the\nticks.Examples usingmatplotlib.axes.Axes.set_xticks#Grouped bar chart with labelsGrouped bar chart with labelsHat graphHat graphPower spectral density (PSD)Power spectral density (PSD)Creating annotated heatmapsCreating annotated heatmapsBox plot vs. violin plot comparisonBox plot vs. violin plot comparisonViolin plot customizationViolin plot customizationProducing multiple histograms side by sideProducing multiple histograms side by sideMultilineMultilineRendering math equations using TeXRendering math equations using TeXggplot style sheetggplot style sheetScatter Histogram (Locatable Axes)Scatter Histogram (Locatable Axes)Simple Axisline4Simple Axisline4Ticklabel alignmentTicklabel alignmentTicklabel directionTicklabel directionIntegral as the area under a curveIntegral as the area under a curveShaded & power normalized renderingShaded & power normalized renderingXKCDXKCDRain simulationRain simulationMATPLOTLIB UNCHAINEDMATPLOTLIB UNCHAINEDLog BarLog BarGroup barchart with unitsGroup barchart with unitsThe Lifecycle of a PlotThe Lifecycle of a PlotAxis TicksAxis Ticks", "doc_id": "4edee55a-e251-41bf-807d-8301ac52f42c", "embedding": null, "doc_hash": "137cd1299ceffdb66f20c4d16353bf6940aaf93e3644faaad3f3717a0a60d81e", "extra_info": null, "node_info": {"start": 0, "end": 2448, "_node_type": "1"}, "relationships": {"1": "e0be1f3e-a951-43ac-a972-8e8241ab01a7"}}, "__type__": "1"}, "8fdb7719-906c-4f57-8809-909743ef995e": {"__data__": {"text": "\u3010Name\u3011matplotlib\u3010Chapter\u3011matplotlib.axes\u3010Section\u3011matplotlib.axes.Axes.set_yticks\u3010Content\u3011matplotlib.axes.Axes.set_yticks#Axes.set_yticks(ticks,labels=None,*,minor=False,**kwargs)[source]#Set the yaxis' tick locations and optionally tick labels.If necessary, the view limits of the Axis are expanded so that all\ngiven ticks are visible.Parameters:ticks1D array-likeArray of tick locations. The axisLocatoris replaced by aFixedLocator.The values may be either floats or in axis units.Pass an empty list to remove all ticks:set_yticks([])Some tick formatters will not label arbitrary tick positions;\ne.g. log formatters only label decade ticks by default. In\nsuch a case you can set a formatter explicitly on the axis\nusingAxis.set_major_formatteror provide formattedlabelsyourself.labelslist of str, optionalTick labels for each location inticks.labelsmust be of the same\nlength asticks. If not set, the labels are generate using the axis\ntickFormatter.minorbool, default: FalseIfFalse, set the major ticks; ifTrue, the minor ticks.**kwargsTextproperties for the labels. Using these is only allowed if\nyou passlabels. In other cases, please usetick_params.NotesThe mandatory expansion of the view limits is an intentional design\nchoice to prevent the surprise of a non-visible tick. If you need\nother limits, you should set the limits explicitly after setting the\nticks.Examples usingmatplotlib.axes.Axes.set_yticks#Bar Label DemoBar Label DemoHorizontal bar chartHorizontal bar chartBroken BarhBroken BarhPower spectral density (PSD)Power spectral density (PSD)Creating annotated heatmapsCreating annotated heatmapsProgrammatically controlling subplot adjustmentProgrammatically controlling subplot adjustmentRendering math equations using TeXRendering math equations using TeXMake room for ylabel using axes_gridMake room for ylabel using axes_gridScatter Histogram (Locatable Axes)Scatter Histogram (Locatable Axes)Ticklabel alignmentTicklabel alignmentTicklabel directionTicklabel directionIntegral as the area under a curveIntegral as the area under a curveShaded & power normalized renderingShaded & power normalized renderingXKCDXKCDRain simulationRain simulationMATPLOTLIB UNCHAINEDMATPLOTLIB UNCHAINEDCreate 2D bar graphs in different planesCreate 2D bar graphs in different planesSkewT-logP diagram: using transforms and custom projectionsSkewT-logP diagram: using transforms and custom projectionsAxis TicksAxis Ticks", "doc_id": "8fdb7719-906c-4f57-8809-909743ef995e", "embedding": null, "doc_hash": "54d14a8ea22bb3167686e56b6c87e31fb25ef710017bbf2dc60046ae0254c892", "extra_info": null, "node_info": {"start": 0, "end": 2426, "_node_type": "1"}, "relationships": {"1": "864e8906-6aef-4edf-9dae-3489e5d98d37"}}, "__type__": "1"}, "f8be9173-016d-4d50-8382-5fbb28e64671": {"__data__": {"text": "\u3010Name\u3011matplotlib\u3010Chapter\u3011matplotlib.axes\u3010Section\u3011matplotlib.axes.Axes.set_xticklabels\u3010Content\u3011matplotlib.axes.Axes.set_xticklabels#Axes.set_xticklabels(labels,*,minor=False,fontdict=None,**kwargs)[source]#[Discouraged] Set the xaxis' tick labels with list of string labels.DiscouragedThe use of this method is discouraged, because of the dependency on\ntick positions. In most cases, you'll want to useAxes.set_[x/y/z]ticks(positions,labels)orAxes.set_xticksinstead.If you are using this method, you should always fix the tick\npositions before, e.g. by usingAxes.set_xticksor by explicitly\nsetting aFixedLocator. Otherwise, ticks are free to\nmove and the labels may end up in unexpected positions.Parameters:labelssequence of str or ofTextsTexts for labeling each tick location in the sequence set byAxes.set_xticks; the number of labels must match the number of\nlocations.minorboolIf True, set minor ticks instead of major ticks.fontdictdict, optionalDiscouragedThe use offontdictis discouraged. Parameters should be passed as\nindividual keyword arguments or using dictionary-unpackingset_ticklabels(...,**fontdict).A dictionary controlling the appearance of the ticklabels.\nThe defaultfontdictis:{'fontsize':rcParams['axes.titlesize'],'fontweight':rcParams['axes.titleweight'],'verticalalignment':'baseline','horizontalalignment':loc}**kwargsText properties.WarningThis only sets the properties of the current ticks.\nTicks are not guaranteed to be persistent. Various operations\ncan create, delete and modify the Tick instances. There is an\nimminent risk that these settings can get lost if you work on\nthe figure further (including also panning/zooming on a\ndisplayed figure).Useset_tick_paramsinstead if possible.Returns:list ofTextsFor each tick, includestick.label1if it is visible, thentick.label2if it is visible, in that order.Examples usingmatplotlib.axes.Axes.set_xticklabels#Creating annotated heatmapsCreating annotated heatmapsManaging multiple figures in pyplotManaging multiple figures in pyplotBoxplotsBoxplotsRendering math equations using TeXRendering math equations using TeXXKCDXKCDConstrained Layout GuideConstrained Layout Guide", "doc_id": "f8be9173-016d-4d50-8382-5fbb28e64671", "embedding": null, "doc_hash": "92ab547aac4a251c700b6f12915c6f615d50337fbf6f64cd86781bd9046360f9", "extra_info": null, "node_info": {"start": 0, "end": 2150, "_node_type": "1"}, "relationships": {"1": "8bebf884-4c80-41ee-b53e-3580146b985f"}}, "__type__": "1"}, "1218c1f4-2a8b-4805-ac63-ad0ac92181ef": {"__data__": {"text": "\u3010Name\u3011matplotlib\u3010Chapter\u3011matplotlib.axes\u3010Section\u3011matplotlib.axes.Axes.set_yticklabels\u3010Content\u3011matplotlib.axes.Axes.set_yticklabels#Axes.set_yticklabels(labels,*,minor=False,fontdict=None,**kwargs)[source]#[Discouraged] Set the yaxis' tick labels with list of string labels.DiscouragedThe use of this method is discouraged, because of the dependency on\ntick positions. In most cases, you'll want to useAxes.set_[x/y/z]ticks(positions,labels)orAxes.set_yticksinstead.If you are using this method, you should always fix the tick\npositions before, e.g. by usingAxes.set_yticksor by explicitly\nsetting aFixedLocator. Otherwise, ticks are free to\nmove and the labels may end up in unexpected positions.Parameters:labelssequence of str or ofTextsTexts for labeling each tick location in the sequence set byAxes.set_yticks; the number of labels must match the number of\nlocations.minorboolIf True, set minor ticks instead of major ticks.fontdictdict, optionalDiscouragedThe use offontdictis discouraged. Parameters should be passed as\nindividual keyword arguments or using dictionary-unpackingset_ticklabels(...,**fontdict).A dictionary controlling the appearance of the ticklabels.\nThe defaultfontdictis:{'fontsize':rcParams['axes.titlesize'],'fontweight':rcParams['axes.titleweight'],'verticalalignment':'baseline','horizontalalignment':loc}**kwargsText properties.WarningThis only sets the properties of the current ticks.\nTicks are not guaranteed to be persistent. Various operations\ncan create, delete and modify the Tick instances. There is an\nimminent risk that these settings can get lost if you work on\nthe figure further (including also panning/zooming on a\ndisplayed figure).Useset_tick_paramsinstead if possible.Returns:list ofTextsFor each tick, includestick.label1if it is visible, thentick.label2if it is visible, in that order.Examples usingmatplotlib.axes.Axes.set_yticklabels#Artist customization in box plotsArtist customization in box plotsBoxplot drawer functionBoxplot drawer functionViolin plot basicsViolin plot basicsRendering math equations using TeXRendering math equations using TeXConstrained Layout GuideConstrained Layout Guide", "doc_id": "1218c1f4-2a8b-4805-ac63-ad0ac92181ef", "embedding": null, "doc_hash": "0fc887cb51ff0f79d929c457e0fb280922bad165b053ee5f2f52744f7cb3913b", "extra_info": null, "node_info": {"start": 0, "end": 2150, "_node_type": "1"}, "relationships": {"1": "d738f519-dddf-46fb-9f51-0e381e11941d"}}, "__type__": "1"}, "2ee41245-135a-41ab-9c6c-9376012428f7": {"__data__": {"text": "\u3010Name\u3011matplotlib\u3010Chapter\u3011matplotlib.axes\u3010Section\u3011matplotlib.axes.Axes.annotate\u3010Content\u3011matplotlib.axes.Axes.annotate#Axes.annotate(text,xy,xytext=None,xycoords='data',textcoords=None,arrowprops=None,annotation_clip=None,**kwargs)[source]#Annotate the pointxywith texttext.In the simplest form, the text is placed atxy.Optionally, the text can be displayed in another positionxytext.\nAn arrow pointing from the text to the annotated pointxycan then\nbe added by definingarrowprops.Parameters:textstrThe text of the annotation.xy(float, float)The point(x, y)to annotate. The coordinate system is determined\nbyxycoords.xytext(float, float), default:xyThe position(x, y)to place the text at. The coordinate system\nis determined bytextcoords.xycoordssingle or two-tuple of str orArtistorTransformor callable, default: 'data'The coordinate system thatxyis given in. The following types\nof values are supported:One of the following strings:ValueDescription'figure points'Points from the lower left of the figure'figure pixels'Pixels from the lower left of the figure'figure fraction'Fraction of figure from lower left'subfigure points'Points from the lower left of the subfigure'subfigure pixels'Pixels from the lower left of the subfigure'subfigure fraction'Fraction of subfigure from lower left'axes points'Points from lower left corner of axes'axes pixels'Pixels from lower left corner of axes'axes fraction'Fraction of axes from lower left'data'Use the coordinate system of the object\nbeing annotated (default)'polar'(theta, r)if not native 'data'\ncoordinatesNote that 'subfigure pixels' and 'figure pixels' are the same\nfor the parent figure, so users who want code that is usable in\na subfigure can use 'subfigure pixels'.AnArtist:xyis interpreted as a fraction of the artist'sBbox. E.g.(0, 0)would be the lower\nleft corner of the bounding box and(0.5, 1)would be the\ncenter top of the bounding box.ATransformto transformxyto screen coordinates.A function with one of the following signatures:deftransform(renderer)->Bboxdeftransform(renderer)->Transformwhererendereris aRendererBasesubclass.The result of the function is interpreted like theArtistandTransformcases above.A tuple(xcoords, ycoords)specifying separate coordinate\nsystems forxandy.xcoordsandycoordsmust each be\nof one of the above described types.SeeAdvanced annotationfor more details.textcoordssingle or two-tuple of str orArtistorTransformor callable, default: value ofxycoordsThe coordinate system thatxytextis given in.Allxycoordsvalues are valid as well as the following strings:ValueDescription'offset points'Offset, in points, from thexyvalue'offset pixels'Offset, in pixels, from thexyvalue'offset fontsize'Offset, relative to fontsize, from thexyvaluearrowpropsdict, optionalThe properties used to draw aFancyArrowPatcharrow between the\npositionsxyandxytext. Defaults to None, i.e. no arrow is\ndrawn.For historical reasons there are two different ways to specify\narrows, \"simple\" and \"fancy\":Simple arrow:Ifarrowpropsdoes not contain the key 'arrowstyle' the\nallowed keys are:KeyDescriptionwidthThe width of the arrow in pointsheadwidthThe width of the base of the arrow head in pointsheadlengthThe length of the arrow head in pointsshrinkFraction of total length to shrink from both ends?AnyFancyArrowPatchpropertyThe arrow is attached to the edge of the text box, the exact\nposition (corners or centers) depending on where it's pointing to.Fancy arrow:This is used if 'arrowstyle' is provided in thearrowprops.Valid keys are the followingFancyArrowPatchparameters:KeyDescriptionarrowstyleThe arrow styleconnectionstyleThe connection stylerelposSee below; default is (0.5, 0.5)patchADefault is", "doc_id": "2ee41245-135a-41ab-9c6c-9376012428f7", "embedding": null, "doc_hash": "f9ce70f7aba74e38a85531c76823ff5857e740fc018e0476f3342669113a88ca", "extra_info": null, "node_info": {"start": 0, "end": 3666, "_node_type": "1"}, "relationships": {"1": "1881f836-9aa5-4557-ae0e-227bdca24188", "3": "abd62b81-7c3c-4455-bfcf-5963bc39e844"}}, "__type__": "1"}, "abd62b81-7c3c-4455-bfcf-5963bc39e844": {"__data__": {"text": "there are two different ways to specify\narrows, \"simple\" and \"fancy\":Simple arrow:Ifarrowpropsdoes not contain the key 'arrowstyle' the\nallowed keys are:KeyDescriptionwidthThe width of the arrow in pointsheadwidthThe width of the base of the arrow head in pointsheadlengthThe length of the arrow head in pointsshrinkFraction of total length to shrink from both ends?AnyFancyArrowPatchpropertyThe arrow is attached to the edge of the text box, the exact\nposition (corners or centers) depending on where it's pointing to.Fancy arrow:This is used if 'arrowstyle' is provided in thearrowprops.Valid keys are the followingFancyArrowPatchparameters:KeyDescriptionarrowstyleThe arrow styleconnectionstyleThe connection stylerelposSee below; default is (0.5, 0.5)patchADefault is bounding box of the textpatchBDefault is NoneshrinkADefault is 2 pointsshrinkBDefault is 2 pointsmutation_scaleDefault is text size (in points)mutation_aspectDefault is 1?AnyFancyArrowPatchpropertyThe exact starting point position of the arrow is defined byrelpos. It's a tuple of relative coordinates of the text box,\nwhere (0, 0) is the lower left corner and (1, 1) is the upper\nright corner. Values <0 and >1 are supported and specify points\noutside the text box. By default (0.5, 0.5), so the starting point\nis centered in the text box.annotation_clipbool or None, default: NoneWhether to clip (i.e. not draw) the annotation when the annotation\npointxyis outside the axes area.IfTrue, the annotation will be clipped whenxyis outside\nthe axes.IfFalse, the annotation will always be drawn.IfNone, the annotation will be clipped whenxyis outside\nthe axes andxycoordsis 'data'.**kwargsAdditional kwargs are passed toText.Returns:AnnotationSee alsoAdvanced annotationExamples usingmatplotlib.axes.Axes.annotate#Broken BarhBroken BarhHat graphHat graphCreating a timeline with lines, dates, and textCreating a timeline with lines, dates, and textCombining two subplots using subplots and GridSpecCombining two subplots using subplots and GridSpecLabeling a pie and a donutLabeling a pie and a donutScale invariant angle labelScale invariant angle labelAnnotate TransformAnnotate TransformAnnotating a plotAnnotating a plotAnnotating PlotsAnnotating PlotsAnnotation PolarAnnotation PolarAnnotation arrow style referenceAnnotation arrow style referenceConcatenating text objects with different propertiesConcatenating text objects with different propertiesRendering math equations using TeXRendering math equations using TeXText CommandsText CommandsMmh Donuts!!!Mmh Donuts!!!Simple Axis PadSimple Axis PadXKCDXKCDPatheffect DemoPatheffect DemoIshikawa DiagramIshikawa DiagramAnnotation with unitsAnnotation with unitsAnnotate ExplainAnnotate ExplainConnection styles for annotationsConnection styles for annotationsSimple Annotate01Simple Annotate01Quick start guideQuick start guideFaster rendering by using blittingFaster rendering by using blittingTransformations TutorialTransformations TutorialText in MatplotlibText in MatplotlibAnnotationsAnnotations", "doc_id": "abd62b81-7c3c-4455-bfcf-5963bc39e844", "embedding": null, "doc_hash": "1e2774359ab669f9718640ec031f3ed23b651050aa3fd91f5e8e20c8bc6ac345", "extra_info": null, "node_info": {"start": 2895, "end": 5921, "_node_type": "1"}, "relationships": {"1": "1881f836-9aa5-4557-ae0e-227bdca24188", "2": "2ee41245-135a-41ab-9c6c-9376012428f7"}}, "__type__": "1"}, "24c896e7-5182-4910-89bc-65bc2ec89c43": {"__data__": {"text": "\u3010Name\u3011matplotlib\u3010Chapter\u3011matplotlib.axes\u3010Section\u3011matplotlib.axes.Axes.errorbar\u3010Content\u3011matplotlib.axes.Axes.errorbar#Axes.errorbar(x,y,yerr=None,xerr=None,fmt='',ecolor=None,elinewidth=None,capsize=None,barsabove=False,lolims=False,uplims=False,xlolims=False,xuplims=False,errorevery=1,capthick=None,*,data=None,**kwargs)[source]#Plot y versus x as lines and/or markers with attached errorbars.x,ydefine the data locations,xerr,yerrdefine the errorbar\nsizes. By default, this draws the data markers/lines as well as the\nerrorbars. Use fmt='none' to draw errorbars without any data markers.New in version 3.7:Caps and error lines are drawn in polar coordinates on polar plots.Parameters:x, yfloat or array-likeThe data positions.xerr, yerrfloat or array-like, shape(N,) or shape(2, N), optionalThe errorbar sizes:scalar: Symmetric +/- values for all data points.shape(N,): Symmetric +/-values for each data point.shape(2, N): Separate - and + values for each bar. First row\ncontains the lower errors, the second row contains the upper\nerrors.None: No errorbar.All values must be >= 0.SeeDifferent ways of specifying error barsfor an example on the usage ofxerrandyerr.fmtstr, default: ''The format for the data points / data lines. Seeplotfor\ndetails.Use 'none' (case-insensitive) to plot errorbars without any data\nmarkers.ecolorcolor, default: NoneThe color of the errorbar lines. If None, use the color of the\nline connecting the markers.elinewidthfloat, default: NoneThe linewidth of the errorbar lines. If None, the linewidth of\nthe current style is used.capsizefloat, default:rcParams[\"errorbar.capsize\"](default:0.0)The length of the error bar caps in points.capthickfloat, default: NoneAn alias to the keyword argumentmarkeredgewidth(a.k.a.mew).\nThis setting is a more sensible name for the property that\ncontrols the thickness of the error bar cap in points. For\nbackwards compatibility, ifmewormarkeredgewidthare given,\nthen they will over-ridecapthick. This may change in future\nreleases.barsabovebool, default: FalseIf True, will plot the errorbars above the plot\nsymbols. Default is below.lolims, uplims, xlolims, xuplimsbool or array-like, default: FalseThese arguments can be used to indicate that a value gives only\nupper/lower limits. In that case a caret symbol is used to\nindicate this.lims-arguments may be scalars, or array-likes of\nthe same length asxerrandyerr. To use limits with inverted\naxes,set_xlimorset_ylimmust be called beforeerrorbar(). Note the tricky parameter names: setting e.g.lolimsto True means that the y-value is alowerlimit of the\nTrue value, so, only anupward-pointing arrow will be drawn!erroreveryint or (int, int), default: 1draws error bars on a subset of the data.errorevery=N draws\nerror bars on the points (x[::N], y[::N]).errorevery=(start, N) draws error bars on the points\n(x[start::N], y[start::N]). e.g. errorevery=(6, 3)\nadds error bars to the data at (x[6], x[9], x[12], x[15], ...).\nUsed to avoid overlapping error bars when two series share x-axis\nvalues.Returns:ErrorbarContainerThe container contains:plotline:Line2Dinstance of x, y plot markers\nand/or line.caplines: A tuple ofLine2Dinstances of the error\nbar caps.barlinecols: A tuple ofLineCollectionwith the horizontal and\nvertical error", "doc_id": "24c896e7-5182-4910-89bc-65bc2ec89c43", "embedding": null, "doc_hash": "70df9b8c3282b30a562c27422ab7991825429c65d9189755506e889db19cf27b", "extra_info": null, "node_info": {"start": 0, "end": 3251, "_node_type": "1"}, "relationships": {"1": "6770dc41-4100-4a9a-899a-51c1d709f03d", "3": "b40aa721-8fe5-42b7-898d-ba9d7435f3ed"}}, "__type__": "1"}, "b40aa721-8fe5-42b7-898d-ba9d7435f3ed": {"__data__": {"text": "default: 1draws error bars on a subset of the data.errorevery=N draws\nerror bars on the points (x[::N], y[::N]).errorevery=(start, N) draws error bars on the points\n(x[start::N], y[start::N]). e.g. errorevery=(6, 3)\nadds error bars to the data at (x[6], x[9], x[12], x[15], ...).\nUsed to avoid overlapping error bars when two series share x-axis\nvalues.Returns:ErrorbarContainerThe container contains:plotline:Line2Dinstance of x, y plot markers\nand/or line.caplines: A tuple ofLine2Dinstances of the error\nbar caps.barlinecols: A tuple ofLineCollectionwith the horizontal and\nvertical error ranges.Other Parameters:dataindexable object, optionalIf given, the following parameters also accept a strings, which is\ninterpreted asdata[s](unless this raises an exception):x,y,xerr,yerr**kwargsAll other keyword arguments are passed on to theplotcall\ndrawing the markers. For example, this code makes big red squares\nwith thick green edges:x,y,yerr=rand(3,10)errorbar(x,y,yerr,marker='s',mfc='red',mec='green',ms=20,mew=4)wheremfc,mec,msandmeware aliases for the longer\nproperty names,markerfacecolor,markeredgecolor,markersizeandmarkeredgewidth.Valid kwargs for the marker properties are:dashesdash_capstyledash_joinstyledrawstylefillstylelinestylemarkermarkeredgecolormarkeredgewidthmarkerfacecolormarkerfacecoloraltmarkersizemarkeverysolid_capstylesolid_joinstyleRefer to the correspondingLine2Dproperty for more details:PropertyDescriptionagg_filtera filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array and two offsets from the bottom left corner of the imagealphascalar or Noneanimatedboolantialiasedor aaboolclip_boxBboxBaseor Noneclip_onboolclip_pathPatch or (Path, Transform) or Nonecoloror ccolordash_capstyleCapStyleor {'butt', 'projecting', 'round'}dash_joinstyleJoinStyleor {'miter', 'round', 'bevel'}dashessequence of floats (on/off ink in points) or (None, None)data(2, N) array or two 1D arraysdrawstyleor ds{'default', 'steps', 'steps-pre', 'steps-mid', 'steps-post'}, default: 'default'figureFigurefillstyle{'full', 'left', 'right', 'bottom', 'top', 'none'}gapcolorcolor or Nonegidstrin_layoutboollabelobjectlinestyleor ls{'-', '--', '-.', ':', '', (offset, on-off-seq), ...}linewidthor lwfloatmarkermarker style string,PathorMarkerStylemarkeredgecoloror meccolormarkeredgewidthor mewfloatmarkerfacecoloror mfccolormarkerfacecoloraltor mfcaltcolormarkersizeor msfloatmarkeveryNone or int or (int, int) or slice or list[int] or float or (float, float) or list[bool]mouseoverboolpath_effectslist ofAbstractPathEffectpickerfloat or callable[[Artist, Event], tuple[bool, dict]]pickradiusfloatrasterizedboolsketch_params(scale: float, length: float, randomness: float)snapbool or Nonesolid_capstyleCapStyleor {'butt', 'projecting', 'round'}solid_joinstyleJoinStyleor {'miter', 'round', 'bevel'}transformunknownurlstrvisibleboolxdata1D arrayydata1D arrayzorderfloatExamples usingmatplotlib.axes.Axes.errorbar#Errorbar limit selectionErrorbar limit selectionErrorbar subsamplingErrorbar subsamplingErrorbar functionErrorbar functionDifferent ways of specifying error barsDifferent ways of specifying error barsIncluding upper and lower limits in error barsIncluding upper and lower limits in error barsCreating boxes from error", "doc_id": "b40aa721-8fe5-42b7-898d-ba9d7435f3ed", "embedding": null, "doc_hash": "b56b43e99f585e658aba3373ec762615028c24ee3c165eb000dec49060c800dd", "extra_info": null, "node_info": {"start": 2731, "end": 6011, "_node_type": "1"}, "relationships": {"1": "6770dc41-4100-4a9a-899a-51c1d709f03d", "2": "24c896e7-5182-4910-89bc-65bc2ec89c43", "3": "63991799-ff97-441b-8538-6b9c4a496958"}}, "__type__": "1"}, "63991799-ff97-441b-8538-6b9c4a496958": {"__data__": {"text": "float) or list[bool]mouseoverboolpath_effectslist ofAbstractPathEffectpickerfloat or callable[[Artist, Event], tuple[bool, dict]]pickradiusfloatrasterizedboolsketch_params(scale: float, length: float, randomness: float)snapbool or Nonesolid_capstyleCapStyleor {'butt', 'projecting', 'round'}solid_joinstyleJoinStyleor {'miter', 'round', 'bevel'}transformunknownurlstrvisibleboolxdata1D arrayydata1D arrayzorderfloatExamples usingmatplotlib.axes.Axes.errorbar#Errorbar limit selectionErrorbar limit selectionErrorbar subsamplingErrorbar subsamplingErrorbar functionErrorbar functionDifferent ways of specifying error barsDifferent ways of specifying error barsIncluding upper and lower limits in error barsIncluding upper and lower limits in error barsCreating boxes from error bars using PatchCollectionCreating boxes from error bars using PatchCollectionError bar rendering on polar axisError bar rendering on polar axisLegend DemoLegend DemoParasite Simple2Parasite Simple23D errorbars3D errorbarsLog DemoLog Demoerrorbar(x, y, yerr, xerr)errorbar(x, y, yerr, xerr)", "doc_id": "63991799-ff97-441b-8538-6b9c4a496958", "embedding": null, "doc_hash": "e57e634a9ea243ca78e5bcc394a04d97dd8f026db5a4ce9abd9f48e62fa3eac6", "extra_info": null, "node_info": {"start": 5756, "end": 6823, "_node_type": "1"}, "relationships": {"1": "6770dc41-4100-4a9a-899a-51c1d709f03d", "2": "b40aa721-8fe5-42b7-898d-ba9d7435f3ed"}}, "__type__": "1"}, "13f0d433-b2e4-4c7b-8249-0fa93266632e": {"__data__": {"text": "\u3010Name\u3011matplotlib\u3010Chapter\u3011matplotlib.axes\u3010Section\u3011matplotlib.axes.Axes.boxplot\u3010Content\u3011matplotlib.axes.Axes.boxplot#Axes.boxplot(x,notch=None,sym=None,vert=None,whis=None,positions=None,widths=None,patch_artist=None,bootstrap=None,usermedians=None,conf_intervals=None,meanline=None,showmeans=None,showcaps=None,showbox=None,showfliers=None,boxprops=None,labels=None,flierprops=None,medianprops=None,meanprops=None,capprops=None,whiskerprops=None,manage_ticks=True,autorange=False,zorder=None,capwidths=None,*,data=None)[source]#Draw a box and whisker plot.The box extends from the first quartile (Q1) to the third\nquartile (Q3) of the data, with a line at the median.\nThe whiskers extend from the box to the farthest data point\nlying within 1.5x the inter-quartile range (IQR) from the box.\nFlier points are those past the end of the whiskers.\nSeehttps://en.wikipedia.org/wiki/Box_plotfor reference.Q1-1.5IQR   Q1   median  Q3   Q3+1.5IQR\n                  |-----:-----|\n  o      |--------|     :     |--------|    o  o\n                  |-----:-----|\nflier             <----------->            fliers\n                       IQRParameters:xArray or a sequence of vectors.The input data. If a 2D array, a boxplot is drawn for each column\ninx. If a sequence of 1D arrays, a boxplot is drawn for each\narray inx.notchbool, default: FalseWhether to draw a notched boxplot (True), or a rectangular\nboxplot (False). The notches represent the confidence interval\n(CI) around the median. The documentation forbootstrapdescribes how the locations of the notches are computed by\ndefault, but their locations may also be overridden by setting theconf_intervalsparameter.NoteIn cases where the values of the CI are less than the\nlower quartile or greater than the upper quartile, the\nnotches will extend beyond the box, giving it a\ndistinctive \"flipped\" appearance. This is expected\nbehavior and consistent with other statistical\nvisualization packages.symstr, optionalThe default symbol for flier points. An empty string ('') hides\nthe fliers. IfNone, then the fliers default to 'b+'. More\ncontrol is provided by theflierpropsparameter.vertbool, default: TrueIfTrue, draws vertical boxes.\nIfFalse, draw horizontal boxes.whisfloat or (float, float), default: 1.5The position of the whiskers.If a float, the lower whisker is at the lowest datum aboveQ1-whis*(Q3-Q1), and the upper whisker at the highest datum\nbelowQ3+whis*(Q3-Q1), where Q1 and Q3 are the first and\nthird quartiles. The default value ofwhis=1.5corresponds\nto Tukey's original definition of boxplots.If a pair of floats, they indicate the percentiles at which to\ndraw the whiskers (e.g., (5, 95)). In particular, setting this to\n(0, 100) results in whiskers covering the whole range of the data.In the edge case whereQ1==Q3,whisis automatically set\nto (0, 100) (cover the whole range of the data) ifautorangeis\nTrue.Beyond the whiskers, data are considered outliers and are plotted\nas individual points.bootstrapint, optionalSpecifies whether to bootstrap the", "doc_id": "13f0d433-b2e4-4c7b-8249-0fa93266632e", "embedding": null, "doc_hash": "28a06872a1c0ad24586c23a6767142892a12cf07ea305a014aeb7b8b7f74d08c", "extra_info": null, "node_info": {"start": 0, "end": 3010, "_node_type": "1"}, "relationships": {"1": "abd3c765-a596-45df-9c44-95c9ee362e25", "3": "4b68a6b8-deaf-47ff-b952-46ed8c9981aa"}}, "__type__": "1"}, "4b68a6b8-deaf-47ff-b952-46ed8c9981aa": {"__data__": {"text": "upper whisker at the highest datum\nbelowQ3+whis*(Q3-Q1), where Q1 and Q3 are the first and\nthird quartiles. The default value ofwhis=1.5corresponds\nto Tukey's original definition of boxplots.If a pair of floats, they indicate the percentiles at which to\ndraw the whiskers (e.g., (5, 95)). In particular, setting this to\n(0, 100) results in whiskers covering the whole range of the data.In the edge case whereQ1==Q3,whisis automatically set\nto (0, 100) (cover the whole range of the data) ifautorangeis\nTrue.Beyond the whiskers, data are considered outliers and are plotted\nas individual points.bootstrapint, optionalSpecifies whether to bootstrap the confidence intervals\naround the median for notched boxplots. Ifbootstrapis\nNone, no bootstrapping is performed, and notches are\ncalculated using a Gaussian-based asymptotic approximation\n(see McGill, R., Tukey, J.W., and Larsen, W.A., 1978, and\nKendall and Stuart, 1967). Otherwise, bootstrap specifies\nthe number of times to bootstrap the median to determine its\n95% confidence intervals. Values between 1000 and 10000 are\nrecommended.usermedians1D array-like, optionalA 1D array-like of lengthlen(x). Each entry that is notNoneforces the value of the median for the corresponding\ndataset. For entries that areNone, the medians are computed\nby Matplotlib as normal.conf_intervalsarray-like, optionalA 2D array-like of shape(len(x),2). Each entry that is not\nNone forces the location of the corresponding notch (which is\nonly drawn ifnotchisTrue). For entries that areNone,\nthe notches are computed by the method specified by the other\nparameters (e.g.,bootstrap).positionsarray-like, optionalThe positions of the boxes. The ticks and limits are\nautomatically set to match the positions. Defaults torange(1,N+1)where N is the number of boxes to be drawn.widthsfloat or array-likeThe widths of the boxes. The default is 0.5, or0.15*(distancebetweenextremepositions), if that is smaller.patch_artistbool, default: FalseIfFalseproduces boxes with the Line2D artist. Otherwise,\nboxes are drawn with Patch artists.labelssequence, optionalLabels for each dataset (one per dataset).manage_ticksbool, default: TrueIf True, the tick locations and labels will be adjusted to match\nthe boxplot positions.autorangebool, default: FalseWhenTrueand the data are distributed such that the 25th and\n75th percentiles are equal,whisis set to (0, 100) such\nthat the whisker ends are at the minimum and maximum of the data.meanlinebool, default: FalseIfTrue(andshowmeansisTrue), will try to render the\nmean as a line spanning the full width of the box according tomeanprops(see below). Not recommended ifshownotchesis also\nTrue. Otherwise, means will be shown as points.zorderfloat, default:Line2D.zorder=2The zorder of the boxplot.Returns:dictA dictionary mapping each component of the boxplot to a list\nof theLine2Dinstances created. That dictionary has the\nfollowing keys (assuming vertical boxplots):boxes: the main body of the boxplot showing the\nquartiles and the median's confidence intervals if\nenabled.medians: horizontal lines at the median of each box.whiskers: the vertical lines extending to the most\nextreme, non-outlier data points.caps: the horizontal lines at the ends of the\nwhiskers.fliers: points representing data that extend beyond\nthe whiskers (fliers).means: points or lines representing the means.Other Parameters:showcapsbool, default: TrueShow the caps on the ends of whiskers.showboxbool, default: TrueShow the central box.showfliersbool, default: TrueShow the outliers beyond the caps.showmeansbool, default: FalseShow the arithmetic", "doc_id": "4b68a6b8-deaf-47ff-b952-46ed8c9981aa", "embedding": null, "doc_hash": "09411e633edac5f3f9c5f71c4bf13c123968025dc576b0b883ee8eba05cd1ba7", "extra_info": null, "node_info": {"start": 2448, "end": 6040, "_node_type": "1"}, "relationships": {"1": "abd3c765-a596-45df-9c44-95c9ee362e25", "2": "13f0d433-b2e4-4c7b-8249-0fa93266632e", "3": "bd4a8641-8e68-495a-aa17-da8b2637ebaf"}}, "__type__": "1"}, "bd4a8641-8e68-495a-aa17-da8b2637ebaf": {"__data__": {"text": "created. That dictionary has the\nfollowing keys (assuming vertical boxplots):boxes: the main body of the boxplot showing the\nquartiles and the median's confidence intervals if\nenabled.medians: horizontal lines at the median of each box.whiskers: the vertical lines extending to the most\nextreme, non-outlier data points.caps: the horizontal lines at the ends of the\nwhiskers.fliers: points representing data that extend beyond\nthe whiskers (fliers).means: points or lines representing the means.Other Parameters:showcapsbool, default: TrueShow the caps on the ends of whiskers.showboxbool, default: TrueShow the central box.showfliersbool, default: TrueShow the outliers beyond the caps.showmeansbool, default: FalseShow the arithmetic means.cappropsdict, default: NoneThe style of the caps.capwidthsfloat or array, default: NoneThe widths of the caps.boxpropsdict, default: NoneThe style of the box.whiskerpropsdict, default: NoneThe style of the whiskers.flierpropsdict, default: NoneThe style of the fliers.medianpropsdict, default: NoneThe style of the median.meanpropsdict, default: NoneThe style of the mean.dataindexable object, optionalIf given, all parameters also accept a strings, which is\ninterpreted asdata[s](unless this raises an exception).See alsoviolinplotDraw an estimate of the probability density function.Examples usingmatplotlib.axes.Axes.boxplot#Artist customization in box plotsArtist customization in box plotsBox plots with custom fill colorsBox plots with custom fill colorsBoxplotsBoxplotsBox plot vs. violin plot comparisonBox plot vs. violin plot comparisonboxplot(X)boxplot(X)", "doc_id": "bd4a8641-8e68-495a-aa17-da8b2637ebaf", "embedding": null, "doc_hash": "97692d66d52d88ee75eee29dc372a2964e9d33bb9b274dd35833695733a39767", "extra_info": null, "node_info": {"start": 5868, "end": 7476, "_node_type": "1"}, "relationships": {"1": "abd3c765-a596-45df-9c44-95c9ee362e25", "2": "4b68a6b8-deaf-47ff-b952-46ed8c9981aa"}}, "__type__": "1"}, "dd1bdbf3-523b-4b0a-be65-d69fe81bfefe": {"__data__": {"text": "\u3010Name\u3011matplotlib\u3010Chapter\u3011matplotlib.axes\u3010Section\u3011matplotlib.axes.Axes.contour\u3010Content\u3011matplotlib.axes.Axes.contour#Axes.contour(*args,data=None,**kwargs)[source]#Plot contour lines.Call signature:contour([X,Y,]Z,[levels],**kwargs)contourandcontourfdraw contour lines and filled contours,\nrespectively. Except as noted, function signatures and return values\nare the same for both versions.Parameters:X, Yarray-like, optionalThe coordinates of the values inZ.XandYmust both be 2D with the same shape asZ(e.g.\ncreated vianumpy.meshgrid), or they must both be 1-D such\nthatlen(X)==Nis the number of columns inZandlen(Y)==Mis the number of rows inZ.XandYmust both be ordered monotonically.If not given, they are assumed to be integer indices, i.e.X=range(N),Y=range(M).Z(M, N) array-likeThe height values over which the contour is drawn. Color-mapping is\ncontrolled bycmap,norm,vmin, andvmax.levelsint or array-like, optionalDetermines the number and positions of the contour lines / regions.If an intn, useMaxNLocator, which tries\nto automatically choose no more thann+1\"nice\" contour levels\nbetween minimum and maximum numeric values ofZ.If array-like, draw contour lines at the specified levels.\nThe values must be in increasing order.Returns:QuadContourSetOther Parameters:corner_maskbool, default:rcParams[\"contour.corner_mask\"](default:True)Enable/disable corner masking, which only has an effect ifZis\na masked array. IfFalse, any quad touching a masked point is\nmasked out. IfTrue, only the triangular corners of quads\nnearest those points are always masked out, other triangular\ncorners comprising three unmasked points are contoured as usual.colorscolor string or sequence of colors, optionalThe colors of the levels, i.e. the lines forcontourand the\nareas forcontourf.The sequence is cycled for the levels in ascending order. If the\nsequence is shorter than the number of levels, it's repeated.As a shortcut, single color strings may be used in place of\none-element lists, i.e.'red'instead of['red']to color\nall levels with the same color. This shortcut does only work for\ncolor strings, not for other ways of specifying colors.By default (valueNone), the colormap specified bycmapwill be used.alphafloat, default: 1The alpha blending value, between 0 (transparent) and 1 (opaque).cmapstr orColormap, default:rcParams[\"image.cmap\"](default:'viridis')The Colormap instance or registered colormap name used to map scalar data\nto colors.This parameter is ignored ifcolorsis set.normstr orNormalize, optionalThe normalization method used to scale scalar data to the [0, 1] range\nbefore mapping to colors usingcmap. By default, a linear scaling is\nused, mapping the lowest value to 0 and the highest to 1.If given, this can be one of the following:An instance ofNormalizeor one of its subclasses\n(seeColormap Normalization).A scale name, i.e. one of \"linear\", \"log\", \"symlog\", \"logit\", etc. For a\nlist of available scales, callmatplotlib.scale.get_scale_names().\nIn that case, a suitableNormalizesubclass is dynamically generated\nand instantiated.This parameter is ignored ifcolorsis set.vmin, vmaxfloat, optionalWhen using scalar data and no explicitnorm,vminandvmaxdefine\nthe data range that the colormap covers. By default, the colormap covers\nthe complete value range of the supplied data. It is an error to usevmin/vmaxwhen anorminstance is given (but using astrnormname together withvmin/vmaxis acceptable).Ifvminorvmaxare not given, the default color scaling is", "doc_id": "dd1bdbf3-523b-4b0a-be65-d69fe81bfefe", "embedding": null, "doc_hash": "77be605dc82ef6629489f315f16766f5799bb3de39283ecc41dab61258bb28da", "extra_info": null, "node_info": {"start": 0, "end": 3469, "_node_type": "1"}, "relationships": {"1": "c77e149d-83c9-412a-a38c-a78868c482ef", "3": "8c6e7a60-e6e4-4389-b2c5-5e32fbcc90fc"}}, "__type__": "1"}, "8c6e7a60-e6e4-4389-b2c5-5e32fbcc90fc": {"__data__": {"text": "Normalization).A scale name, i.e. one of \"linear\", \"log\", \"symlog\", \"logit\", etc. For a\nlist of available scales, callmatplotlib.scale.get_scale_names().\nIn that case, a suitableNormalizesubclass is dynamically generated\nand instantiated.This parameter is ignored ifcolorsis set.vmin, vmaxfloat, optionalWhen using scalar data and no explicitnorm,vminandvmaxdefine\nthe data range that the colormap covers. By default, the colormap covers\nthe complete value range of the supplied data. It is an error to usevmin/vmaxwhen anorminstance is given (but using astrnormname together withvmin/vmaxis acceptable).Ifvminorvmaxare not given, the default color scaling is based onlevels.This parameter is ignored ifcolorsis set.origin{None, 'upper', 'lower', 'image'}, default: NoneDetermines the orientation and exact position ofZby specifying\nthe position ofZ[0,0]. This is only relevant, ifX,Yare not given.None:Z[0,0]is at X=0, Y=0 in the lower left corner.'lower':Z[0,0]is at X=0.5, Y=0.5 in the lower left corner.'upper':Z[0,0]is at X=N+0.5, Y=0.5 in the upper left\ncorner.'image': Use the value fromrcParams[\"image.origin\"](default:'upper').extent(x0, x1, y0, y1), optionalIforiginis notNone, thenextentis interpreted as inimshow: it gives the outer pixel boundaries. In this case, the\nposition of Z[0, 0] is the center of the pixel, not a corner. IforiginisNone, then (x0,y0) is the position of Z[0, 0],\nand (x1,y1) is the position of Z[-1, -1].This argument is ignored ifXandYare specified in the call\nto contour.locatorticker.Locator subclass, optionalThe locator is used to determine the contour levels if they\nare not given explicitly vialevels.\nDefaults toMaxNLocator.extend{'neither', 'both', 'min', 'max'}, default: 'neither'Determines thecontourf-coloring of values that are outside thelevelsrange.If 'neither', values outside thelevelsrange are not colored.\nIf 'min', 'max' or 'both', color the values below, above or below\nand above thelevelsrange.Values belowmin(levels)and abovemax(levels)are mapped\nto the under/over values of theColormap. Note that most\ncolormaps do not have dedicated colors for these by default, so\nthat the over and under values are the edge values of the colormap.\nYou may want to set these values explicitly usingColormap.set_underandColormap.set_over.NoteAn existingQuadContourSetdoes not get notified if\nproperties of its colormap are changed. Therefore, an explicit\ncallQuadContourSet.changed()is needed after modifying the\ncolormap. The explicit call can be left out, if a colorbar is\nassigned to theQuadContourSetbecause it internally callsQuadContourSet.changed().Example:x=np.arange(1,10)y=x.reshape(-1,1)h=x*ycs=plt.contourf(h,levels=[10,30,50],colors=['#808080','#A0A0A0','#C0C0C0'],extend='both')cs.cmap.set_over('red')cs.cmap.set_under('blue')cs.changed()xunits, yunitsregistered units, optionalOverride axis units by specifying an instance of amatplotlib.units.ConversionInterface.antialiasedbool, optionalEnable antialiasing, overriding the defaults. For\nfilled contours, the default isFalse. For line contours,\nit is taken fromrcParams[\"lines.antialiased\"](default:True).nchunkint >= 0, optionalIf 0, no subdivision of the domain. Specify", "doc_id": "8c6e7a60-e6e4-4389-b2c5-5e32fbcc90fc", "embedding": null, "doc_hash": "76740c59d0e824dff97676f48faaf1ed0a7e2321a3237f1a485fb2339f67cac0", "extra_info": null, "node_info": {"start": 2888, "end": 6072, "_node_type": "1"}, "relationships": {"1": "c77e149d-83c9-412a-a38c-a78868c482ef", "2": "dd1bdbf3-523b-4b0a-be65-d69fe81bfefe", "3": "d6d10b70-22c7-4fd3-9dcc-d9526659a281"}}, "__type__": "1"}, "d6d10b70-22c7-4fd3-9dcc-d9526659a281": {"__data__": {"text": "yunitsregistered units, optionalOverride axis units by specifying an instance of amatplotlib.units.ConversionInterface.antialiasedbool, optionalEnable antialiasing, overriding the defaults. For\nfilled contours, the default isFalse. For line contours,\nit is taken fromrcParams[\"lines.antialiased\"](default:True).nchunkint >= 0, optionalIf 0, no subdivision of the domain. Specify a positive integer to\ndivide the domain into subdomains ofnchunkbynchunkquads.\nChunking reduces the maximum length of polygons generated by the\ncontouring algorithm which reduces the rendering workload passed\non to the backend and also requires slightly less RAM. It can\nhowever introduce rendering artifacts at chunk boundaries depending\non the backend, theantialiasedflag and value ofalpha.linewidthsfloat or array-like, default:rcParams[\"contour.linewidth\"](default:None)Only applies tocontour.The line width of the contour lines.If a number, all levels will be plotted with this linewidth.If a sequence, the levels in ascending order will be plotted with\nthe linewidths in the order specified.If None, this falls back torcParams[\"lines.linewidth\"](default:1.5).linestyles{None, 'solid', 'dashed', 'dashdot', 'dotted'}, optionalOnly applies tocontour.IflinestylesisNone, the default is 'solid' unless the lines are\nmonochrome. In that case, negative contours will instead take their\nlinestyle from thenegative_linestylesargument.linestylescan also be an iterable of the above strings specifying a set\nof linestyles to be used. If this iterable is shorter than the number of\ncontour levels it will be repeated as necessary.negative_linestyles{None, 'solid', 'dashed', 'dashdot', 'dotted'}, optionalOnly applies tocontour.IflinestylesisNoneand the lines are monochrome, this argument\nspecifies the line style for negative contours.Ifnegative_linestylesisNone, the default is taken fromrcParams[\"contour.negative_linestyles\"].negative_linestylescan also be an iterable of the above strings\nspecifying a set of linestyles to be used. If this iterable is shorter than\nthe number of contour levels it will be repeated as necessary.hatcheslist[str], optionalOnly applies tocontourf.A list of cross hatch patterns to use on the filled areas.\nIf None, no hatching will be added to the contour.\nHatching is supported in the PostScript, PDF, SVG and Agg\nbackends only.algorithm{'mpl2005', 'mpl2014', 'serial', 'threaded'}, optionalWhich contouring algorithm to use to calculate the contour lines and\npolygons. The algorithms are implemented inContourPy, consult theContourPy documentationfor\nfurther information.The default is taken fromrcParams[\"contour.algorithm\"](default:'mpl2014').clip_pathPatchorPathorTransformedPathSet the clip path. Seeset_clip_path.New in version 3.8.dataindexable object, optionalIf given, all parameters also accept a strings, which is\ninterpreted asdata[s](unless this raises an exception).Notescontourfdiffers from the MATLAB version in that it does not draw\nthe polygon edges. To draw edges, add line contours with calls tocontour.contourffills intervals that are closed at the top; that is, for\nboundariesz1andz2, the filled region is:z1<Z<=z2except for the lowest interval, which is closed on both sides (i.e.\nit includes the lowest value).contourandcontourfuse amarching squaresalgorithm to\ncompute contour locations. More information can be found inContourPy documentation.Examples usingmatplotlib.axes.Axes.contour#Contour Corner MaskContour Corner MaskContour DemoContour DemoContour ImageContour ImageContour Label DemoContour Label DemoContourf demoContourf demoContourf HatchingContourf HatchingContouring the solution space of optimizationsContouring the solution space of optimizationsBlend transparency with", "doc_id": "d6d10b70-22c7-4fd3-9dcc-d9526659a281", "embedding": null, "doc_hash": "1081c6d36e54fa4ca65203cb069241d41cf1185b0a518d4bdab4da161240e4a4", "extra_info": null, "node_info": {"start": 6313, "end": 10035, "_node_type": "1"}, "relationships": {"1": "c77e149d-83c9-412a-a38c-a78868c482ef", "2": "8c6e7a60-e6e4-4389-b2c5-5e32fbcc90fc", "3": "177ea3c1-968d-4d3c-a20a-f6b22f741d26"}}, "__type__": "1"}, "177ea3c1-968d-4d3c-a20a-f6b22f741d26": {"__data__": {"text": "with calls tocontour.contourffills intervals that are closed at the top; that is, for\nboundariesz1andz2, the filled region is:z1<Z<=z2except for the lowest interval, which is closed on both sides (i.e.\nit includes the lowest value).contourandcontourfuse amarching squaresalgorithm to\ncompute contour locations. More information can be found inContourPy documentation.Examples usingmatplotlib.axes.Axes.contour#Contour Corner MaskContour Corner MaskContour DemoContour DemoContour ImageContour ImageContour Label DemoContour Label DemoContourf demoContourf demoContourf HatchingContourf HatchingContouring the solution space of optimizationsContouring the solution space of optimizationsBlend transparency with color in 2D imagesBlend transparency with color in 2D imagesContour plot of irregularly spaced dataContour plot of irregularly spaced dataPatheffect DemoPatheffect DemoTickedStroke patheffectTickedStroke patheffectPlot contour (level) curves in 3DPlot contour (level) curves in 3DPlot contour (level) curves in 3D using the extend3d optionPlot contour (level) curves in 3D using the extend3d optionProject contour profiles onto a graphProject contour profiles onto a graphcontour(X, Y, Z)contour(X, Y, Z)", "doc_id": "177ea3c1-968d-4d3c-a20a-f6b22f741d26", "embedding": null, "doc_hash": "696e7776293126f9bbc7c2a5d1de707e1780829a014e33d3727737fe3c9d51d1", "extra_info": null, "node_info": {"start": 9668, "end": 10882, "_node_type": "1"}, "relationships": {"1": "c77e149d-83c9-412a-a38c-a78868c482ef", "2": "d6d10b70-22c7-4fd3-9dcc-d9526659a281"}}, "__type__": "1"}, "910a44c9-8ec0-4d93-8fd4-c887dbd6ac93": {"__data__": {"text": "\u3010Name\u3011matplotlib\u3010Chapter\u3011matplotlib.axes\u3010Section\u3011matplotlib.axes.Axes.contourf\u3010Content\u3011matplotlib.axes.Axes.contourf#Axes.contourf(*args,data=None,**kwargs)[source]#Plot filled contours.Call signature:contourf([X,Y,]Z,[levels],**kwargs)contourandcontourfdraw contour lines and filled contours,\nrespectively. Except as noted, function signatures and return values\nare the same for both versions.Parameters:X, Yarray-like, optionalThe coordinates of the values inZ.XandYmust both be 2D with the same shape asZ(e.g.\ncreated vianumpy.meshgrid), or they must both be 1-D such\nthatlen(X)==Nis the number of columns inZandlen(Y)==Mis the number of rows inZ.XandYmust both be ordered monotonically.If not given, they are assumed to be integer indices, i.e.X=range(N),Y=range(M).Z(M, N) array-likeThe height values over which the contour is drawn. Color-mapping is\ncontrolled bycmap,norm,vmin, andvmax.levelsint or array-like, optionalDetermines the number and positions of the contour lines / regions.If an intn, useMaxNLocator, which tries\nto automatically choose no more thann+1\"nice\" contour levels\nbetween minimum and maximum numeric values ofZ.If array-like, draw contour lines at the specified levels.\nThe values must be in increasing order.Returns:QuadContourSetOther Parameters:corner_maskbool, default:rcParams[\"contour.corner_mask\"](default:True)Enable/disable corner masking, which only has an effect ifZis\na masked array. IfFalse, any quad touching a masked point is\nmasked out. IfTrue, only the triangular corners of quads\nnearest those points are always masked out, other triangular\ncorners comprising three unmasked points are contoured as usual.colorscolor string or sequence of colors, optionalThe colors of the levels, i.e. the lines forcontourand the\nareas forcontourf.The sequence is cycled for the levels in ascending order. If the\nsequence is shorter than the number of levels, it's repeated.As a shortcut, single color strings may be used in place of\none-element lists, i.e.'red'instead of['red']to color\nall levels with the same color. This shortcut does only work for\ncolor strings, not for other ways of specifying colors.By default (valueNone), the colormap specified bycmapwill be used.alphafloat, default: 1The alpha blending value, between 0 (transparent) and 1 (opaque).cmapstr orColormap, default:rcParams[\"image.cmap\"](default:'viridis')The Colormap instance or registered colormap name used to map scalar data\nto colors.This parameter is ignored ifcolorsis set.normstr orNormalize, optionalThe normalization method used to scale scalar data to the [0, 1] range\nbefore mapping to colors usingcmap. By default, a linear scaling is\nused, mapping the lowest value to 0 and the highest to 1.If given, this can be one of the following:An instance ofNormalizeor one of its subclasses\n(seeColormap Normalization).A scale name, i.e. one of \"linear\", \"log\", \"symlog\", \"logit\", etc. For a\nlist of available scales, callmatplotlib.scale.get_scale_names().\nIn that case, a suitableNormalizesubclass is dynamically generated\nand instantiated.This parameter is ignored ifcolorsis set.vmin, vmaxfloat, optionalWhen using scalar data and no explicitnorm,vminandvmaxdefine\nthe data range that the colormap covers. By default, the colormap covers\nthe complete value range of the supplied data. It is an error to usevmin/vmaxwhen anorminstance is given (but using astrnormname together withvmin/vmaxis acceptable).Ifvminorvmaxare not given, the default", "doc_id": "910a44c9-8ec0-4d93-8fd4-c887dbd6ac93", "embedding": null, "doc_hash": "2333f1c71c19d554822a38b9295b6362d41738cfe2e728f5c5c3c33935102740", "extra_info": null, "node_info": {"start": 0, "end": 3458, "_node_type": "1"}, "relationships": {"1": "78e67e89-def0-471d-b7d9-12116b376314", "3": "98ccca12-40fb-4182-9957-9e5635471562"}}, "__type__": "1"}, "98ccca12-40fb-4182-9957-9e5635471562": {"__data__": {"text": "its subclasses\n(seeColormap Normalization).A scale name, i.e. one of \"linear\", \"log\", \"symlog\", \"logit\", etc. For a\nlist of available scales, callmatplotlib.scale.get_scale_names().\nIn that case, a suitableNormalizesubclass is dynamically generated\nand instantiated.This parameter is ignored ifcolorsis set.vmin, vmaxfloat, optionalWhen using scalar data and no explicitnorm,vminandvmaxdefine\nthe data range that the colormap covers. By default, the colormap covers\nthe complete value range of the supplied data. It is an error to usevmin/vmaxwhen anorminstance is given (but using astrnormname together withvmin/vmaxis acceptable).Ifvminorvmaxare not given, the default color scaling is based onlevels.This parameter is ignored ifcolorsis set.origin{None, 'upper', 'lower', 'image'}, default: NoneDetermines the orientation and exact position ofZby specifying\nthe position ofZ[0,0]. This is only relevant, ifX,Yare not given.None:Z[0,0]is at X=0, Y=0 in the lower left corner.'lower':Z[0,0]is at X=0.5, Y=0.5 in the lower left corner.'upper':Z[0,0]is at X=N+0.5, Y=0.5 in the upper left\ncorner.'image': Use the value fromrcParams[\"image.origin\"](default:'upper').extent(x0, x1, y0, y1), optionalIforiginis notNone, thenextentis interpreted as inimshow: it gives the outer pixel boundaries. In this case, the\nposition of Z[0, 0] is the center of the pixel, not a corner. IforiginisNone, then (x0,y0) is the position of Z[0, 0],\nand (x1,y1) is the position of Z[-1, -1].This argument is ignored ifXandYare specified in the call\nto contour.locatorticker.Locator subclass, optionalThe locator is used to determine the contour levels if they\nare not given explicitly vialevels.\nDefaults toMaxNLocator.extend{'neither', 'both', 'min', 'max'}, default: 'neither'Determines thecontourf-coloring of values that are outside thelevelsrange.If 'neither', values outside thelevelsrange are not colored.\nIf 'min', 'max' or 'both', color the values below, above or below\nand above thelevelsrange.Values belowmin(levels)and abovemax(levels)are mapped\nto the under/over values of theColormap. Note that most\ncolormaps do not have dedicated colors for these by default, so\nthat the over and under values are the edge values of the colormap.\nYou may want to set these values explicitly usingColormap.set_underandColormap.set_over.NoteAn existingQuadContourSetdoes not get notified if\nproperties of its colormap are changed. Therefore, an explicit\ncallQuadContourSet.changed()is needed after modifying the\ncolormap. The explicit call can be left out, if a colorbar is\nassigned to theQuadContourSetbecause it internally callsQuadContourSet.changed().Example:x=np.arange(1,10)y=x.reshape(-1,1)h=x*ycs=plt.contourf(h,levels=[10,30,50],colors=['#808080','#A0A0A0','#C0C0C0'],extend='both')cs.cmap.set_over('red')cs.cmap.set_under('blue')cs.changed()xunits, yunitsregistered units, optionalOverride axis units by specifying an instance of amatplotlib.units.ConversionInterface.antialiasedbool, optionalEnable antialiasing, overriding the defaults. For\nfilled contours, the default isFalse. For line contours,\nit is taken fromrcParams[\"lines.antialiased\"](default:True).nchunkint >= 0, optionalIf 0,", "doc_id": "98ccca12-40fb-4182-9957-9e5635471562", "embedding": null, "doc_hash": "5ff366d868e5336a5b4df4fe14d9c128b6f575ebbd3865975dda4f723f5bd75b", "extra_info": null, "node_info": {"start": 2865, "end": 6039, "_node_type": "1"}, "relationships": {"1": "78e67e89-def0-471d-b7d9-12116b376314", "2": "910a44c9-8ec0-4d93-8fd4-c887dbd6ac93", "3": "e98536dd-ce4b-4063-bcdf-70fb87608e35"}}, "__type__": "1"}, "e98536dd-ce4b-4063-bcdf-70fb87608e35": {"__data__": {"text": "yunitsregistered units, optionalOverride axis units by specifying an instance of amatplotlib.units.ConversionInterface.antialiasedbool, optionalEnable antialiasing, overriding the defaults. For\nfilled contours, the default isFalse. For line contours,\nit is taken fromrcParams[\"lines.antialiased\"](default:True).nchunkint >= 0, optionalIf 0, no subdivision of the domain. Specify a positive integer to\ndivide the domain into subdomains ofnchunkbynchunkquads.\nChunking reduces the maximum length of polygons generated by the\ncontouring algorithm which reduces the rendering workload passed\non to the backend and also requires slightly less RAM. It can\nhowever introduce rendering artifacts at chunk boundaries depending\non the backend, theantialiasedflag and value ofalpha.linewidthsfloat or array-like, default:rcParams[\"contour.linewidth\"](default:None)Only applies tocontour.The line width of the contour lines.If a number, all levels will be plotted with this linewidth.If a sequence, the levels in ascending order will be plotted with\nthe linewidths in the order specified.If None, this falls back torcParams[\"lines.linewidth\"](default:1.5).linestyles{None, 'solid', 'dashed', 'dashdot', 'dotted'}, optionalOnly applies tocontour.IflinestylesisNone, the default is 'solid' unless the lines are\nmonochrome. In that case, negative contours will instead take their\nlinestyle from thenegative_linestylesargument.linestylescan also be an iterable of the above strings specifying a set\nof linestyles to be used. If this iterable is shorter than the number of\ncontour levels it will be repeated as necessary.negative_linestyles{None, 'solid', 'dashed', 'dashdot', 'dotted'}, optionalOnly applies tocontour.IflinestylesisNoneand the lines are monochrome, this argument\nspecifies the line style for negative contours.Ifnegative_linestylesisNone, the default is taken fromrcParams[\"contour.negative_linestyles\"].negative_linestylescan also be an iterable of the above strings\nspecifying a set of linestyles to be used. If this iterable is shorter than\nthe number of contour levels it will be repeated as necessary.hatcheslist[str], optionalOnly applies tocontourf.A list of cross hatch patterns to use on the filled areas.\nIf None, no hatching will be added to the contour.\nHatching is supported in the PostScript, PDF, SVG and Agg\nbackends only.algorithm{'mpl2005', 'mpl2014', 'serial', 'threaded'}, optionalWhich contouring algorithm to use to calculate the contour lines and\npolygons. The algorithms are implemented inContourPy, consult theContourPy documentationfor\nfurther information.The default is taken fromrcParams[\"contour.algorithm\"](default:'mpl2014').clip_pathPatchorPathorTransformedPathSet the clip path. Seeset_clip_path.New in version 3.8.dataindexable object, optionalIf given, all parameters also accept a strings, which is\ninterpreted asdata[s](unless this raises an exception).Notescontourfdiffers from the MATLAB version in that it does not draw\nthe polygon edges. To draw edges, add line contours with calls tocontour.contourffills intervals that are closed at the top; that is, for\nboundariesz1andz2, the filled region is:z1<Z<=z2except for the lowest interval, which is closed on both sides (i.e.\nit includes the lowest value).contourandcontourfuse amarching squaresalgorithm to\ncompute contour locations. More information can be found inContourPy documentation.Examples usingmatplotlib.axes.Axes.contourf#Contour Corner MaskContour Corner MaskContourf demoContourf demoContourf HatchingContourf HatchingContourf and log color scaleContourf and log color scaleContour plot of irregularly spaced dataContour plot of irregularly spaced datapcolormeshpcolormeshTriinterp", "doc_id": "e98536dd-ce4b-4063-bcdf-70fb87608e35", "embedding": null, "doc_hash": "c77b3cbb8ee8d1a33e60a7ce9816c49d8d6d003a5e0cc7826c3953604e5ff9d7", "extra_info": null, "node_info": {"start": 6324, "end": 10009, "_node_type": "1"}, "relationships": {"1": "78e67e89-def0-471d-b7d9-12116b376314", "2": "98ccca12-40fb-4182-9957-9e5635471562", "3": "0efc7043-1f40-4dcd-95d1-5e97faaf7eb2"}}, "__type__": "1"}, "0efc7043-1f40-4dcd-95d1-5e97faaf7eb2": {"__data__": {"text": "with calls tocontour.contourffills intervals that are closed at the top; that is, for\nboundariesz1andz2, the filled region is:z1<Z<=z2except for the lowest interval, which is closed on both sides (i.e.\nit includes the lowest value).contourandcontourfuse amarching squaresalgorithm to\ncompute contour locations. More information can be found inContourPy documentation.Examples usingmatplotlib.axes.Axes.contourf#Contour Corner MaskContour Corner MaskContourf demoContourf demoContourf HatchingContourf HatchingContourf and log color scaleContourf and log color scaleContour plot of irregularly spaced dataContour plot of irregularly spaced datapcolormeshpcolormeshTriinterp DemoTriinterp Demo3D box surface plot3D box surface plotFilled contoursFilled contoursProject filled contour onto a graphProject filled contour onto a graphcontourf(X, Y, Z)contourf(X, Y, Z)", "doc_id": "0efc7043-1f40-4dcd-95d1-5e97faaf7eb2", "embedding": null, "doc_hash": "a38ccff0db7c0cd70562bf0c97ad2aa5a5a33809cb68d9255cea22034abfced1", "extra_info": null, "node_info": {"start": 9647, "end": 10510, "_node_type": "1"}, "relationships": {"1": "78e67e89-def0-471d-b7d9-12116b376314", "2": "e98536dd-ce4b-4063-bcdf-70fb87608e35"}}, "__type__": "1"}, "4a3618c9-21fd-4634-b132-80c548c3b6fb": {"__data__": {"text": "\u3010Name\u3011matplotlib\u3010Chapter\u3011matplotlib.axes\u3010Section\u3011matplotlib.axes.Axes.clear\u3010Content\u3011matplotlib.axes.Axes.clear#Axes.clear()[source]#Clear the Axes.Examples usingmatplotlib.axes.Axes.clear#pyplot animationpyplot animationData browserData browser", "doc_id": "4a3618c9-21fd-4634-b132-80c548c3b6fb", "embedding": null, "doc_hash": "d6bcba05a3d24c338452abf7642a7d28d00fdf14f21784fb15210b731e2dc294", "extra_info": null, "node_info": {"start": 0, "end": 244, "_node_type": "1"}, "relationships": {"1": "03f73099-1e5c-4c67-927c-907a9b3195b0"}}, "__type__": "1"}, "b03a46ed-0050-4775-ace9-290a49881871": {"__data__": {"text": "\u3010Name\u3011matplotlib\u3010Chapter\u3011matplotlib.axes\u3010Section\u3011matplotlib.axes.Axes.cla\u3010Content\u3011matplotlib.axes.Axes.cla#Axes.cla()[source]#Clear the Axes.", "doc_id": "b03a46ed-0050-4775-ace9-290a49881871", "embedding": null, "doc_hash": "a809adb65f6e6fab7c4e7ccc359672481b2ed533e72ba6b18b0fa4c508ec2f50", "extra_info": null, "node_info": {"start": 0, "end": 141, "_node_type": "1"}, "relationships": {"1": "91d4a183-d833-48e2-8ca7-14e0731f9c2d"}}, "__type__": "1"}, "23dd8a35-74f0-4a3f-a04f-f8d388f7ef75": {"__data__": {"text": "\u3010Name\u3011matplotlib\u3010Chapter\u3011matplotlib.axes\u3010Section\u3011matplotlib.axes.Axes.axhline\u3010Content\u3011matplotlib.axes.Axes.axhline#Axes.axhline(y=0,xmin=0,xmax=1,**kwargs)[source]#Add a horizontal line across the Axes.Parameters:yfloat, default: 0y position in data coordinates of the horizontal line.xminfloat, default: 0Should be between 0 and 1, 0 being the far left of the plot, 1 the\nfar right of the plot.xmaxfloat, default: 1Should be between 0 and 1, 0 being the far left of the plot, 1 the\nfar right of the plot.Returns:Line2DOther Parameters:**kwargsValid keyword arguments areLine2Dproperties, except for\n'transform':PropertyDescriptionagg_filtera filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array and two offsets from the bottom left corner of the imagealphascalar or Noneanimatedboolantialiasedor aaboolclip_boxBboxBaseor Noneclip_onboolclip_pathPatch or (Path, Transform) or Nonecoloror ccolordash_capstyleCapStyleor {'butt', 'projecting', 'round'}dash_joinstyleJoinStyleor {'miter', 'round', 'bevel'}dashessequence of floats (on/off ink in points) or (None, None)data(2, N) array or two 1D arraysdrawstyleor ds{'default', 'steps', 'steps-pre', 'steps-mid', 'steps-post'}, default: 'default'figureFigurefillstyle{'full', 'left', 'right', 'bottom', 'top', 'none'}gapcolorcolor or Nonegidstrin_layoutboollabelobjectlinestyleor ls{'-', '--', '-.', ':', '', (offset, on-off-seq), ...}linewidthor lwfloatmarkermarker style string,PathorMarkerStylemarkeredgecoloror meccolormarkeredgewidthor mewfloatmarkerfacecoloror mfccolormarkerfacecoloraltor mfcaltcolormarkersizeor msfloatmarkeveryNone or int or (int, int) or slice or list[int] or float or (float, float) or list[bool]mouseoverboolpath_effectslist ofAbstractPathEffectpickerfloat or callable[[Artist, Event], tuple[bool, dict]]pickradiusfloatrasterizedboolsketch_params(scale: float, length: float, randomness: float)snapbool or Nonesolid_capstyleCapStyleor {'butt', 'projecting', 'round'}solid_joinstyleJoinStyleor {'miter', 'round', 'bevel'}transformunknownurlstrvisibleboolxdata1D arrayydata1D arrayzorderfloatSee alsohlinesAdd horizontal lines in data coordinates.axhspanAdd a horizontal span (rectangle) across the axis.axlineAdd a line with an arbitrary slope.Examplesdraw a thick red hline at 'y' = 0 that spans the xrange:>>>axhline(linewidth=4,color='r')draw a default hline at 'y' = 1 that spans the xrange:>>>axhline(y=1)draw a default hline at 'y' = .5 that spans the middle half of\nthe xrange:>>>axhline(y=.5,xmin=0.25,xmax=0.75)Examples usingmatplotlib.axes.Axes.axhline#Filling the area between linesFilling the area between linesShade regions defined by a logical mask using fill_betweenShade regions defined by a logical mask using fill_betweenaxhspan Demoaxhspan DemoPlot a confidence ellipse of a two-dimensional datasetPlot a confidence ellipse of a two-dimensional datasetMultilineMultilineUsetex Baseline TestUsetex Baseline TestColors in the default property cycleColors in the default property cycleInfinite linesInfinite linesCross-hair cursorCross-hair cursor", "doc_id": "23dd8a35-74f0-4a3f-a04f-f8d388f7ef75", "embedding": null, "doc_hash": "1e679024f3f1d98ebe9efec8a16b3d662d064a6cf7472259df04f87416d93cec", "extra_info": null, "node_info": {"start": 0, "end": 3084, "_node_type": "1"}, "relationships": {"1": "a5b0dccd-0c60-4bd8-a56d-c1e3f1cc6156"}}, "__type__": "1"}, "6346cdcc-7674-44e0-9476-195135816cb6": {"__data__": {"text": "\u3010Name\u3011matplotlib\u3010Chapter\u3011matplotlib.axes\u3010Section\u3011matplotlib.axes.Axes.axvline\u3010Content\u3011matplotlib.axes.Axes.axvline#Axes.axvline(x=0,ymin=0,ymax=1,**kwargs)[source]#Add a vertical line across the Axes.Parameters:xfloat, default: 0x position in data coordinates of the vertical line.yminfloat, default: 0Should be between 0 and 1, 0 being the bottom of the plot, 1 the\ntop of the plot.ymaxfloat, default: 1Should be between 0 and 1, 0 being the bottom of the plot, 1 the\ntop of the plot.Returns:Line2DOther Parameters:**kwargsValid keyword arguments areLine2Dproperties, except for\n'transform':PropertyDescriptionagg_filtera filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array and two offsets from the bottom left corner of the imagealphascalar or Noneanimatedboolantialiasedor aaboolclip_boxBboxBaseor Noneclip_onboolclip_pathPatch or (Path, Transform) or Nonecoloror ccolordash_capstyleCapStyleor {'butt', 'projecting', 'round'}dash_joinstyleJoinStyleor {'miter', 'round', 'bevel'}dashessequence of floats (on/off ink in points) or (None, None)data(2, N) array or two 1D arraysdrawstyleor ds{'default', 'steps', 'steps-pre', 'steps-mid', 'steps-post'}, default: 'default'figureFigurefillstyle{'full', 'left', 'right', 'bottom', 'top', 'none'}gapcolorcolor or Nonegidstrin_layoutboollabelobjectlinestyleor ls{'-', '--', '-.', ':', '', (offset, on-off-seq), ...}linewidthor lwfloatmarkermarker style string,PathorMarkerStylemarkeredgecoloror meccolormarkeredgewidthor mewfloatmarkerfacecoloror mfccolormarkerfacecoloraltor mfcaltcolormarkersizeor msfloatmarkeveryNone or int or (int, int) or slice or list[int] or float or (float, float) or list[bool]mouseoverboolpath_effectslist ofAbstractPathEffectpickerfloat or callable[[Artist, Event], tuple[bool, dict]]pickradiusfloatrasterizedboolsketch_params(scale: float, length: float, randomness: float)snapbool or Nonesolid_capstyleCapStyleor {'butt', 'projecting', 'round'}solid_joinstyleJoinStyleor {'miter', 'round', 'bevel'}transformunknownurlstrvisibleboolxdata1D arrayydata1D arrayzorderfloatSee alsovlinesAdd vertical lines in data coordinates.axvspanAdd a vertical span (rectangle) across the axis.axlineAdd a line with an arbitrary slope.Examplesdraw a thick red vline atx= 0 that spans the yrange:>>>axvline(linewidth=4,color='r')draw a default vline atx= 1 that spans the yrange:>>>axvline(x=1)draw a default vline atx= .5 that spans the middle half of\nthe yrange:>>>axvline(x=.5,ymin=0.25,ymax=0.75)Examples usingmatplotlib.axes.Axes.axvline#axhspan Demoaxhspan DemoPlot a confidence ellipse of a two-dimensional datasetPlot a confidence ellipse of a two-dimensional datasetUsetex Baseline TestUsetex Baseline TestColors in the default property cycleColors in the default property cycleInfinite linesInfinite linesCross-hair cursorCross-hair cursorSkewT-logP diagram: using transforms and custom projectionsSkewT-logP diagram: using transforms and custom projectionsThe Lifecycle of a PlotThe Lifecycle of a PlotAnnotationsAnnotations", "doc_id": "6346cdcc-7674-44e0-9476-195135816cb6", "embedding": null, "doc_hash": "45cbf8c0efb6ecbe43b0a16bc2fa8b8735a927c1d8a9bd08a19f3ea70b4af693", "extra_info": null, "node_info": {"start": 0, "end": 3040, "_node_type": "1"}, "relationships": {"1": "62f25b1d-2f8a-430a-a061-7cdd42e07341"}}, "__type__": "1"}}}